version: '3.7'

services:
  db:
    image: postgres:12-alpine
    env_file:
      - example.env
    volumes:
      - data:/var/lib/postgresql/data/
    restart: always

  backend: &backend
    build:
      context: neobistime/
      dockerfile: ../compose/django.Dockerfile
    image: neobistime-backend
    env_file:
      - example.env
    volumes:
      - media:/usr/src/backend/media/
      - static:/usr/src/backend/static/
    command: sh -c "python manage.py migrate && python manage.py collectstatic --no-input &&
                    gunicorn -b 0.0.0.0:8000 -w 3 --log-level info neobistime.wsgi:application"
    depends_on:
      - db
    restart: always

  nginx:
    build:
      context: .
      dockerfile: compose/swag.Dockerfile
    cap_add:
      - NET_ADMIN
    env_file:
      - example.env
    volumes:
      - media:/usr/media/:ro
      - static:/usr/static/:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.8.3-alpine
    restart: always

  celery-worker:
    <<: *backend
    image: celery-worker
    volumes: []
    command: ["celery", "worker", "-A", "neobistime", "--loglevel", "INFO"]
    ports: []
    depends_on:
      - rabbitmq
      - db
    restart: on-failure

   front-end:
     build:
       context: .
       dockerfile: ./compose/react.Dockerfile
     image: neobistime-front
     depends_on:
       - backend

volumes:
  data:
  media:
  static:

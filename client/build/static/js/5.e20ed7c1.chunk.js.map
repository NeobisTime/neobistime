{"version":3,"sources":["components/pages/rooms/rooms-empty.tsx","images/pages/empty-room.png","components/pages/today-timetable/today-timetable.tsx","images/pages/procent_coming.svg","images/pages/events_created.svg","images/pages/peoples_average.svg","images/pages/admin-stat-total-events.svg","images/pages/admin-stat-percent-coming.svg","images/pages/admin-stat-leute.svg","components/pages/admin/admin-statistics/admin-stat.tsx","components/pages/admin/admin-statistics/index.js"],"names":["EmptyRoom","className","to","src","emptyRoom","alt","module","exports","TodayList","events","map","event","startDate","Date","start","endDate","end","id","key","today","getTime","title","getHours","getMinutes","finalDate","getMonth","getDate","getFullYear","withNavbarContainer","props","useState","todayEvents","setTodayEvents","useEffect","API","getTodaySchedule","then","requestData","data","withDataContainer","department","setDepartment","month","setMonth","year","setYear","departmentData","setDepartmentData","generalStat","setGeneralStat","departmentsChartData","setDepartmentsChartData","departmentsChartLabels","setDepartmentsChartLabels","doughnutData","datasets","average_attendance","backgroundColor","labels","departmentChartData","getStatByDepartment","getGeneralStat","getStatForAllDepartments","allDepartmentsData","keys","values","push","percentage_of_attendance_at_events","procent","quantity_of_all_events","average_number_of_people_per_event","people","quantity_of_people","placeholder","options","departments","required","onChange","e","value","yearsMonth","onClick","width","height","responsive","maintainAspectRatio","legend","display","all","style","boxSizing","padding","color","quantity_of_events_by_departments","marginBottom","percentComing","averagePeople","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","AdminStat"],"mappings":"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","file":"static/js/5.e20ed7c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport emptyRoom from \"../../../images/pages/empty-room.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EmptyRoom = () => {\r\n  return (\r\n    <div className=\"empty-room\">\r\n      <p className=\"empty-room__text\">Еще никто не бронировал эту комнату.</p>\r\n      <p className=\"empty-room__text\"> Вы можете быть первыми!</p>\r\n      <div className=\"empty-room__block\">\r\n        <Link to=\"/admin/create_event\" className=\"link\">\r\n          <button className=\"empty-room__button button\">Забронировать</button>\r\n        </Link>\r\n        <img src={emptyRoom} className=\"empty-room__image\" alt=\"empty rooom\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyRoom;\r\n","module.exports = __webpack_public_path__ + \"static/media/empty-room.9c157e05.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\r\nimport API from \"../../../API\";\r\nimport EmptyRoom from \"../rooms/rooms-empty\";\r\n\r\n// TODO: todayList нужно сделать переиспользуемым компонентом, он используется на  этой странице и на admin-end-events\r\n\r\ntype TodayListProps = {\r\n  events: object[];\r\n};\r\n\r\nexport const TodayList = ({ events }: TodayListProps) => {\r\n  return (\r\n    <div className=\"today__list\">\r\n      {events ? (\r\n        events.map((event: any) => {\r\n          const startDate = new Date(event.start);\r\n          const endDate = new Date(event.end);\r\n          return (\r\n            <Link to={`/today/${event.id}`} key={event.id} className=\"link\">\r\n              <div className=\"today__list-item\">\r\n                <div className=\"today__list-item-answer\">\r\n                  <div\r\n                    className={\r\n                      +today.getTime() > +startDate.getTime()\r\n                        ? \"today__list-item-answer_circle_red\"\r\n                        : \"today__list-item-answer_circle\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n                <div className=\"today__list-item-content\">\r\n                  <p className=\"today__list-item-text\">{event.title}</p>\r\n                  <p className=\"today__list-item-time\">\r\n                    {startDate.getHours()}:\r\n                    {(startDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n                      startDate.getMinutes()}{\" \"}\r\n                    - {endDate.getHours()}:\r\n                    {(endDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n                      endDate.getMinutes()}{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })\r\n      ) : (\r\n        <EmptyRoom />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nlet months = [\r\n  \"Январь\",\r\n  \"Февраль\",\r\n  \"Март\",\r\n  \"Апрель\",\r\n  \"Май\",\r\n  \"Июнь\",\r\n  \"Июль\",\r\n  \"Август\",\r\n  \"Cентябрь\",\r\n  \"Октябрь\",\r\n  \"Ноябрь\",\r\n  \"Декабрь\",\r\n];\r\nlet today = new Date();\r\nexport let finalDate = `${\r\n  months[today.getMonth()]\r\n}${\" \"}${today.getDate()}  ${today.getFullYear()}`;\r\n\r\nconst TodayTimetable = (props: any) => {\r\n  const [todayEvents, setTodayEvents] = useState([]);\r\n  useEffect(() => {\r\n    API.getTodaySchedule().then((requestData) => {\r\n      setTodayEvents(requestData.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <p className=\"today__title\">{finalDate}</p>\r\n      <TodayList events={todayEvents} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withNavbarContainer(TodayTimetable);\r\n","module.exports = __webpack_public_path__ + \"static/media/procent_coming.29d4caf0.svg\";","module.exports = __webpack_public_path__ + \"static/media/events_created.8b3d6b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/peoples_average.2ae4c297.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin-stat-total-events.4f0b3f66.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin-stat-percent-coming.7c9e1509.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin-stat-leute.920858cd.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport Select from \"react-select\";\r\n\r\n// today date\r\nimport { finalDate } from \"../../../pages/today-timetable/today-timetable\";\r\n\r\n// info block icons\r\nimport procent from \"../../../../images/pages/procent_coming.svg\";\r\nimport events from \"../../../../images/pages/events_created.svg\";\r\nimport people from \"../../../../images/pages/peoples_average.svg\";\r\nimport time from \"../../../../images/pages/time_average.svg\";\r\nimport withNavbarContainer from \"../../../../HOC/withNavbar\";\r\nimport withDataContainer from \"../../../../HOC/withData\";\r\nimport all from \"../../../../images/pages/admin-stat-total-events.svg\";\r\nimport percentComing from \"../../../../images/pages/admin-stat-percent-coming.svg\";\r\nimport averagePeople from \"../../../../images/pages/admin-stat-leute.svg\";\r\nimport API from \"../../../../API\";\r\n\r\ntype GeneralStatsType = {\r\n  quantity_of_people: number;\r\n  quantity_of_all_events: number;\r\n  average_number_of_people_per_event: number;\r\n  percentage_of_attendance_at_events: number;\r\n};\r\n\r\ntype DepartmentStatsType = {\r\n  average_attendance: number;\r\n  average_number_of_people_per_event: number;\r\n  quantity_of_events_by_departments: number;\r\n  quantity_of_students_by_departments: number;\r\n};\r\n\r\nconst AdminStat = (props: any) => {\r\n  // filltration data\r\n  const [department, setDepartment] = useState<number>(1);\r\n  const [month, setMonth] = useState<number>(1);\r\n  const [year, setYear] = useState<boolean>(true);\r\n\r\n  const [departmentData, setDepartmentData] = useState<\r\n    DepartmentStatsType | any\r\n  >({});\r\n  const [generalStat, setGeneralStat] = useState<GeneralStatsType | any>({});\r\n  const [departmentsChartData, setDepartmentsChartData] = useState([]);\r\n  const [departmentsChartLabels, setDepartmentsChartLabels] = useState([]);\r\n\r\n  const doughnutData = {\r\n    datasets: [\r\n      {\r\n        data: [\r\n          departmentData.average_attendance || 0,\r\n          100 - departmentData.average_attendance || 100,\r\n        ],\r\n        backgroundColor: [\"#F7D154\", \"lightgrey\"],\r\n      },\r\n    ],\r\n    labels: [\"% посещений\", \"% пропусков\"],\r\n  };\r\n  const departmentChartData = {\r\n    datasets: [\r\n      {\r\n        data: departmentsChartData,\r\n        backgroundColor: [\r\n          \"#6C63FF\",\r\n          \"#1FEAC5\",\r\n          \"#FBBEBE\",\r\n          \"#87DBEC\",\r\n          \"purple\",\r\n          \"#F7D154\",\r\n          \"orange\",\r\n          \"green\",\r\n          \"red\",\r\n        ],\r\n      },\r\n    ],\r\n    labels: departmentsChartLabels,\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getStatByDepartment(department, month, year).then((data: any) => {\r\n      setDepartmentData(data.data);\r\n    });\r\n  }, [month, year, department]);\r\n\r\n  const handleDepartmentChange = (e: any) => {\r\n    setDepartment(e.value);\r\n  };\r\n\r\n  const handleMonthChange = (e: any) => {\r\n    setMonth(+e.value + 1);\r\n    setYear(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getGeneralStat().then((requestData) => {\r\n      setGeneralStat(requestData.data);\r\n    });\r\n    API.getStatForAllDepartments().then((allDepartmentsData) => {\r\n      let data = allDepartmentsData.data;\r\n      // get data to departments chart\r\n      let keys: any = [];\r\n      let values: any = [];\r\n      for (let key in data) {\r\n        keys.push(key);\r\n        values.push(data[key]);\r\n      }\r\n      setDepartmentsChartData(values);\r\n      setDepartmentsChartLabels(keys);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-stat\">\r\n      <div className=\"admin-stat__row\">\r\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_1\">\r\n          <div className=\"d-flex p-1\">\r\n            <div>\r\n              <p className=\"admin-stat__row-info-block-value\">\r\n                {generalStat.percentage_of_attendance_at_events}\r\n              </p>\r\n              <p className=\"admin-stat__row-info-block-text\">\r\n                % посещений мероприятий\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <img\r\n                className=\"admin-stat__row-info-block-img\"\r\n                src={procent}\r\n                alt=\"beautiful content\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\r\n        </div>\r\n\r\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_2\">\r\n          <div className=\"d-flex p-1\">\r\n            <div>\r\n              <p className=\"admin-stat__row-info-block-value\">\r\n                {generalStat.quantity_of_all_events}\r\n              </p>\r\n              <p className=\"admin-stat__row-info-block-text\">\r\n                мероприятий организовано\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <img\r\n                className=\"admin-stat__row-info-block-img\"\r\n                src={events}\r\n                alt=\"beautiful content\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\r\n        </div>\r\n\r\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_3\">\r\n          <div className=\"d-flex p-1\">\r\n            <div>\r\n              <p className=\"admin-stat__row-info-block-value\">\r\n                {generalStat.average_number_of_people_per_event}\r\n              </p>\r\n              <p className=\"admin-stat__row-info-block-text\">людей в среднем</p>\r\n            </div>\r\n            <div>\r\n              <img\r\n                className=\"admin-stat__row-info-block-img\"\r\n                src={people}\r\n                alt=\"beautiful content\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\r\n        </div>\r\n\r\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_4\">\r\n          <div className=\"d-flex p-1\">\r\n            <div>\r\n              <p className=\"admin-stat__row-info-block-value\">\r\n                {generalStat.quantity_of_people}\r\n              </p>\r\n              <p className=\"admin-stat__row-info-block-text\">\r\n                численность Необиса\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <img\r\n                className=\"admin-stat__row-info-block-img\"\r\n                src={people}\r\n                alt=\"beautiful content\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"admin-stat__charts\">\r\n        <div className=\"admin-stat__charts-doughnut\">\r\n          <div className=\"admin-stat__charts-doughnut-filters\">\r\n            <Select\r\n              placeholder=\"Департамент\"\r\n              options={props.departments}\r\n              className=\"admin-stat__charts-doughnut-select\"\r\n              required\r\n              onChange={handleDepartmentChange}\r\n            />\r\n            <Select\r\n              placeholder=\"Месяц\"\r\n              options={props.yearsMonth}\r\n              className=\"admin-stat__charts-doughnut-select\"\r\n              required\r\n              onChange={handleMonthChange}\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                setYear(true);\r\n              }}\r\n              className=\"button admin-stat__charts-doughnut-button_year \"\r\n            >\r\n              Год\r\n            </button>\r\n          </div>\r\n          <div className=\"admin-stat__charts-doughnut-chart\">\r\n            <Doughnut\r\n              data={doughnutData}\r\n              width={250}\r\n              height={250}\r\n              options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true,\r\n                legend: {\r\n                  display: false,\r\n                },\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"personal-office__stat-info\">\r\n            <div className=\"personal-office__stat-info-content\">\r\n              <div className=\"personal-office__stat-info-block\">\r\n                <img\r\n                  className=\"personal-office__stat-info-block-img\"\r\n                  src={all}\r\n                  style={{ boxSizing: \"border-box\", padding: \"10px\" }}\r\n                  alt=\"personal stat logo\"\r\n                />\r\n                <p className=\"personal-office__stat-info-block-text\">\r\n                  Всего мероприятий\r\n                </p>\r\n                <p\r\n                  style={{ color: \"#1070CA\" }}\r\n                  className=\"personal-office__stat-info-block-number\"\r\n                >\r\n                  {departmentData.quantity_of_events_by_departments}\r\n                </p>\r\n              </div>\r\n              <div className=\"personal-office__stat-info-block\">\r\n                <img\r\n                  className=\"personal-office__stat-info-block-img\"\r\n                  style={{\r\n                    boxSizing: \"border-box\",\r\n                    padding: \"10px\",\r\n                    marginBottom: \"2px\",\r\n                  }}\r\n                  src={percentComing}\r\n                  alt=\"personal stat logo\"\r\n                />\r\n                <p className=\"personal-office__stat-info-block-text\">\r\n                  Процент посещений\r\n                </p>\r\n                <p\r\n                  style={{ color: \"#F7D154\" }}\r\n                  className=\"personal-office__stat-info-block-number\"\r\n                >\r\n                  {departmentData.average_attendance}\r\n                </p>\r\n              </div>\r\n              <div className=\"personal-office__stat-info-block\">\r\n                <img\r\n                  className=\"personal-office__stat-info-block-img personal-office__stat-info-block-img_small\"\r\n                  src={averagePeople}\r\n                  alt=\"personal stat logo\"\r\n                />\r\n                <p className=\"personal-office__stat-info-block-text\">\r\n                  людей в среднем\r\n                </p>\r\n                <p\r\n                  style={{ color: \"#1070CA\" }}\r\n                  className=\"personal-office__stat-info-block-number\"\r\n                >\r\n                  {departmentData.average_number_of_people_per_event}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"admin-stat__charts-bar\">\r\n          <p className=\"admin-stat__charts-bar-text\">\r\n            Организовано мероприятий департаментами за все время:\r\n          </p>\r\n          <Bar\r\n            data={departmentChartData}\r\n            width={100}\r\n            height={75}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: true,\r\n              legend: {\r\n                display: false,\r\n              },\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    gridLines: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                ],\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                    },\r\n                    gridLines: {\r\n                      display: false,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withNavbarContainer(withDataContainer(AdminStat), \"admin\");\r\n","import AdminStat from \"./admin-stat.tsx\";\r\n\r\nexport default AdminStat;\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/pages/admin/admin-create-event/hours-scrollbar.tsx","components/pages/admin/admin-create-event/minutes-scrollbar.tsx","components/pages/admin/admin-create-event/admin-create-event.tsx","components/pages/admin/admin-create-event/index.js"],"names":["HoursScrollbar","props","value","setValue","autoHide","autoHideTimeout","autoHideDuration","autoHeight","autoHeightMin","autoHeightMax","thumbMinSize","universal","className","style","width","height","map","number","key","onClick","MinutesScrollbar","withDataContainer","withRouter","eventId","match","params","id","useState","title","setTitle","description","setDescription","image","setImage","departments","setDepartments","Date","startDate","setStartDate","startDateHours","setStartDateHours","startDateMinutes","setStartDateMinutes","endDate","setEndDate","endDateHours","setEndDateHours","endDateMinutes","setEndDateMinutes","address","setAddress","addressDisable","setAddressDisable","place","setPlace","finalUsers","setFinalUsers","usersForSend","setUsersForSend","useEffect","API","getUsers","then","users","preFinalUsers","data","user","email","label","name_surname","getEventInfo","requestData","console","log","start","end","getHours","getMinutes","handleChangeAddress","e","target","updateStartTime","startTime","setHours","getFullYear","getMonth","getDate","updateEndTime","endTime","event","a","preventDefault","start_time","end_time","CheckForAll","find","item","departmentNumbers","usersForSendEmails","formData","FormData","append","String","patchEventChangeData","postEventCreateData","onSubmit","method","encType","htmlFor","type","name","required","onChange","cols","rows","placeholder","margin","readOnly","files","onDayClick","date","selectedDays","checked","undefined","disabled","isMulti","isClearable","isSearchable","options","selectDepartments","classNamePrefix","CreateEventPage"],"mappings":"oOAqEeA,EAlEQ,SAACC,GAAgB,IAC9BC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SA2Bf,OACE,kBAAC,aAAD,CACEC,UAAQ,EACRC,gBAAiB,IACjBC,iBAAkB,IAClBC,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,EACXC,UAAU,4BACVC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,MAE5B,yBAAKH,UAAU,8DAAf,WAvCU,CACZ,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAkBSI,KAAI,SAACC,GACV,OACE,yBACEC,IAAKD,EACLL,UACEK,IAAWf,EACP,oEACA,4BAGNiB,QAAS,WACPhB,EAASc,KAGVA,QC2CEG,EArGU,SAACnB,GAAgB,IAChCC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SA+Df,OACE,kBAAC,aAAD,CACEC,UAAQ,EACRC,gBAAiB,IACjBC,iBAAkB,IAClBC,YAAU,EACVC,cAAe,EACfC,cAAe,IACfC,aAAc,GACdC,WAAW,EACXC,UAAU,4BACVC,MAAO,CAAEC,MAAO,GAAIC,OAAQ,MAE5B,yBAAKH,UAAU,8DAAf,WA3EY,CACd,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAkBWI,KAAI,SAACC,GACZ,OACE,yBACEC,IAAKD,EACLL,UACEK,GAAUf,EACN,oEACA,4BAENiB,QAAS,WACPhB,GAAUc,KAGXA,Q,sBC8TEI,cAAkBC,aAnZT,SAACrB,GACvB,IAAMsB,EAAUtB,EAAMuB,MAAMC,O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","file":"static/js/17.29b8589d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst HoursScrollbar = (props: any) => {\r\n  const { value, setValue } = props;\r\n  const hours = [\r\n    8,\r\n    9,\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    20,\r\n    21,\r\n    22,\r\n    23,\r\n    0,\r\n    1,\r\n    2,\r\n    3,\r\n    4,\r\n    5,\r\n    6,\r\n    7,\r\n  ];\r\n  return (\r\n    <Scrollbars\r\n      autoHide\r\n      autoHideTimeout={1000}\r\n      autoHideDuration={200}\r\n      autoHeight\r\n      autoHeightMin={0}\r\n      autoHeightMax={200}\r\n      thumbMinSize={30}\r\n      universal={true}\r\n      className=\"create-event__form-scroll\"\r\n      style={{ width: 50, height: 200 }}\r\n    >\r\n      <div className=\"create-event__form-number create-event__form-number_active\">\r\n        ч.\r\n      </div>\r\n      {hours.map((number) => {\r\n        return (\r\n          <div\r\n            key={number}\r\n            className={\r\n              number === value\r\n                ? \"create-event__form-number create-event__form-number_active-number\"\r\n                : \"create-event__form-number\"\r\n            }\r\n            // className=\"create-event__form-number\"\r\n            onClick={() => {\r\n              setValue(number);\r\n            }}\r\n          >\r\n            {number}\r\n          </div>\r\n        );\r\n      })}\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default HoursScrollbar;\r\n","import React from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\nconst MinutesScrollbar = (props: any) => {\r\n  const { value, setValue } = props;\r\n  const minutes = [\r\n    '00',\r\n    '01',\r\n    '02',\r\n    '03',\r\n    '04',\r\n    '05',\r\n    '06',\r\n    '07',\r\n    '08',\r\n    '09',\r\n    10,\r\n    11,\r\n    12,\r\n    13,\r\n    14,\r\n    15,\r\n    16,\r\n    17,\r\n    18,\r\n    19,\r\n    20,\r\n    21,\r\n    22,\r\n    23,\r\n    24,\r\n    25,\r\n    26,\r\n    27,\r\n    28,\r\n    29,\r\n    30,\r\n    31,\r\n    32,\r\n    33,\r\n    34,\r\n    35,\r\n    36,\r\n    37,\r\n    38,\r\n    39,\r\n    40,\r\n    41,\r\n    42,\r\n    43,\r\n    44,\r\n    45,\r\n    46,\r\n    47,\r\n    48,\r\n    49,\r\n    50,\r\n    51,\r\n    52,\r\n    53,\r\n    54,\r\n    55,\r\n    56,\r\n    57,\r\n    58,\r\n    59,\r\n  ];\r\n  return (\r\n    <Scrollbars\r\n      autoHide\r\n      autoHideTimeout={1000}\r\n      autoHideDuration={200}\r\n      autoHeight\r\n      autoHeightMin={0}\r\n      autoHeightMax={200}\r\n      thumbMinSize={30}\r\n      universal={true}\r\n      className=\"create-event__form-scroll\"\r\n      style={{ width: 50, height: 200 }}\r\n    >\r\n      <div className=\"create-event__form-number create-event__form-number_active\">\r\n        м.\r\n      </div>\r\n      {minutes.map((number) => {\r\n        return (\r\n          <div\r\n            key={number}\r\n            className={\r\n              number == value\r\n                ? \"create-event__form-number create-event__form-number_active-number\"\r\n                : \"create-event__form-number\"\r\n            }\r\n            onClick={() => {\r\n              setValue(+number);\r\n            }}\r\n          >\r\n            {number}\r\n          </div>\r\n        );\r\n      })}\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default MinutesScrollbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AdminNavbar from \"../admin-navbar\";\r\nimport DayPicker from \"react-day-picker\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport Select from \"react-select\";\r\nimport HoursScrollbar from \"./hours-scrollbar\";\r\nimport MinutesScrollbar from \"./minutes-scrollbar\";\r\nimport withDataContainer from \"../../../../HOC/withData\";\r\nimport API from \"../../../../API\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CreateEventPage = (props: any) => {\r\n  const eventId = props.match.params.id;\r\n\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [image, setImage] = useState<any>([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const [startDate, setStartDate] = useState<Date>(new Date());\r\n  const [startDateHours, setStartDateHours] = useState<number>(-1);\r\n  const [startDateMinutes, setStartDateMinutes] = useState<number>(-1);\r\n\r\n  const [endDate, setEndDate] = useState<Date>(new Date());\r\n  const [endDateHours, setEndDateHours] = useState<number>(-1);\r\n  const [endDateMinutes, setEndDateMinutes] = useState<number>(-1);\r\n\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [addressDisable, setAddressDisable] = useState<boolean>(true);\r\n  const [place, setPlace] = useState<any>(null);\r\n\r\n  const [finalUsers, setFinalUsers] = useState([]);\r\n  const [usersForSend, setUsersForSend] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then((users) => {\r\n      let preFinalUsers: any = users.data.map((user: any) => {\r\n        return { value: user.email, label: user.name_surname };\r\n      });\r\n      setFinalUsers(preFinalUsers);\r\n    });\r\n  }, []);\r\n\r\n  // with params for put request\r\n  useEffect(() => {\r\n    if (eventId) {\r\n      API.getEventInfo(eventId).then((requestData) => {\r\n        let data = requestData.data;\r\n        console.log(\"CreateEventPage -> data\", data);\r\n        setTitle(data.title);\r\n        setImage(data.image);\r\n        setDescription(data.description);\r\n        setStartDate(new Date(data.start));\r\n        setEndDate(new Date(data.end));\r\n        setPlace(data.place);\r\n        setAddress(data.address);\r\n        if (data.place.id === 4) {\r\n          setAddressDisable(false);\r\n        }\r\n\r\n        // set time for scrollbars\r\n        let startDate = new Date(data.start);\r\n        setStartDateHours(startDate.getHours());\r\n        setStartDateMinutes(startDate.getMinutes());\r\n        let endDate = new Date(data.end);\r\n        setEndDateHours(endDate.getHours());\r\n        setEndDateMinutes(endDate.getMinutes());\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleChangeAddress = (e: any) => {\r\n    if (eventId) {\r\n      setPlace({ ...place, id: e.target.value });\r\n      if (e.target.value == 4) {\r\n        setAddressDisable(false);\r\n      }\r\n    } else {\r\n      setPlace(+e.target.value);\r\n      setAddressDisable(true);\r\n      setAddress(\"\");\r\n\r\n      if (e.target.value == 4) {\r\n        setAddressDisable(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateStartTime = () => {\r\n    let startTime = new Date(startDate);\r\n    startTime.setHours(startDateHours, startDateMinutes, 0);\r\n    let finalTime = `${startTime.getFullYear()}-${\r\n      startTime.getMonth() + 1\r\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}`;\r\n    return finalTime;\r\n  };\r\n  const updateEndTime = () => {\r\n    let endTime = new Date(endDate);\r\n    endTime.setHours(endDateHours, endDateMinutes, 0);\r\n    let finalTime = `${endTime.getFullYear()}-${\r\n      endTime.getMonth() + 1\r\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}`;\r\n    return finalTime;\r\n  };\r\n\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    let start_time = await updateStartTime();\r\n    let end_time = await updateEndTime();\r\n\r\n    // working with forming attendees\r\n    let CheckForAll = departments.find((item: any) => item.value === \"all\");\r\n    let departmentNumbers: any = [];\r\n    if (CheckForAll) {\r\n      // * if selected all departments we return array with all\r\n      departmentNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    } else {\r\n      // * else return selected deparments\r\n      departmentNumbers = departments.map((item: any) => {\r\n        return +item.value;\r\n      });\r\n    }\r\n    let usersForSendEmails: any = usersForSend.map((item: any) => {\r\n      return item.value;\r\n    });\r\n    //\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    if (eventId) {\r\n      if (typeof image !== typeof \"\") {\r\n        formData.append(\"image\", image[0]);\r\n      } else console.log(\"image is string\");\r\n    } else {\r\n      if (image[0]) {\r\n        formData.append(\"image\", image[0]);\r\n      }\r\n    }\r\n    formData.append(\"start\", String(start_time));\r\n    formData.append(\"deadline\", String(start_time));\r\n    formData.append(\"end\", String(end_time));\r\n    if (eventId) {\r\n      formData.append(\"place\", place.id);\r\n    } else {\r\n      formData.append(\"place\", place);\r\n    }\r\n    formData.append(\"address\", address);\r\n    formData.append(\"departments\", departmentNumbers);\r\n    formData.append(\"individual_users\", usersForSendEmails);\r\n    formData.append(\"my_event\", \"false\");\r\n    formData.append(\"public\", \"true\");\r\n\r\n    // let json = JSON.parse(\r\n    //   JSON.stringify(Object.fromEntries(formData.entries()))\r\n    // );\r\n    // console.log(\"handleSubmit -> json\", json);\r\n\r\n    if (eventId) {\r\n      API.patchEventChangeData(formData, eventId);\r\n    } else {\r\n      API.postEventCreateData(formData);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper wrapper_bg_grey\">\r\n      <AdminNavbar />\r\n      <div className=\"content__wrapper\">\r\n        <div className=\"create-event\">\r\n          <form\r\n            className=\"create-event__form\"\r\n            onSubmit={handleSubmit}\r\n            method=\"post\"\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <section className=\"create-event__form-section\">\r\n              <label className=\"create-event__form-label\" htmlFor=\"name\">\r\n                Название\r\n              </label>\r\n              <input\r\n                className=\"create-event__form-input\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                required\r\n                value={title}\r\n                onChange={(e) => {\r\n                  setTitle(e.target.value);\r\n                }}\r\n              />\r\n              <label className=\"create-event__form-label\" htmlFor=\"description\">\r\n                Описание\r\n              </label>\r\n              <textarea\r\n                cols={30}\r\n                rows={14}\r\n                name=\"description\"\r\n                required\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                placeholder=\"Some Meet Up\"\r\n                className=\"create-event__form-textarea\"\r\n              />\r\n\r\n              <label className=\"create-event__form-label\">Изображение</label>\r\n              <div className=\"create-event__form-file\">\r\n                <input\r\n                  style={{\r\n                    width: \"100%\",\r\n                    margin: \"0 0 10px 0\",\r\n                  }}\r\n                  className=\"create-event__form-input\"\r\n                  type=\"text\"\r\n                  value={image[0] ? image[0].name || image : \"empty\"}\r\n                  readOnly\r\n                />\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  id=\"file\"\r\n                  className=\"create-event__form-file-input button\"\r\n                  onChange={(e) => {\r\n                    setImage(e.target.files);\r\n                  }}\r\n                />\r\n                <label\r\n                  className=\"create-event__form-file-input-value\"\r\n                  htmlFor=\"file\"\r\n                >\r\n                  Загрузить Документ\r\n                </label>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"create-event__form-section_calendar\">\r\n              <DayPicker\r\n                onDayClick={(date) => {\r\n                  setStartDate(date);\r\n                  setEndDate(date);\r\n                }}\r\n                selectedDays={startDate}\r\n              />\r\n\r\n              <div className=\"d-flex\">\r\n                <div className=\"create-event__form-label_wrapper\">\r\n                  <label\r\n                    className=\"create-event__form-label\"\r\n                    htmlFor=\"time-start\"\r\n                  >\r\n                    Начало\r\n                  </label>\r\n                  <div className=\"d-flex\">\r\n                    <HoursScrollbar\r\n                      value={startDateHours}\r\n                      setValue={setStartDateHours}\r\n                    />\r\n                    <MinutesScrollbar\r\n                      value={startDateMinutes}\r\n                      setValue={setStartDateMinutes}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"create-event__form-label_wrapper\">\r\n                  <label\r\n                    className=\"create-event__form-label\"\r\n                    htmlFor=\"time-start\"\r\n                  >\r\n                    Конец\r\n                  </label>\r\n                  <div className=\"d-flex\">\r\n                    <HoursScrollbar\r\n                      value={endDateHours}\r\n                      setValue={setEndDateHours}\r\n                    />\r\n                    <MinutesScrollbar\r\n                      value={endDateMinutes}\r\n                      setValue={setEndDateMinutes}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"create-event__form-section\">\r\n              <label className=\"create-event__form-label\" htmlFor=\"description\">\r\n                Выберите локацию\r\n              </label>\r\n              <div className=\"create-event__form-radio\">\r\n                <div className=\"create-event__form-radio-container\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"place\"\r\n                    onChange={handleChangeAddress}\r\n                    value={1}\r\n                    checked={\r\n                      eventId\r\n                        ? place && +place.id === 1\r\n                          ? true\r\n                          : false\r\n                        : undefined\r\n                    }\r\n                  />\r\n                  <label htmlFor=\"small\">Маленькая комната</label>\r\n                </div>\r\n                <div className=\"create-event__form-radio-container\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"place\"\r\n                    value={2}\r\n                    onChange={handleChangeAddress}\r\n                    checked={\r\n                      eventId\r\n                        ? place && +place.id === 2\r\n                          ? true\r\n                          : false\r\n                        : undefined\r\n                    }\r\n                  />\r\n                  <label htmlFor=\"small\">Большая комната</label>\r\n                </div>\r\n                <div className=\"create-event__form-radio-container\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"place\"\r\n                    value={3}\r\n                    onChange={handleChangeAddress}\r\n                    checked={\r\n                      eventId\r\n                        ? place && +place.id === 3\r\n                          ? true\r\n                          : false\r\n                        : undefined\r\n                    }\r\n                  />\r\n                  <label htmlFor=\"small\">Весь офис</label>\r\n                </div>\r\n                <div className=\"create-event__form-radio-container\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"place\"\r\n                    value={4}\r\n                    onChange={handleChangeAddress}\r\n                    checked={\r\n                      eventId\r\n                        ? place && +place.id === 4\r\n                          ? true\r\n                          : false\r\n                        : undefined\r\n                    }\r\n                  />\r\n                  <label htmlFor=\"small\">Другое</label>\r\n                </div>\r\n\r\n                <input\r\n                  className=\"create-event__form-input create-event__form-input_border\"\r\n                  type=\"text\"\r\n                  name=\"address\"\r\n                  disabled={addressDisable ? true : false}\r\n                  required={addressDisable ? false : true}\r\n                  value={address}\r\n                  onChange={(e) => {\r\n                    setAddress(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"create-event__form-select-container\">\r\n                <label className=\"create-event__form-label\" htmlFor=\"invite\">\r\n                  Пригласить департамент\r\n                </label>\r\n                <Select\r\n                  isMulti\r\n                  isClearable={true}\r\n                  isSearchable={true}\r\n                  options={props.selectDepartments}\r\n                  className=\"basic-multi-select\"\r\n                  classNamePrefix=\"select\"\r\n                  onChange={(e: any) => {\r\n                    setDepartments(e);\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <label className=\"create-event__form-label\" htmlFor=\"invite\">\r\n                Пригласить отдельных людей\r\n              </label>\r\n              <Select\r\n                isMulti\r\n                isClearable={true}\r\n                isSearchable={true}\r\n                options={finalUsers}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={(e: any) => {\r\n                  setUsersForSend(e);\r\n                }}\r\n              />\r\n              <button\r\n                className=\"button create-event__form-submit \"\r\n                type=\"submit\"\r\n              >\r\n                Сохранить\r\n              </button>\r\n            </section>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(withRouter(CreateEventPage));\r\n","import CreateEventPage from \"./admin-create-event.tsx\";\r\n\r\nexport default CreateEventPage;\r\n"],"sourceRoot":""}
{"version":3,"sources":["images/pages/comed_events.svg","images/pages/missed_events.svg","images/pages/personal_achievment_1.svg","images/pages/personal_achievment_2.svg","images/pages/personal_achievment_3.svg","components/pages/calendar/modals/create-personal-event.tsx","components/pages/calendar/modals/note-info.tsx","components/pages/person-cabinet/person-cabinet.tsx"],"names":["module","exports","PersonalEventCreateModal","props","useState","title","setTitle","description","setDescription","date","startDate","setStartDate","startDateHours","setStartDateHours","startDateMinutes","setStartDateMinutes","endDate","setEndDate","endDateHours","setEndDateHours","endDateMinutes","setEndDateMinutes","updateStartTime","startTime","Date","setHours","getFullYear","getMonth","getDate","getHours","getMinutes","updateEndTime","endTime","event","a","preventDefault","start_time","end_time","data","start","end","API","postNoteCreateData","className","onClose","type","name","required","value","placeholder","onChange","e","target","src","time","alt","onDayChange","day","parseInt","descriptionImage","onClick","NoteInfoModal","style","width","fontSize","getDay","withDataContainer","currentEvent","setCurrentEvent","serverEvents","setServerEvents","setDate","period","setPeriod","statsData","setStatsData","userInfo","setUserInfo","console","log","department","setDepartment","useEffect","getPersonalStats","then","getUserInfo","departmentNumber","departments","filter","department_id","document","getElementsByClassName","display","datasets","quantity_of_attended_events","quantity_of_missed_events","backgroundColor","labels","legend","options","getNotes","isPersonalEventCreate","setIsPersonalEventCreate","togglePersonalEventCreate","updateEvents","handleEventDropAndResize","eventDropInfo","oldEvent","find","item","id","Number","_def","publicId","startStr","endStr","dataToPatch","patchNoteChangeData","isEventInfoOpen","setIsEventInfoOpen","toggleEventInfoOpen","profile_img","avatar","name_surname","label","email","phone","to","points","firstAchievement","secondAchievement","thirdAchievement","calendar","stat","statIdFinal","getElementById","calendarIdFinal","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","listPlugin","googleCalendarPlugin","bootstrapPlugin","height","locale","headerToolbar","left","center","right","initialView","events","editable","firstDay","dayMaxEventRows","selectable","selectMirror","select","selectInfo","eventDrop","eventResize","eventClick","eventClickInfo","eventId","findCurrentEvent","slotDuration","responsive","maintainAspectRatio","all","color","quantity_of_polls","comed","missed"],"mappings":"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","file":"static/js/8.50260c18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/comed_events.1f152545.svg\";","module.exports = __webpack_public_path__ + \"static/media/missed_events.6c6faf4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal_achievment_1.b3f45b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal_achievment_2.df06140c.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal_achievment_3.b0eaf699.svg\";","import React, { useState } from \"react\";\nimport { CloseModalButton } from \"../calendar\";\nimport API from \"../../../../API\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\n\n// icons\nimport time from \"../../../../images/shared/modal-clock.svg\";\nimport descriptionImage from \"../../../../images/shared/modal-description.svg\";\n\nconst PersonalEventCreateModal = (props: any) => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n\n  const [startDate, setStartDate] = useState<Date>(props.date);\n  const [startDateHours, setStartDateHours] = useState<number>(0);\n  const [startDateMinutes, setStartDateMinutes] = useState<number>(0);\n\n  const [endDate, setEndDate] = useState<Date>(props.date);\n  const [endDateHours, setEndDateHours] = useState<number>(0);\n  const [endDateMinutes, setEndDateMinutes] = useState<number>(0);\n\n  const updateStartTime = () => {\n    let startTime = new Date(startDate);\n    startTime.setHours(startDateHours, startDateMinutes, 0);\n    let finalTime = `${startTime.getFullYear()}-${\n      startTime.getMonth() + 1\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}`;\n    return finalTime;\n  };\n  const updateEndTime = () => {\n    let endTime = new Date(endDate);\n    endTime.setHours(endDateHours, endDateMinutes, 0);\n    let finalTime = `${endTime.getFullYear()}-${\n      endTime.getMonth() + 1\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}`;\n    return finalTime;\n  };\n  async function handleSubmit(event: any) {\n    event.preventDefault();\n\n    let start_time = await updateStartTime();\n    let end_time = await updateEndTime();\n\n    const data = {\n      title,\n      description,\n      start: start_time,\n      end: end_time,\n    };\n    API.postNoteCreateData(data);\n  }\n\n  return (\n    <div className=\"modal_centered\">\n      <div className=\"modal__wrapper\">\n        <CloseModalButton onClose={props.onClose} />\n        <div className=\"personal-create\">\n          <div className=\"personal-create-row\">\n            <input\n              className=\"personal-create__input\"\n              type=\"text\"\n              name=\"name\"\n              required\n              value={title}\n              placeholder=\"Введите название\"\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={time}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"time\"\n            />\n            <div className=\"admin-create-event-modal__day-picker\">\n              <DayPickerInput\n                value={props.date}\n                onDayChange={(day) => {\n                  setStartDate(day);\n                  setEndDate(day);\n                }}\n              />\n            </div>\n            <div className=\"admin-create-event-modal-time\">\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setStartDateHours(parseInt(e.target.value));\n                }}\n              />\n              {/* // colon- двоеточие */}\n              <div className=\"admin-create-event-modal__time-picker-colon\">\n                .\n              </div>\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setStartDateMinutes(parseInt(e.target.value));\n                }}\n              />\n              &nbsp;-&nbsp;\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setEndDateHours(parseInt(e.target.value));\n                }}\n              />\n              {/* // colon- двоеточие */}\n              <div className=\"admin-create-event-modal__time-picker-colon\">\n                .\n              </div>\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setEndDateMinutes(parseInt(e.target.value));\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"personal-create-row\">\n            <div className=\"personal-create__textarea-wrapper\">\n              <img\n                src={descriptionImage}\n                className=\"admin-create-event-modal-icon\"\n                alt=\"people\"\n              />\n              <input\n                name=\"description\"\n                required\n                value={description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n                placeholder=\"Добавить описание\"\n                className=\"personal-create__textarea\"\n              />\n            </div>\n          </div>\n\n          <div className=\"personal-create-row\">\n            <div className=\"personal-create__buttons-wrapper\">\n              <button\n                onClick={handleSubmit}\n                className=\"personal-create__buttons-save button\"\n              >\n                Создать\n              </button>\n              <button\n                onClick={props.onClose}\n                className=\"personal-create__buttons-cancel button\"\n              >\n                отмена\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PersonalEventCreateModal;\n","import React, { useState, useEffect } from \"react\";\nimport { CloseModalButton } from \"../calendar\";\nimport { Link } from \"react-router-dom\";\n\nconst NoteInfoModal = (props: any) => {\n  const { event } = props;\n  let startDate = new Date(event.start);\n\n  let months = [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Cентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\",\n  ];\n  let days = [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\",\n  ];\n\n  return (\n    <div className=\"modal_centered\">\n      <div className=\"modal__wrapper\">\n        <div className=\"event-info-modal\">\n          <CloseModalButton onClose={props.onClose} />\n          <div className=\"event-info__content\" style={{ width: \"90%\" }}>\n            <p\n              className=\"event-info__content-title\"\n              style={{ fontSize: \"24px\" }}\n            >\n              {event.title}\n            </p>\n            <p\n              className=\"event-info__content-date\"\n              style={{ fontSize: \"14px\" }}\n            >\n              {(startDate.getHours() < 10 ? \"0\" : \"\") + startDate.getHours()}.\n              {(startDate.getMinutes() < 10 ? \"0\" : \"\") +\n                startDate.getMinutes()}{\" \"}\n              {days[startDate.getDay()]}, {months[startDate.getMonth()]}{\" \"}\n              {startDate.getDate()}\n            </p>\n            <p\n              className=\"event-info__content-description\"\n              style={{ fontSize: \"18px\" }}\n            >\n              {event.description}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteInfoModal;\n","import React, { useState, useEffect } from \"react\";\nimport Navbar from \"../../shared/navbar\";\nimport { Link } from \"react-router-dom\";\nimport PersonalEventCreateModal from \"../calendar/modals/create-personal-event\";\nimport NoteInfoModal from \"../calendar/modals/note-info\";\n\n// images\nimport avatar from \"../../../images/shared/user.svg\";\nimport all from \"../../../images/shared/all_events.svg\";\nimport comed from \"../../../images/pages/comed_events.svg\";\nimport missed from \"../../../images/pages/missed_events.svg\";\nimport firstAchievement from \"../../../images/pages/personal_achievment_1.svg\";\nimport secondAchievement from \"../../../images/pages/personal_achievment_2.svg\";\nimport thirdAchievement from \"../../../images/pages/personal_achievment_3.svg\";\n\n// charts\nimport { Doughnut } from \"react-chartjs-2\";\n\n// fullcalendar\nimport FullCalendar from \"@fullcalendar/react\";\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\n\n// imports for view style(month, week, day, list)\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport API from \"../../../API\";\nimport withDataContainer from \"../../../HOC/withData\";\n\nconst PersonalOffice = (props: any) => {\n  // calendar data\n  const [currentEvent, setCurrentEvent] = useState<any>({});\n  const [serverEvents, setServerEvents] = useState([]);\n  const [date, setDate] = useState(new Date());\n\n  // stats data\n  const [period, setPeriod] = useState(\"week\");\n  const [statsData, setStatsData] = useState<any>([]);\n\n  // person info\n  const [userInfo, setUserInfo] = useState<any>({});\n  console.log(\"PersonalOffice -> userInfo\", userInfo);\n  const [department, setDepartment] = useState<any>({});\n\n  const FIRST_MILE_STONE = 100;\n  const SECOND_MILE_STONE = 250;\n  const THIRD_MILE_STONE = 500;\n\n  useEffect(() => {\n    API.getPersonalStats(period).then((data) => {\n      setStatsData(data.data);\n    });\n  }, [period]);\n\n  useEffect(() => {\n    API.getUserInfo().then((data) => {\n      setUserInfo(data.data);\n      let departmentNumber = props.departments.filter(\n        (department: any) => +department.value === +data.data.department_id\n      );\n      setDepartment(departmentNumber[0]);\n    });\n  }, []);\n\n  // hide statistics on load\n  useEffect(() => {\n    const statAdr = document.getElementsByClassName(\"personal-office__stat\")[0];\n    const stat = statAdr as HTMLElement;\n    stat.style.display = \"none\";\n  }, []);\n\n  // * chart info\n  const data = {\n    datasets: [\n      {\n        data: [\n          statsData.quantity_of_attended_events,\n          statsData.quantity_of_missed_events,\n        ],\n        backgroundColor: [\"#FFCE56\", \"#EC4C47\"],\n      },\n    ],\n    labels: [\"Посещенных мероприятий\", \"Пропущенных мероприятий\"],\n    legend: {\n      display: false,\n    },\n    options: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  //* start function to toogle between calendar and stats\n  // TODO refactor\n  const openStatistics = () => {\n    const calendarAdr = document.getElementsByClassName(\n      \"personal-office__calendar\"\n    )[0];\n    const calendar = calendarAdr as HTMLElement;\n    const statAdr = document.getElementsByClassName(\"personal-office__stat\")[0];\n    const stat = statAdr as HTMLElement;\n\n    const statId = document.getElementById(\"personal-office__stat\");\n    const statIdFinal = statId as HTMLElement;\n    const calendarId = document.getElementById(\"personal-office__calendar\");\n    const calendarIdFinal = calendarId as HTMLElement;\n    calendar.style.display = \"none\";\n    stat.style.display = \"block\";\n    calendarIdFinal.className =\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_non_active\";\n    statIdFinal.className =\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_active\";\n  };\n  const openCalendar = () => {\n    const calendarAdr = document.getElementsByClassName(\n      \"personal-office__calendar\"\n    )[0];\n    const calendar = calendarAdr as HTMLElement;\n    const statAdr = document.getElementsByClassName(\"personal-office__stat\")[0];\n    const stat = statAdr as HTMLElement;\n\n    const statId = document.getElementById(\"personal-office__stat\");\n    const statIdFinal = statId as HTMLElement;\n    const calendarId = document.getElementById(\"personal-office__calendar\");\n    const calendarIdFinal = calendarId as HTMLElement;\n    stat.style.display = \"none\";\n    calendar.style.display = \"block\";\n    calendarIdFinal.className =\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_active\";\n    statIdFinal.className =\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_non_active\";\n  };\n  // end function to toogle between calendar and stats\n\n  useEffect(() => {\n    API.getNotes().then((data) => {\n      setServerEvents(data.data);\n    });\n  }, []);\n\n  let [isPersonalEventCreate, setIsPersonalEventCreate] = useState<boolean>(\n    false\n  );\n  const togglePersonalEventCreate = () => {\n    setIsPersonalEventCreate(!isPersonalEventCreate);\n    updateEvents();\n  };\n\n  const handleDateSelect = (selectInfo: any) => {\n    setDate(selectInfo.start);\n    togglePersonalEventCreate();\n  };\n\n  const handleEventDropAndResize = (eventDropInfo: any) => {\n    let oldEvent = serverEvents.find(\n      (item: any) => item.id === Number(eventDropInfo.oldEvent._def.publicId)\n    ) || {\n      id: \"\",\n      start: \"\",\n      end: \"\",\n    };\n    oldEvent.start = eventDropInfo.event.startStr;\n    oldEvent.end = eventDropInfo.event.endStr;\n    const dataToPatch = {\n      start: oldEvent.start,\n      end: oldEvent.end,\n    };\n    console.log(\"handleEventDropAndResize -> dataToPatch\", dataToPatch);\n    API.patchNoteChangeData(dataToPatch, oldEvent.id);\n  };\n\n  let [isEventInfoOpen, setIsEventInfoOpen] = useState<boolean>(false);\n  const toggleEventInfoOpen = () => {\n    setIsEventInfoOpen(!isEventInfoOpen);\n  };\n  const handleEventClick = (eventClickInfo: any) => {\n    let eventId = Number(eventClickInfo.event._def.publicId);\n    let findCurrentEvent = serverEvents.filter(\n      (event: any) => event.id === eventId\n    );\n    setCurrentEvent(findCurrentEvent[0]);\n    toggleEventInfoOpen();\n  };\n\n  const updateEvents = () => {\n    API.getNotes().then((data) => {\n      setServerEvents(data.data);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Navbar />\n        <div className=\" content__wrapper content__wrapper_no_margin personal-office\">\n          <section className=\"personal-office__info\">\n            <div className=\"personal-office__info-picture-block\">\n              <img\n                className=\"personal-office__info-avatar\"\n                src={userInfo.profile_img || avatar}\n                alt=\"personal\"\n              />\n            </div>\n            <div className=\"personal-office__info-content-wrapper\">\n              <div className=\"personal-office__info-section\">\n                <p className=\"personal-office__info-name\">\n                  {userInfo.name_surname}\n                </p>\n                <p className=\"personal-office__info-dep\">\n                  {department.label || \"Neobis\"} Department\n                </p>\n              </div>\n              <div className=\"personal-office__info-section\">\n                <p className=\"personal-office__info-text\">\n                  E-mail:\n                  <span className=\"personal-office__info-text-content\">\n                    {userInfo.email}\n                  </span>\n                </p>\n                <p className=\"personal-office__info-text\">\n                  Телефон:\n                  <span className=\"personal-office__info-text-content\">\n                    {userInfo.phone}\n                  </span>\n                </p>\n              </div>\n\n              <Link to=\"/change_password\" className=\"link\">\n                <button className=\"button personal-office__info-edit\">\n                  Редактировать\n                </button>\n              </Link>\n            </div>\n\n            <div className=\"personal-office__info-points\">\n              <div className=\"personal-office__info-points-container\">\n                <p className=\"personal-office__info-points-value\">\n                  {userInfo.points}\n                </p>\n              </div>\n              {userInfo.points ? (\n                userInfo.points >= FIRST_MILE_STONE ? (\n                  <div className=\"personal-office__info-points-achievements\">\n                    <div className=\"personal-office__info-points-achievements-images\">\n                      {userInfo.points ? (\n                        userInfo.points >= FIRST_MILE_STONE ? (\n                          <img\n                            className=\"personal-office__info-points-achievements-image\"\n                            src={firstAchievement}\n                            alt=\"achievement\"\n                          />\n                        ) : null\n                      ) : null}\n\n                      {userInfo.points ? (\n                        userInfo.points >= SECOND_MILE_STONE ? (\n                          <img\n                            className=\"personal-office__info-points-achievements-image\"\n                            src={secondAchievement}\n                            alt=\"achievement\"\n                          />\n                        ) : null\n                      ) : null}\n                      {userInfo.points ? (\n                        userInfo.points >= THIRD_MILE_STONE ? (\n                          <img\n                            className=\"personal-office__info-points-achievements-image\"\n                            src={thirdAchievement}\n                            alt=\"achievement\"\n                          />\n                        ) : null\n                      ) : null}\n                    </div>\n                    <div className=\"personal-office__info-points-achievements-values\">\n                      {userInfo.points ? (\n                        userInfo.points >= FIRST_MILE_STONE ? (\n                          <span className=\"personal-office__info-points-achievements-value\">\n                            {FIRST_MILE_STONE}\n                          </span>\n                        ) : null\n                      ) : null}\n                      {userInfo.points ? (\n                        userInfo.points >= SECOND_MILE_STONE ? (\n                          <span className=\"personal-office__info-points-achievements-value\">\n                            {SECOND_MILE_STONE}\n                          </span>\n                        ) : null\n                      ) : null}\n                      {userInfo.points ? (\n                        userInfo.points >= THIRD_MILE_STONE ? (\n                          <span className=\"personal-office__info-points-achievements-value\">\n                            {THIRD_MILE_STONE}\n                          </span>\n                        ) : null\n                      ) : null}\n                    </div>\n                  </div>\n                ) : null\n              ) : null}\n            </div>\n          </section>\n\n          <section className=\"personal-office__buttons\">\n            <div className=\"personal-office__buttons-section \">\n              <p\n                id=\"personal-office__calendar\"\n                className=\"personal-office__buttons-section-btn personal-office__buttons-section-btn_active\"\n                onClick={openCalendar}\n              >\n                Календарь\n              </p>\n            </div>\n            <div className=\"personal-office__buttons-section\">\n              <p\n                id=\"personal-office__stat\"\n                className=\"personal-office__buttons-section-btn personal-office__buttons-section-btn_non_active\"\n                onClick={openStatistics}\n              >\n                Статистика\n              </p>\n            </div>\n          </section>\n\n          <section className=\"personal-office__calendar\">\n            <FullCalendar\n              plugins={[\n                dayGridPlugin,\n                interactionPlugin,\n                timeGridPlugin,\n                listPlugin,\n                googleCalendarPlugin,\n                bootstrapPlugin,\n              ]}\n              height=\"610px\"\n              locale=\"ru\"\n              headerToolbar={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\n              }}\n              initialView=\"dayGridMonth\"\n              events={serverEvents}\n              editable={true}\n              firstDay={1}\n              dayMaxEventRows={true}\n              selectable={true}\n              selectMirror={true}\n              select={handleDateSelect}\n              eventDrop={handleEventDropAndResize}\n              eventResize={handleEventDropAndResize}\n              eventClick={handleEventClick}\n              slotDuration=\"00:15:00\" // интервал при изменении на календаре\n            />\n          </section>\n\n          <section className=\"personal-office__stat\">\n            <div className=\"personal-office__stat-wrapper\">\n              <div className=\"personal-office__stat-doughnut\">\n                <Doughnut\n                  data={data}\n                  width={100}\n                  height={75}\n                  options={{\n                    responsive: true,\n                    maintainAspectRatio: true,\n                    legend: {\n                      display: false,\n                    },\n                  }}\n                />\n              </div>\n\n              <div className=\"personal-office__stat-content\">\n                <div className=\"personal-office__stat-buttons\">\n                  <p className=\"personal-office__stat-buttons-text\">\n                    Сортировать по:\n                  </p>\n                  <div className=\"personal-office__stat-buttons-content\">\n                    <input\n                      type=\"button\"\n                      value=\"Неделя\"\n                      onClick={() => setPeriod(\"week\")}\n                      className={\n                        period === \"week\"\n                          ? \"button personal-office__stat-button personal-office__stat-button_active\"\n                          : \"button personal-office__stat-button\"\n                      }\n                    />\n\n                    <input\n                      type=\"button\"\n                      value=\"Месяц\"\n                      onClick={() => setPeriod(\"month\")}\n                      className={\n                        period === \"month\"\n                          ? \"button personal-office__stat-button personal-office__stat-button_active\"\n                          : \"button personal-office__stat-button\"\n                      }\n                    />\n                    <input\n                      type=\"button\"\n                      value=\"Год\"\n                      onClick={() => setPeriod(\"year\")}\n                      className={\n                        period === \"year\"\n                          ? \"button personal-office__stat-button personal-office__stat-button_active\"\n                          : \"button personal-office__stat-button\"\n                      }\n                    />\n                  </div>\n                </div>\n                <div className=\"personal-office__stat-info\">\n                  <div className=\"personal-office__stat-info-content\">\n                    <div className=\"personal-office__stat-info-block\">\n                      <img\n                        className=\"personal-office__stat-info-block-img\"\n                        src={all}\n                        alt=\"personal stat logo\"\n                      />\n                      <p className=\"personal-office__stat-info-block-text\">\n                        Всего\n                      </p>\n                      <p\n                        style={{ color: \"#1070CA\" }}\n                        className=\"personal-office__stat-info-block-number\"\n                      >\n                        {statsData.quantity_of_polls}\n                      </p>\n                    </div>\n                    <div className=\"personal-office__stat-info-block\">\n                      <img\n                        className=\"personal-office__stat-info-block-img\"\n                        src={comed}\n                        alt=\"personal stat logo\"\n                      />\n                      <p className=\"personal-office__stat-info-block-text\">\n                        Посещено\n                      </p>\n                      <p\n                        style={{ color: \"#F7D154\" }}\n                        className=\"personal-office__stat-info-block-number\"\n                      >\n                        {statsData.quantity_of_attended_events}\n                      </p>\n                    </div>\n                    <div className=\"personal-office__stat-info-block\">\n                      <img\n                        className=\"personal-office__stat-info-block-img personal-office__stat-info-block-img_small\"\n                        src={missed}\n                        alt=\"personal stat logo\"\n                      />\n                      <p className=\"personal-office__stat-info-block-text\">\n                        Пропущено\n                      </p>\n                      <p\n                        style={{ color: \"#EC4C47\" }}\n                        className=\"personal-office__stat-info-block-number\"\n                      >\n                        {statsData.quantity_of_missed_events}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n      {isEventInfoOpen && (\n        <NoteInfoModal onClose={toggleEventInfoOpen} event={currentEvent} />\n      )}\n      {isPersonalEventCreate && (\n        <PersonalEventCreateModal\n          onClose={togglePersonalEventCreate}\n          updateEvents={updateEvents}\n          date={date}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withDataContainer(PersonalOffice);\n"],"sourceRoot":""}
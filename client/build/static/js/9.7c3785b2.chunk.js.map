{"version":3,"sources":["images/pages/comed_events.svg","images/pages/missed_events.svg","images/pages/personal_achievment_1.svg","images/pages/personal_achievment_2.svg","images/pages/personal_achievment_3.svg","components/pages/calendar/modals/create-personal-event.tsx","components/pages/calendar/modals/note-info.tsx","components/pages/person-cabinet/person-cabinet.tsx"],"names":["module","exports","PersonalEventCreateModal","props","useState","title","setTitle","description","setDescription","date","startDate","setStartDate","startDateHours","setStartDateHours","startDateMinutes","setStartDateMinutes","endDate","setEndDate","endDateHours","setEndDateHours","endDateMinutes","setEndDateMinutes","updateStartTime","startTime","Date","setHours","getFullYear","getMonth","getDate","getHours","getMinutes","updateEndTime","endTime","event","a","preventDefault","start_time","end_time","data","start","end","API","postNoteCreateData","className","onClose","type","name","required","value","placeholder","onChange","e","target","src","time","alt","onDayChange","day","parseInt","descriptionImage","onClick","NoteInfoModal","style","width","fontSize","getDay","withDataContainer","currentEvent","setCurrentEvent","serverEvents","setServerEvents","setDate","period","setPeriod","statsData","setStatsData","userInfo","setUserInfo","console","log","department","setDepartment","useEffect","getPersonalStats","then","getUserInfo","departmentNumber","departments","filter","department_id","document","getElementsByClassName","display","datasets","quantity_of_attended_events","quantity_of_missed_events","backgroundColor","labels","legend","options","getNotes","isPersonalEventCreate","setIsPersonalEventCreate","togglePersonalEventCreate","updateEvents","handleEventDropAndResize","eventDropInfo","oldEvent","find","item","id","Number","_def","publicId","startStr","endStr","dataToPatch","patchNoteChangeData","isEventInfoOpen","setIsEventInfoOpen","toggleEventInfoOpen","profile_img","avatar","name_surname","label","email","phone","to","points","firstAchievement","secondAchievement","thirdAchievement","calendar","stat","statIdFinal","getElementById","calendarIdFinal","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","listPlugin","googleCalendarPlugin","bootstrapPlugin","height","locale","headerToolbar","left","center","right","initialView","events","editable","firstDay","dayMaxEventRows","selectable","selectMirror","select","selectInfo","eventDrop","eventResize","eventClick","eventClickInfo","eventId","findCurrentEvent","slotDuration","responsive","maintainAspectRatio","all","color","quantity_of_polls","comed","missed"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,qLCkL5BC,EAxKkB,SAACC,GAAgB,IAAD,EACrBC,mBAAiB,IADI,mBACxCC,EADwC,KACjCC,EADiC,OAETF,mBAAiB,IAFR,mBAExCG,EAFwC,KAE3BC,EAF2B,OAIbJ,mBAAeD,EAAMM,MAJR,mBAIxCC,EAJwC,KAI7BC,EAJ6B,OAKHP,mBAAiB,GALd,mBAKxCQ,EALwC,KAKxBC,EALwB,OAMCT,mBAAiB,GANlB,mBAMxCU,EANwC,KAMtBC,EANsB,OAQjBX,mBAAeD,EAAMM,MARJ,mBAQxCO,EARwC,KAQ/BC,EAR+B,OASPb,mBAAiB,GATV,mBASxCc,EATwC,KAS1BC,EAT0B,OAUHf,mBAAiB,GAVd,mBAUxCgB,EAVwC,KAUxBC,EAVwB,KAYzCC,EAAkB,WACtB,IAAIC,EAAY,IAAIC,KAAKd,GAKzB,OAJAa,EAAUE,SAASb,EAAgBE,EAAkB,GACxC,UAAMS,EAAUG,cAAhB,YACXH,EAAUI,WAAa,EADZ,YAETJ,EAAUK,UAFD,YAEcL,EAAUM,WAFxB,YAEsCN,EAAUO,eAGzDC,EAAgB,WACpB,IAAIC,EAAU,IAAIR,KAAKR,GAKvB,OAJAgB,EAAQP,SAASP,EAAcE,EAAgB,GAClC,UAAMY,EAAQN,cAAd,YACXM,EAAQL,WAAa,EADV,YAETK,EAAQJ,UAFC,YAEYI,EAAQH,WAFpB,YAEkCG,EAAQF,eAzBV,4CA4B/C,WAA4BG,GAA5B,mBAAAC,EAAA,6DACED,EAAME,iBADR,SAGyBb,IAHzB,cAGMc,EAHN,gBAIuBL,IAJvB,OAIMM,EAJN,OAMQC,EAAO,CACXjC,QACAE,cACAgC,MAAOH,EACPI,IAAKH,GAEPI,IAAIC,mBAAmBJ,GAZzB,4CA5B+C,sBA2C/C,OACE,yBAAKK,UAAU,kBACb,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAkBC,QAASzC,EAAMyC,UACjC,yBAAKD,UAAU,mBACb,yBAAKA,UAAU,uBACb,2BACEA,UAAU,yBACVE,KAAK,OACLC,KAAK,OACLC,UAAQ,EACRC,MAAO3C,EACP4C,YAAY,8FACZC,SAAU,SAACC,GACT7C,EAAS6C,EAAEC,OAAOJ,WAKxB,yBAAKL,UAAU,gCACb,yBACEU,IAAKC,IACLX,UAAU,gCACVY,IAAI,SAEN,yBAAKZ,UAAU,wCACb,kBAAC,IAAD,CACEK,MAAO7C,EAAMM,KACb+C,YAAa,SAACC,GACZ9C,EAAa8C,GACbxC,EAAWwC,OAIjB,yBAAKd,UAAU,iCACb,2BACEE,KAAK,OACLC,KAAK,GACLG,YAAY,KACZN,UAAU,wCACVO,SAAU,SAACC,GACTtC,EAAkB6C,SAASP,EAAEC,OAAOJ,WAIxC,yBAAKL,UAAU,+CAAf,KAGA,2BACEE,KAAK,OACLC,KAAK,GACLG,YAAY,KACZN,UAAU,wCACVO,SAAU,SAACC,GACTpC,EAAoB2C,SAASP,EAAEC,OAAOJ,WApB5C,YAwBE,2BACEH,KAAK,OACLC,KAAK,GACLG,YAAY,KACZN,UAAU,wCACVO,SAAU,SAACC,GACThC,EAAgBuC,SAASP,EAAEC,OAAOJ,WAItC,yBAAKL,UAAU,+CAAf,KAGA,2BACEE,KAAK,OACLC,KAAK,GACLG,YAAY,KACZN,UAAU,wCACVO,SAAU,SAACC,GACT9B,EAAkBqC,SAASP,EAAEC,OAAOJ,aAM5C,yBAAKL,UAAU,uBACb,yBAAKA,UAAU,qCACb,yBACEU,IAAKM,IACLhB,UAAU,gCACVY,IAAI,WAEN,2BACET,KAAK,cACLC,UAAQ,EACRC,MAAOzC,EACP2C,SAAU,SAACC,GACT3C,EAAe2C,EAAEC,OAAOJ,QAE1BC,YAAY,oGACZN,UAAU,gCAKhB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,oCACb,4BACEiB,QArJiC,4CAsJjCjB,UAAU,wCAFZ,8CAMA,4BACEiB,QAASzD,EAAMyC,QACfD,UAAU,0CAFZ,8CCjGCkB,EA/DO,SAAC1D,GAAgB,IAC7B8B,EAAU9B,EAAV8B,MACJvB,EAAY,IAAIc,KAAKS,EAAMM,OA0B/B,OACE,yBAAKI,UAAU,kBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CAAkBC,QAASzC,EAAMyC,UACjC,yBAAKD,UAAU,sBAAsBmB,MAAO,CAAEC,MAAO,QACnD,uBACEpB,UAAU,4BACVmB,MAAO,CAAEE,SAAU,SAElB/B,EAAM5B,OAET,uBACEsC,UAAU,2BACVmB,MAAO,CAAEE,SAAU,UAEjBtD,EAAUmB,WAAa,GAAK,IAAM,IAAMnB,EAAUmB,WAJtD,KAKInB,EAAUoB,aAAe,GAAK,IAAM,IACpCpB,EAAUoB,aAAc,IA5B3B,CACT,qEACA,qEACA,6CACA,iCACA,6CACA,6CACA,8CAsBgBpB,EAAUuD,UAPlB,KApCG,CACX,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,8CACA,6CACA,uCACA,8CA+B8CvD,EAAUiB,YAAa,IAC1DjB,EAAUkB,WAEb,uBACEe,UAAU,kCACVmB,MAAO,CAAEE,SAAU,SAElB/B,EAAM1B,kB,qMC2aN2D,uBAtcQ,SAAC/D,GAAe,MAEGC,mBAAc,IAFjB,mBAE9B+D,EAF8B,KAEhBC,EAFgB,OAGGhE,mBAAS,IAHZ,mBAG9BiE,EAH8B,KAGhBC,EAHgB,OAIblE,mBAAS,IAAIoB,MAJA,mBAI9Bf,EAJ8B,KAIxB8D,EAJwB,OAOTnE,mBAAS,QAPA,mBAO9BoE,EAP8B,KAOtBC,EAPsB,OAQHrE,mBAAc,IARX,mBAQ9BsE,EAR8B,KAQnBC,EARmB,OAWLvE,mBAAc,IAXT,mBAW9BwE,EAX8B,KAWpBC,EAXoB,KAYrCC,QAAQC,IAAI,6BAA8BH,GAZL,MAaDxE,mBAAc,IAbb,mBAa9B4E,EAb8B,KAalBC,EAbkB,KAmBrCC,qBAAU,WACRzC,IAAI0C,iBAAiBX,GAAQY,MAAK,SAAC9C,GACjCqC,EAAarC,EAAKA,WAEnB,CAACkC,IAEJU,qBAAU,WACRzC,IAAI4C,cAAcD,MAAK,SAAC9C,GACtBuC,EAAYvC,EAAKA,MACjB,IAAIgD,EAAmBnF,EAAMoF,YAAYC,QACvC,SAACR,GAAD,OAAsBA,EAAWhC,SAAWV,EAAKA,KAAKmD,iBAExDR,EAAcK,EAAiB,SAEhC,IAGHJ,qBAAU,WACQQ,SAASC,uBAAuB,yBAAyB,GAEpE7B,MAAM8B,QAAU,SACpB,IAGH,IAAMtD,EAAO,CACXuD,SAAU,CACR,CACEvD,KAAM,CACJoC,EAAUoB,6BAA+B,EACzCpB,EAAUqB,4BAA8B,GAE1CC,gBAAiB,CAAC,UAAW,aAGjCC,OAAQ,CAAC,kIAA0B,yIACnCC,OAAQ,CACNN,SAAS,GAEXO,QAAS,CACPD,OAAQ,CACNN,SAAS,KA+CfV,qBAAU,WACRzC,IAAI2D,WAAWhB,MAAK,SAAC9C,GACnBgC,EAAgBhC,EAAKA,WAEtB,IA9GkC,MAgHmBlC,oBACtD,GAjHmC,oBAgHhCiG,GAhHgC,MAgHTC,GAhHS,MAmH/BC,GAA4B,WAChCD,IAA0BD,IAC1BG,MAQIC,GAA2B,SAACC,GAChC,IAAIC,EAAWtC,EAAauC,MAC1B,SAACC,GAAD,OAAeA,EAAKC,KAAOC,OAAOL,EAAcC,SAASK,KAAKC,cAC3D,CACHH,GAAI,GACJvE,MAAO,GACPC,IAAK,IAEPmE,EAASpE,MAAQmE,EAAczE,MAAMiF,SACrCP,EAASnE,IAAMkE,EAAczE,MAAMkF,OACnC,IAAMC,EAAc,CAClB7E,MAAOoE,EAASpE,MAChBC,IAAKmE,EAASnE,KAEhBsC,QAAQC,IAAI,0CAA2CqC,GACvD3E,IAAI4E,oBAAoBD,EAAaT,EAASG,KA5IX,GA+IO1G,oBAAkB,GA/IzB,qBA+IhCkH,GA/IgC,MA+IfC,GA/Ie,MAgJ/BC,GAAsB,WAC1BD,IAAoBD,KAWhBd,GAAe,WACnB/D,IAAI2D,WAAWhB,MAAK,SAAC9C,GACnBgC,EAAgBhC,EAAKA,UAIzB,OACE,oCACE,yBAAKK,UAAU,WACb,kBAAC,IAAD,MACA,yBAAKA,UAAU,gEACb,6BAASA,UAAU,yBACjB,yBAAKA,UAAU,uCACb,yBACEA,UAAU,+BACVU,IAAKuB,EAAS6C,aAAeC,IAC7BnE,IAAI,cAGR,yBAAKZ,UAAU,yCACb,yBAAKA,UAAU,iCACb,uBAAGA,UAAU,8BACViC,EAAS+C,cAEZ,uBAAGhF,UAAU,6BACVqC,EAAW4C,OAAS,SADvB,gBAIF,yBAAKjF,UAAU,iCACb,uBAAGA,UAAU,8BAAb,UAEE,0BAAMA,UAAU,sCACbiC,EAASiD,QAGd,uBAAGlF,UAAU,8BAAb,8CAEE,0BAAMA,UAAU,sCACbiC,EAASkD,SAKhB,kBAAC,IAAD,CAAMC,GAAG,wBAAwBpF,UAAU,QACzC,4BAAQA,UAAU,qCAAlB,oFAMJ,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,0CACb,uBAAGA,UAAU,sCACViC,EAASoD,SAGbpD,EAASoD,QACRpD,EAASoD,QAtME,IAuMT,yBAAKrF,UAAU,6CACb,yBAAKA,UAAU,oDACZiC,EAASoD,QACRpD,EAASoD,QA1MN,IA2MD,yBACErF,UAAU,kDACVU,IAAK4E,IACL1E,IAAI,gBAGN,KAEHqB,EAASoD,QACRpD,EAASoD,QAnNL,IAoNF,yBACErF,UAAU,kDACVU,IAAK6E,IACL3E,IAAI,gBAGN,KACHqB,EAASoD,QACRpD,EAASoD,QA3NN,IA4ND,yBACErF,UAAU,kDACVU,IAAK8E,IACL5E,IAAI,gBAGN,MAEN,yBAAKZ,UAAU,oDACZiC,EAASoD,QACRpD,EAASoD,QAxON,IAyOD,0BAAMrF,UAAU,mDAzOf,KA6OD,KACHiC,EAASoD,QACRpD,EAASoD,QA9OL,IA+OF,0BAAMrF,UAAU,mDA/Od,KAmPF,KACHiC,EAASoD,QACRpD,EAASoD,QApPN,IAqPD,0BAAMrF,UAAU,mDArPf,KAyPD,OAIR,OAIR,6BAASA,UAAU,4BACjB,yBAAKA,UAAU,qCACb,uBACEmE,GAAG,4BACHnE,UAAU,mFACViB,QAlMO,WACnB,IAGMwE,EAHc1C,SAASC,uBAC3B,6BACA,GAGI0C,EADU3C,SAASC,uBAAuB,yBAAyB,GAInE2C,EADS5C,SAAS6C,eAAe,yBAGjCC,EADa9C,SAAS6C,eAAe,6BAE3CF,EAAKvE,MAAM8B,QAAU,OACrBwC,EAAStE,MAAM8B,QAAU,QACzB4C,EAAgB7F,UACd,mFACF2F,EAAY3F,UACV,yFA8KQ,2DAQF,yBAAKA,UAAU,oCACb,uBACEmE,GAAG,wBACHnE,UAAU,uFACViB,QA9NS,WACrB,IAGMwE,EAHc1C,SAASC,uBAC3B,6BACA,GAGI0C,EADU3C,SAASC,uBAAuB,yBAAyB,GAInE2C,EADS5C,SAAS6C,eAAe,yBAGjCC,EADa9C,SAAS6C,eAAe,6BAE3CH,EAAStE,MAAM8B,QAAU,OACzByC,EAAKvE,MAAM8B,QAAU,QACrB4C,EAAgB7F,UACd,uFACF2F,EAAY3F,UACV,qFA0MQ,kEAUJ,6BAASA,UAAU,6BACjB,kBAAC,IAAD,CACE8F,QAAS,CACPC,IACAC,IACAC,IACAC,IACAC,IACAC,KAEFC,OAAO,QACPC,OAAO,KACPC,cAAe,CACbC,KAAM,kBACNC,OAAQ,QACRC,MAAO,mDAETC,YAAY,eACZC,OAAQlF,EACRmF,UAAU,EACVC,SAAU,EACVC,iBAAiB,EACjBC,YAAY,EACZC,cAAc,EACdC,OAvMa,SAACC,GACxBvF,EAAQuF,EAAWvH,OACnBgE,MAsMUwD,UAAWtD,GACXuD,YAAavD,GACbwD,WA/Ka,SAACC,GACxB,IAAIC,EAAUpD,OAAOmD,EAAejI,MAAM+E,KAAKC,UAC3CmD,EAAmB/F,EAAamB,QAClC,SAACvD,GAAD,OAAgBA,EAAM6E,KAAOqD,KAE/B/F,EAAgBgG,EAAiB,IACjC5C,MA0KU6C,aAAa,cAIjB,6BAAS1H,UAAU,yBACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,kCACb,kBAAC,IAAD,CACEL,KAAMA,EACNyB,MAAO,IACPiF,OAAQ,GACR7C,QAAS,CACPmE,YAAY,EACZC,qBAAqB,EACrBrE,OAAQ,CACNN,SAAS,OAMjB,yBAAKjD,UAAU,iCACb,yBAAKA,UAAU,iCACb,uBAAGA,UAAU,sCAAb,oFAGA,yBAAKA,UAAU,yCACb,2BACEE,KAAK,SACLG,MAAM,uCACNY,QAAS,kBAAMa,EAAU,SACzB9B,UACa,SAAX6B,EACI,0EACA,wCAIR,2BACE3B,KAAK,SACLG,MAAM,iCACNY,QAAS,kBAAMa,EAAU,UACzB9B,UACa,UAAX6B,EACI,0EACA,wCAGR,2BACE3B,KAAK,SACLG,MAAM,qBACNY,QAAS,kBAAMa,EAAU,SACzB9B,UACa,SAAX6B,EACI,0EACA,0CAKZ,yBAAK7B,UAAU,8BACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,oCACb,yBACEA,UAAU,uCACVU,IAAKmH,IACLjH,IAAI,uBAEN,uBAAGZ,UAAU,yCAAb,kCAGA,uBACEmB,MAAO,CAAE2G,MAAO,WAChB9H,UAAU,2CAET+B,EAAUgG,oBAGf,yBAAK/H,UAAU,oCACb,yBACEA,UAAU,uCACVU,IAAKsH,IACLpH,IAAI,uBAEN,uBAAGZ,UAAU,yCAAb,oDAGA,uBACEmB,MAAO,CAAE2G,MAAO,WAChB9H,UAAU,2CAET+B,EAAUoB,8BAGf,yBAAKnD,UAAU,oCACb,yBACEA,UAAU,kFACVU,IAAKuH,IACLrH,IAAI,uBAEN,uBAAGZ,UAAU,yCAAb,0DAGA,uBACEmB,MAAO,CAAE2G,MAAO,WAChB9H,UAAU,2CAET+B,EAAUqB,mCAU5BuB,IACC,kBAAC,EAAD,CAAe1E,QAAS4E,GAAqBvF,MAAOkC,IAErDkC,IACC,kBAAC,EAAD,CACEzD,QAAS2D,GACTC,aAAcA,GACd/F,KAAMA","file":"static/js/9.7c3785b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/comed_events.1f152545.svg\";","module.exports = __webpack_public_path__ + \"static/media/missed_events.6c6faf4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal_achievment_1.b3f45b02.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal_achievment_2.df06140c.svg\";","module.exports = __webpack_public_path__ + \"static/media/personal_achievment_3.b0eaf699.svg\";","import React, { useState } from \"react\";\r\nimport { CloseModalButton } from \"../calendar\";\r\nimport API from \"../../../../API\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\n\r\n// icons\r\nimport time from \"../../../../images/shared/modal-clock.svg\";\r\nimport descriptionImage from \"../../../../images/shared/modal-description.svg\";\r\n\r\nconst PersonalEventCreateModal = (props: any) => {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n\r\n  const [startDate, setStartDate] = useState<Date>(props.date);\r\n  const [startDateHours, setStartDateHours] = useState<number>(0);\r\n  const [startDateMinutes, setStartDateMinutes] = useState<number>(0);\r\n\r\n  const [endDate, setEndDate] = useState<Date>(props.date);\r\n  const [endDateHours, setEndDateHours] = useState<number>(0);\r\n  const [endDateMinutes, setEndDateMinutes] = useState<number>(0);\r\n\r\n  const updateStartTime = () => {\r\n    let startTime = new Date(startDate);\r\n    startTime.setHours(startDateHours, startDateMinutes, 0);\r\n    let finalTime = `${startTime.getFullYear()}-${\r\n      startTime.getMonth() + 1\r\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}`;\r\n    return finalTime;\r\n  };\r\n  const updateEndTime = () => {\r\n    let endTime = new Date(endDate);\r\n    endTime.setHours(endDateHours, endDateMinutes, 0);\r\n    let finalTime = `${endTime.getFullYear()}-${\r\n      endTime.getMonth() + 1\r\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}`;\r\n    return finalTime;\r\n  };\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    let start_time = await updateStartTime();\r\n    let end_time = await updateEndTime();\r\n\r\n    const data = {\r\n      title,\r\n      description,\r\n      start: start_time,\r\n      end: end_time,\r\n    };\r\n    API.postNoteCreateData(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal_centered\">\r\n      <div className=\"modal__wrapper\">\r\n        <CloseModalButton onClose={props.onClose} />\r\n        <div className=\"personal-create\">\r\n          <div className=\"personal-create-row\">\r\n            <input\r\n              className=\"personal-create__input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              value={title}\r\n              placeholder=\"Введите название\"\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={time}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"time\"\r\n            />\r\n            <div className=\"admin-create-event-modal__day-picker\">\r\n              <DayPickerInput\r\n                value={props.date}\r\n                onDayChange={(day) => {\r\n                  setStartDate(day);\r\n                  setEndDate(day);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"admin-create-event-modal-time\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setStartDateHours(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              {/* // colon- двоеточие */}\r\n              <div className=\"admin-create-event-modal__time-picker-colon\">\r\n                .\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setStartDateMinutes(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              &nbsp;-&nbsp;\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setEndDateHours(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              {/* // colon- двоеточие */}\r\n              <div className=\"admin-create-event-modal__time-picker-colon\">\r\n                .\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setEndDateMinutes(parseInt(e.target.value));\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"personal-create-row\">\r\n            <div className=\"personal-create__textarea-wrapper\">\r\n              <img\r\n                src={descriptionImage}\r\n                className=\"admin-create-event-modal-icon\"\r\n                alt=\"people\"\r\n              />\r\n              <input\r\n                name=\"description\"\r\n                required\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                placeholder=\"Добавить описание\"\r\n                className=\"personal-create__textarea\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"personal-create-row\">\r\n            <div className=\"personal-create__buttons-wrapper\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"personal-create__buttons-save button\"\r\n              >\r\n                Создать\r\n              </button>\r\n              <button\r\n                onClick={props.onClose}\r\n                className=\"personal-create__buttons-cancel button\"\r\n              >\r\n                отмена\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalEventCreateModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CloseModalButton } from \"../calendar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NoteInfoModal = (props: any) => {\r\n  const { event } = props;\r\n  let startDate = new Date(event.start);\r\n\r\n  let months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Cентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n  ];\r\n  let days = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n  ];\r\n\r\n  return (\r\n    <div className=\"modal_centered\">\r\n      <div className=\"modal__wrapper\">\r\n        <div className=\"event-info-modal\">\r\n          <CloseModalButton onClose={props.onClose} />\r\n          <div className=\"event-info__content\" style={{ width: \"90%\" }}>\r\n            <p\r\n              className=\"event-info__content-title\"\r\n              style={{ fontSize: \"24px\" }}\r\n            >\r\n              {event.title}\r\n            </p>\r\n            <p\r\n              className=\"event-info__content-date\"\r\n              style={{ fontSize: \"14px\" }}\r\n            >\r\n              {(startDate.getHours() < 10 ? \"0\" : \"\") + startDate.getHours()}.\r\n              {(startDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n                startDate.getMinutes()}{\" \"}\r\n              {days[startDate.getDay()]}, {months[startDate.getMonth()]}{\" \"}\r\n              {startDate.getDate()}\r\n            </p>\r\n            <p\r\n              className=\"event-info__content-description\"\r\n              style={{ fontSize: \"18px\" }}\r\n            >\r\n              {event.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../../shared/navbar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonalEventCreateModal from \"../calendar/modals/create-personal-event\";\r\nimport NoteInfoModal from \"../calendar/modals/note-info\";\r\n\r\n// images\r\nimport avatar from \"../../../images/shared/user.svg\";\r\nimport all from \"../../../images/shared/all_events.svg\";\r\nimport comed from \"../../../images/pages/comed_events.svg\";\r\nimport missed from \"../../../images/pages/missed_events.svg\";\r\nimport firstAchievement from \"../../../images/pages/personal_achievment_1.svg\";\r\nimport secondAchievement from \"../../../images/pages/personal_achievment_2.svg\";\r\nimport thirdAchievement from \"../../../images/pages/personal_achievment_3.svg\";\r\n\r\n// charts\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\n// fullcalendar\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\r\n\r\n// imports for view style(month, week, day, list)\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\r\nimport API from \"../../../API\";\r\nimport withDataContainer from \"../../../HOC/withData\";\r\n\r\nconst PersonalOffice = (props: any) => {\r\n  // calendar data\r\n  const [currentEvent, setCurrentEvent] = useState<any>({});\r\n  const [serverEvents, setServerEvents] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  // stats data\r\n  const [period, setPeriod] = useState(\"week\");\r\n  const [statsData, setStatsData] = useState<any>([]);\r\n\r\n  // person info\r\n  const [userInfo, setUserInfo] = useState<any>({});\r\n  console.log(\"PersonalOffice -> userInfo\", userInfo);\r\n  const [department, setDepartment] = useState<any>({});\r\n\r\n  const FIRST_MILE_STONE = 100;\r\n  const SECOND_MILE_STONE = 250;\r\n  const THIRD_MILE_STONE = 500;\r\n\r\n  useEffect(() => {\r\n    API.getPersonalStats(period).then((data) => {\r\n      setStatsData(data.data);\r\n    });\r\n  }, [period]);\r\n\r\n  useEffect(() => {\r\n    API.getUserInfo().then((data) => {\r\n      setUserInfo(data.data);\r\n      let departmentNumber = props.departments.filter(\r\n        (department: any) => +department.value === +data.data.department_id\r\n      );\r\n      setDepartment(departmentNumber[0]);\r\n    });\r\n  }, []);\r\n\r\n  // hide statistics on load\r\n  useEffect(() => {\r\n    const statAdr = document.getElementsByClassName(\"personal-office__stat\")[0];\r\n    const stat = statAdr as HTMLElement;\r\n    stat.style.display = \"none\";\r\n  }, []);\r\n\r\n  // * chart info\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [\r\n          statsData.quantity_of_attended_events || 0,\r\n          statsData.quantity_of_missed_events || -1,\r\n        ],\r\n        backgroundColor: [\"#FFCE56\", \"#EC4C47\"],\r\n      },\r\n    ],\r\n    labels: [\"Посещенных мероприятий\", \"Пропущенных мероприятий\"],\r\n    legend: {\r\n      display: false,\r\n    },\r\n    options: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  //* start function to toogle between calendar and stats\r\n  // TODO refactor\r\n  const openStatistics = () => {\r\n    const calendarAdr = document.getElementsByClassName(\r\n      \"personal-office__calendar\"\r\n    )[0];\r\n    const calendar = calendarAdr as HTMLElement;\r\n    const statAdr = document.getElementsByClassName(\"personal-office__stat\")[0];\r\n    const stat = statAdr as HTMLElement;\r\n\r\n    const statId = document.getElementById(\"personal-office__stat\");\r\n    const statIdFinal = statId as HTMLElement;\r\n    const calendarId = document.getElementById(\"personal-office__calendar\");\r\n    const calendarIdFinal = calendarId as HTMLElement;\r\n    calendar.style.display = \"none\";\r\n    stat.style.display = \"block\";\r\n    calendarIdFinal.className =\r\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_non_active\";\r\n    statIdFinal.className =\r\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_active\";\r\n  };\r\n  const openCalendar = () => {\r\n    const calendarAdr = document.getElementsByClassName(\r\n      \"personal-office__calendar\"\r\n    )[0];\r\n    const calendar = calendarAdr as HTMLElement;\r\n    const statAdr = document.getElementsByClassName(\"personal-office__stat\")[0];\r\n    const stat = statAdr as HTMLElement;\r\n\r\n    const statId = document.getElementById(\"personal-office__stat\");\r\n    const statIdFinal = statId as HTMLElement;\r\n    const calendarId = document.getElementById(\"personal-office__calendar\");\r\n    const calendarIdFinal = calendarId as HTMLElement;\r\n    stat.style.display = \"none\";\r\n    calendar.style.display = \"block\";\r\n    calendarIdFinal.className =\r\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_active\";\r\n    statIdFinal.className =\r\n      \"personal-office__buttons-section-btn personal-office__buttons-section-btn_non_active\";\r\n  };\r\n  // end function to toogle between calendar and stats\r\n\r\n  useEffect(() => {\r\n    API.getNotes().then((data) => {\r\n      setServerEvents(data.data);\r\n    });\r\n  }, []);\r\n\r\n  let [isPersonalEventCreate, setIsPersonalEventCreate] = useState<boolean>(\r\n    false\r\n  );\r\n  const togglePersonalEventCreate = () => {\r\n    setIsPersonalEventCreate(!isPersonalEventCreate);\r\n    updateEvents();\r\n  };\r\n\r\n  const handleDateSelect = (selectInfo: any) => {\r\n    setDate(selectInfo.start);\r\n    togglePersonalEventCreate();\r\n  };\r\n\r\n  const handleEventDropAndResize = (eventDropInfo: any) => {\r\n    let oldEvent = serverEvents.find(\r\n      (item: any) => item.id === Number(eventDropInfo.oldEvent._def.publicId)\r\n    ) || {\r\n      id: \"\",\r\n      start: \"\",\r\n      end: \"\",\r\n    };\r\n    oldEvent.start = eventDropInfo.event.startStr;\r\n    oldEvent.end = eventDropInfo.event.endStr;\r\n    const dataToPatch = {\r\n      start: oldEvent.start,\r\n      end: oldEvent.end,\r\n    };\r\n    console.log(\"handleEventDropAndResize -> dataToPatch\", dataToPatch);\r\n    API.patchNoteChangeData(dataToPatch, oldEvent.id);\r\n  };\r\n\r\n  let [isEventInfoOpen, setIsEventInfoOpen] = useState<boolean>(false);\r\n  const toggleEventInfoOpen = () => {\r\n    setIsEventInfoOpen(!isEventInfoOpen);\r\n  };\r\n  const handleEventClick = (eventClickInfo: any) => {\r\n    let eventId = Number(eventClickInfo.event._def.publicId);\r\n    let findCurrentEvent = serverEvents.filter(\r\n      (event: any) => event.id === eventId\r\n    );\r\n    setCurrentEvent(findCurrentEvent[0]);\r\n    toggleEventInfoOpen();\r\n  };\r\n\r\n  const updateEvents = () => {\r\n    API.getNotes().then((data) => {\r\n      setServerEvents(data.data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Navbar />\r\n        <div className=\" content__wrapper content__wrapper_no_margin personal-office\">\r\n          <section className=\"personal-office__info\">\r\n            <div className=\"personal-office__info-picture-block\">\r\n              <img\r\n                className=\"personal-office__info-avatar\"\r\n                src={userInfo.profile_img || avatar}\r\n                alt=\"personal\"\r\n              />\r\n            </div>\r\n            <div className=\"personal-office__info-content-wrapper\">\r\n              <div className=\"personal-office__info-section\">\r\n                <p className=\"personal-office__info-name\">\r\n                  {userInfo.name_surname}\r\n                </p>\r\n                <p className=\"personal-office__info-dep\">\r\n                  {department.label || \"Neobis\"} Department\r\n                </p>\r\n              </div>\r\n              <div className=\"personal-office__info-section\">\r\n                <p className=\"personal-office__info-text\">\r\n                  E-mail:\r\n                  <span className=\"personal-office__info-text-content\">\r\n                    {userInfo.email}\r\n                  </span>\r\n                </p>\r\n                <p className=\"personal-office__info-text\">\r\n                  Телефон:\r\n                  <span className=\"personal-office__info-text-content\">\r\n                    {userInfo.phone}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <Link to=\"/change_personal_data\" className=\"link\">\r\n                <button className=\"button personal-office__info-edit\">\r\n                  Редактировать\r\n                </button>\r\n              </Link>\r\n            </div>\r\n\r\n            <div className=\"personal-office__info-points\">\r\n              <div className=\"personal-office__info-points-container\">\r\n                <p className=\"personal-office__info-points-value\">\r\n                  {userInfo.points}\r\n                </p>\r\n              </div>\r\n              {userInfo.points ? (\r\n                userInfo.points >= FIRST_MILE_STONE ? (\r\n                  <div className=\"personal-office__info-points-achievements\">\r\n                    <div className=\"personal-office__info-points-achievements-images\">\r\n                      {userInfo.points ? (\r\n                        userInfo.points >= FIRST_MILE_STONE ? (\r\n                          <img\r\n                            className=\"personal-office__info-points-achievements-image\"\r\n                            src={firstAchievement}\r\n                            alt=\"achievement\"\r\n                          />\r\n                        ) : null\r\n                      ) : null}\r\n\r\n                      {userInfo.points ? (\r\n                        userInfo.points >= SECOND_MILE_STONE ? (\r\n                          <img\r\n                            className=\"personal-office__info-points-achievements-image\"\r\n                            src={secondAchievement}\r\n                            alt=\"achievement\"\r\n                          />\r\n                        ) : null\r\n                      ) : null}\r\n                      {userInfo.points ? (\r\n                        userInfo.points >= THIRD_MILE_STONE ? (\r\n                          <img\r\n                            className=\"personal-office__info-points-achievements-image\"\r\n                            src={thirdAchievement}\r\n                            alt=\"achievement\"\r\n                          />\r\n                        ) : null\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"personal-office__info-points-achievements-values\">\r\n                      {userInfo.points ? (\r\n                        userInfo.points >= FIRST_MILE_STONE ? (\r\n                          <span className=\"personal-office__info-points-achievements-value\">\r\n                            {FIRST_MILE_STONE}\r\n                          </span>\r\n                        ) : null\r\n                      ) : null}\r\n                      {userInfo.points ? (\r\n                        userInfo.points >= SECOND_MILE_STONE ? (\r\n                          <span className=\"personal-office__info-points-achievements-value\">\r\n                            {SECOND_MILE_STONE}\r\n                          </span>\r\n                        ) : null\r\n                      ) : null}\r\n                      {userInfo.points ? (\r\n                        userInfo.points >= THIRD_MILE_STONE ? (\r\n                          <span className=\"personal-office__info-points-achievements-value\">\r\n                            {THIRD_MILE_STONE}\r\n                          </span>\r\n                        ) : null\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              ) : null}\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"personal-office__buttons\">\r\n            <div className=\"personal-office__buttons-section \">\r\n              <p\r\n                id=\"personal-office__calendar\"\r\n                className=\"personal-office__buttons-section-btn personal-office__buttons-section-btn_active\"\r\n                onClick={openCalendar}\r\n              >\r\n                Календарь\r\n              </p>\r\n            </div>\r\n            <div className=\"personal-office__buttons-section\">\r\n              <p\r\n                id=\"personal-office__stat\"\r\n                className=\"personal-office__buttons-section-btn personal-office__buttons-section-btn_non_active\"\r\n                onClick={openStatistics}\r\n              >\r\n                Статистика\r\n              </p>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"personal-office__calendar\">\r\n            <FullCalendar\r\n              plugins={[\r\n                dayGridPlugin,\r\n                interactionPlugin,\r\n                timeGridPlugin,\r\n                listPlugin,\r\n                googleCalendarPlugin,\r\n                bootstrapPlugin,\r\n              ]}\r\n              height=\"610px\"\r\n              locale=\"ru\"\r\n              headerToolbar={{\r\n                left: \"prev,next today\",\r\n                center: \"title\",\r\n                right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\r\n              }}\r\n              initialView=\"dayGridMonth\"\r\n              events={serverEvents}\r\n              editable={true}\r\n              firstDay={1}\r\n              dayMaxEventRows={true}\r\n              selectable={true}\r\n              selectMirror={true}\r\n              select={handleDateSelect}\r\n              eventDrop={handleEventDropAndResize}\r\n              eventResize={handleEventDropAndResize}\r\n              eventClick={handleEventClick}\r\n              slotDuration=\"00:15:00\" // интервал при изменении на календаре\r\n            />\r\n          </section>\r\n\r\n          <section className=\"personal-office__stat\">\r\n            <div className=\"personal-office__stat-wrapper\">\r\n              <div className=\"personal-office__stat-doughnut\">\r\n                <Doughnut\r\n                  data={data}\r\n                  width={100}\r\n                  height={75}\r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: true,\r\n                    legend: {\r\n                      display: false,\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"personal-office__stat-content\">\r\n                <div className=\"personal-office__stat-buttons\">\r\n                  <p className=\"personal-office__stat-buttons-text\">\r\n                    Сортировать по:\r\n                  </p>\r\n                  <div className=\"personal-office__stat-buttons-content\">\r\n                    <input\r\n                      type=\"button\"\r\n                      value=\"Неделя\"\r\n                      onClick={() => setPeriod(\"week\")}\r\n                      className={\r\n                        period === \"week\"\r\n                          ? \"button personal-office__stat-button personal-office__stat-button_active\"\r\n                          : \"button personal-office__stat-button\"\r\n                      }\r\n                    />\r\n\r\n                    <input\r\n                      type=\"button\"\r\n                      value=\"Месяц\"\r\n                      onClick={() => setPeriod(\"month\")}\r\n                      className={\r\n                        period === \"month\"\r\n                          ? \"button personal-office__stat-button personal-office__stat-button_active\"\r\n                          : \"button personal-office__stat-button\"\r\n                      }\r\n                    />\r\n                    <input\r\n                      type=\"button\"\r\n                      value=\"Год\"\r\n                      onClick={() => setPeriod(\"year\")}\r\n                      className={\r\n                        period === \"year\"\r\n                          ? \"button personal-office__stat-button personal-office__stat-button_active\"\r\n                          : \"button personal-office__stat-button\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"personal-office__stat-info\">\r\n                  <div className=\"personal-office__stat-info-content\">\r\n                    <div className=\"personal-office__stat-info-block\">\r\n                      <img\r\n                        className=\"personal-office__stat-info-block-img\"\r\n                        src={all}\r\n                        alt=\"personal stat logo\"\r\n                      />\r\n                      <p className=\"personal-office__stat-info-block-text\">\r\n                        Всего\r\n                      </p>\r\n                      <p\r\n                        style={{ color: \"#1070CA\" }}\r\n                        className=\"personal-office__stat-info-block-number\"\r\n                      >\r\n                        {statsData.quantity_of_polls}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"personal-office__stat-info-block\">\r\n                      <img\r\n                        className=\"personal-office__stat-info-block-img\"\r\n                        src={comed}\r\n                        alt=\"personal stat logo\"\r\n                      />\r\n                      <p className=\"personal-office__stat-info-block-text\">\r\n                        Посещено\r\n                      </p>\r\n                      <p\r\n                        style={{ color: \"#F7D154\" }}\r\n                        className=\"personal-office__stat-info-block-number\"\r\n                      >\r\n                        {statsData.quantity_of_attended_events}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"personal-office__stat-info-block\">\r\n                      <img\r\n                        className=\"personal-office__stat-info-block-img personal-office__stat-info-block-img_small\"\r\n                        src={missed}\r\n                        alt=\"personal stat logo\"\r\n                      />\r\n                      <p className=\"personal-office__stat-info-block-text\">\r\n                        Пропущено\r\n                      </p>\r\n                      <p\r\n                        style={{ color: \"#EC4C47\" }}\r\n                        className=\"personal-office__stat-info-block-number\"\r\n                      >\r\n                        {statsData.quantity_of_missed_events}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n      {isEventInfoOpen && (\r\n        <NoteInfoModal onClose={toggleEventInfoOpen} event={currentEvent} />\r\n      )}\r\n      {isPersonalEventCreate && (\r\n        <PersonalEventCreateModal\r\n          onClose={togglePersonalEventCreate}\r\n          updateEvents={updateEvents}\r\n          date={date}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(PersonalOffice);\r\n"],"sourceRoot":""}
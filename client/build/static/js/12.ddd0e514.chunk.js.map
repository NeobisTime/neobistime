{"version":3,"sources":["components/pages/rooms/rooms-empty.tsx","images/pages/empty-room.png","components/pages/today-timetable/today-timetable.tsx","components/pages/today-timetable/index.js"],"names":["EmptyRoom","className","to","src","emptyRoom","alt","module","exports","TodayList","events","map","event","startDate","Date","start","endDate","end","id","key","style","backgroundColor","title","getHours","getMinutes","today","finalDate","getMonth","getDate","getFullYear","withNavbarContainer","props","useState","todayEvents","setTodayEvents","useEffect","API","getTodaySchedule","then","requestData","console","log","data","TodayTimetable"],"mappings":"6GAAA,6CAmBeA,IAfG,WAChB,OACE,yBAAKC,UAAU,cACb,uBAAGA,UAAU,oBAAb,8LACA,uBAAGA,UAAU,oBAAb,2HACA,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMC,GAAG,sBAAsBD,UAAU,QACvC,4BAAQA,UAAU,6BAAlB,mFAEF,yBAAKE,IAAKC,IAAWH,UAAU,oBAAoBI,IAAI,oB,oBCb/DC,EAAOC,QAAU,IAA0B,wC,6HCY9BC,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAC1B,OACE,yBAAKR,UAAU,eACZQ,EACCA,EAAOC,KAAI,SAACC,GACV,IAAMC,EAAY,IAAIC,KAAKF,EAAMG,OAC3BC,EAAU,IAAIF,KAAKF,EAAMK,KAC/B,OACE,kBAAC,IAAD,CAAMd,GAAE,iBAAYS,EAAMM,IAAMC,IAAKP,EAAMM,GAAIhB,UAAU,QACvD,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,yBACEA,UAAU,iCACVkB,MAAO,CAAEC,gBAAiB,yBAG9B,yBAAKnB,UAAU,4BACb,uBAAGA,UAAU,yBAAyBU,EAAMU,OAC5C,uBAAGpB,UAAU,yBACVW,EAAUU,WADb,KAEIV,EAAUW,aAAe,GAAK,IAAM,IACpCX,EAAUW,aAAc,IAH5B,KAIKR,EAAQO,WAJb,KAKIP,EAAQQ,aAAe,GAAK,IAAM,IAClCR,EAAQQ,aAAc,WAQpC,kBAAC,IAAD,QAoBJC,EAAQ,IAAIX,KACLY,EAAS,UAfD,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAIWD,EAAME,YAChB,KAFiB,OAEXF,EAAMG,UAFK,aAESH,EAAMI,eAkBpBC,iBAhBQ,SAACC,GAAgB,IAAD,EACCC,mBAAS,IADV,mBAC9BC,EAD8B,KACjBC,EADiB,KAQrC,OANAC,qBAAU,WACRC,IAAIC,mBAAmBC,MAAK,SAACC,GAC3BC,QAAQC,IAAI,gCAAiCF,GAC7CL,EAAeK,EAAYG,WAE5B,IAED,oCACE,uBAAGxC,UAAU,gBAAgBwB,GAC7B,kBAACjB,EAAD,CAAWC,OAAQuB,S,iCChFzB,oBAEeU,YAAf","file":"static/js/12.ddd0e514.chunk.js","sourcesContent":["import React from \"react\";\nimport emptyRoom from \"../../../images/pages/empty-room.png\";\nimport { Link } from \"react-router-dom\";\n\nconst EmptyRoom = () => {\n  return (\n    <div className=\"empty-room\">\n      <p className=\"empty-room__text\">Еще никто не бронировал эту комнату.</p>\n      <p className=\"empty-room__text\"> Вы можете быть первыми!</p>\n      <div className=\"empty-room__block\">\n        <Link to=\"/admin/create_event\" className=\"link\">\n          <button className=\"empty-room__button button\">Забронировать</button>\n        </Link>\n        <img src={emptyRoom} className=\"empty-room__image\" alt=\"empty rooom\" />\n      </div>\n    </div>\n  );\n};\n\nexport default EmptyRoom;\n","module.exports = __webpack_public_path__ + \"static/media/empty-room.9c157e05.png\";","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\nimport API from \"../../../API\";\nimport EmptyRoom from \"../rooms/rooms-empty\";\n\n// TODO: todayList нужно сделать переиспользуемым компонентом, он используется на  этой странице и на admin-end-events\n\ntype TodayListProps = {\n  events: object[];\n};\n\nexport const TodayList = ({ events }: TodayListProps) => {\n  return (\n    <div className=\"today__list\">\n      {events ? (\n        events.map((event: any) => {\n          const startDate = new Date(event.start);\n          const endDate = new Date(event.end);\n          return (\n            <Link to={`/today/${event.id}`} key={event.id} className=\"link\">\n              <div className=\"today__list-item\">\n                <div className=\"today__list-item-answer\">\n                  <div\n                    className=\"today__list-item-answer_circle\"\n                    style={{ backgroundColor: \"var(--neobisColor)\" }}\n                  ></div>\n                </div>\n                <div className=\"today__list-item-content\">\n                  <p className=\"today__list-item-text\">{event.title}</p>\n                  <p className=\"today__list-item-time\">\n                    {startDate.getHours()}:\n                    {(startDate.getMinutes() < 10 ? \"0\" : \"\") +\n                      startDate.getMinutes()}{\" \"}\n                    - {endDate.getHours()}:\n                    {(endDate.getMinutes() < 10 ? \"0\" : \"\") +\n                      endDate.getMinutes()}{\" \"}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          );\n        })\n      ) : (\n        <EmptyRoom />\n      )}\n    </div>\n  );\n};\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nlet today = new Date();\nexport let finalDate = `${\n  monthNames[today.getMonth()]\n}${\" \"}${today.getDate()}  ${today.getFullYear()}`;\n\nconst TodayTimetable = (props: any) => {\n  const [todayEvents, setTodayEvents] = useState([]);\n  useEffect(() => {\n    API.getTodaySchedule().then((requestData) => {\n      console.log(\"TodayTimetable -> requestData\", requestData);\n      setTodayEvents(requestData.data);\n    });\n  }, []);\n  return (\n    <>\n      <p className=\"today__title\">{finalDate}</p>\n      <TodayList events={todayEvents} />\n    </>\n  );\n};\n\nexport default withNavbarContainer(TodayTimetable);\n","import TodayTimetable from \"./today-timetable.tsx\";\n\nexport default TodayTimetable;\n"],"sourceRoot":""}
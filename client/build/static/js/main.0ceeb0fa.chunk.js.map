{"version":3,"sources":["components/shared/error-indicator/index.js","components/shared/error-indicator/error-indicator.jsx","components/shared/error-boundry/index.js","components/shared/error-boundry/error-boundry.tsx","App.tsx","serviceWorker.ts","index.tsx","HOC/withData.tsx","components/shared/spinner/spinner.tsx","images/shared/user.svg","components/shared/navbar/confirm-exit.tsx","images/shared/modal-peoples.svg","HOC/withNavbar.tsx","components/shared/alert/alert.tsx","components/shared/alert/index.js","components/pages/calendar/modals/event-info.tsx","components/pages/calendar/modals/admin-event.tsx","components/pages/calendar/calendar.tsx","images/pages/address.svg","components/shared/navbar/navbar.tsx","components/shared/navbar/index.js","images/shared/modal-clock.svg","images/shared/modal-description.svg","components/pages/admin/admin-navbar/admin-navbar.tsx","components/pages/admin/admin-navbar/index.js","components/shared/spinner/Group 81.svg","images/shared/modal-arrow-more-info.svg","images/shared/modal-edit.svg","API.ts","images/shared/modal-address.svg","images/shared/modal-file.svg","images/shared/alert_success.svg","images/shared/alert_error.svg"],"names":["ErrorIndicator","to","ErrorBoundry","state","hasError","this","setState","props","children","React","Component","Authorization","lazy","Registration","RecoveryPassword","ChangePassword","Notification","TodayTimetable","EventInfo","ChangePersonalData","AdminStat","PersonalOffice","EndEvents","EndEventInfo","CreateEventPage","EditEventsPage","RoomsList","RoomsEvent","App","fallback","className","exact","path","component","Calendar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","withDataContainer","departments","value","label","selectDepartments","days","months","yearsMonth","roomsNames","id","name","rooms","roomsForSelect","map","room","String","monthListRus","Spinner","video","useRef","data","title","random","Math","round","useState","text","setText","show","setShow","useEffect","timeout","setTimeout","timeOut","clearTimeout","src","neobis","alt","autoPlay","loop","muted","ref","module","exports","ConfirmExit","onClose","onClick","cookie","localStorage","removeItem","withNavbarContainer","type","Alert","successImage","errorImage","EventInfoModal","willGo","setWillGo","willNotGo","setWillNotGo","role","setRole","missedDeadline","setMissedDeadline","correctPollId","setCorrectPollId","event","deadline","Date","startDate","start","today","submitPoll","finalAnswer","answer","API","patchPoll","postPoll","getCookie","getMyPoll","correctPoll","filter","poll","log","getTime","editPen","style","width","fontSize","getHours","getMinutes","getDay","getMonth","getDate","description","address","place","checked","onChange","moreInfoArrow","setTitle","setDescription","image","setImage","setDepartments","date","setStartDate","startDateHours","setStartDateHours","startDateMinutes","setStartDateMinutes","endDate","setEndDate","endDateHours","setEndDateHours","endDateMinutes","setEndDateMinutes","setAddress","addressDisable","setAddressDisable","setPlace","finalUsers","setFinalUsers","usersForSend","setUsersForSend","showAddress","setShowAddress","getUsers","users","preFinalUsers","user","email","name_surname","updateStartTime","startTime","setHours","getFullYear","updateEndTime","endTime","a","preventDefault","start_time","end_time","departmentNumbers","CheckForAll","find","item","usersForSendEmails","formData","FormData","append","postEventCreateData","response","OpenAlert","request","required","placeholder","e","target","time","onDayChange","day","format","formatDate","locale","dateFnsFormat","parseInt","people","isMulti","isClearable","isSearchable","options","classNamePrefix","placeImage","disabled","descriptionImage","cols","rows","fileImage","padding","files","CloseModalButton","withRouter","currentEvent","setCurrentEvent","editable","setEditable","setDate","serverEvents","setServerEvents","getEvents","res","results","getItem","history","push","getElementsByClassName","innerHTML","isEventInfoOpen","setIsEventInfoOpen","toggleEventInfoOpen","alertType","setAlertType","alertText","setAlertText","isAlertOpen","setIsAlertOpen","openAlert","status","handleEventDropAndResize","eventDropInfo","oldEvent","Number","_def","publicId","end","my_event","finalStart","startStr","finalEnd","endStr","dataToPatch","public","patchEventChangeData","isAdminEventCreate","setIsAdminEventCreate","handleDateSelect","selectInfo","updateEvents","boxSizing","marginLeft","innerWidth","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","listPlugin","googleCalendarPlugin","bootstrapPlugin","height","headerToolbar","left","center","right","initialView","dateClick","firstDay","googleCalendarApiKey","eventSources","googleCalendarId","borderColor","classNames","dayMaxEventRows","selectable","selectMirror","select","eventDrop","eventResize","eventClick","eventClickInfo","eventId","findCurrentEvent","slotDuration","links","link","icon","faBell","faCalendarAlt","faHistory","faKey","isModalOpen","setIsModalOpen","userInfo","setUserInfo","department","setDepartment","openBurger","setOpenBurger","toggleModal","getUserInfo","departmentNumber","department_id","profile_img","avatar","clipPath","activeStyle","backgroundColor","faUserCircle","faUserShield","Navbar","faUserCheck","faCalendarPlus","faPoll","faEdit","AdminNavbar","http","Axios","create","baseURL","matches","RegExp","replace","decodeURIComponent","undefined","token","getData","url","get","headers","Accept","postData","post","patchData","patch","deleteEvent","delete","patchDataWithReturnJSON","key","setItem","limit","offset","search","period","getNotifications","getEventInfo","getRoomEvents","getTodaySchedule","getGeneralStat","getStatForAllDepartments","getEndEvents","getEventPoll","getNotes","getPersonalStats","getStatByDepartment","month","year","getRooms","getRole","statusText","postRegistrationData","postAuthData","postResetPasswordConfirm","postFormData","postNoteCreateData","postTokenData","patchNoteChangeData","postDataWithReturnJSON","postRecoveryPasswordData","patchMyEventPoll","pollId","patchUserInfo","patchFormData","deleteNote"],"mappings":"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","file":"static/js/main.0ceeb0fa.chunk.js","sourcesContent":["import ErrorIndicator from \"./error-indicator.jsx\";\r\n\r\nexport default ErrorIndicator;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div>\r\n      <p>Oops!</p>\r\n      <p>Something went wrong!</p>\r\n      <Link to='/'>\r\n        Go Back\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry.tsx\";\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends React.Component {\r\n\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// export default class ErrorBoundry extends React.Component {\r\n//   constructor(props: any) {\r\n//     super(props);\r\n//     this.state = { hasError: false };\r\n//   }\r\n\r\n//   static getDerivedStateFromError(error) {\r\n//     // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n//     return { hasError: true };\r\n//   }\r\n\r\n//   componentDidCatch(error, errorInfo) {\r\n//     this.setState({ hasError: true });\r\n//   }\r\n\r\n//   render() {\r\n//     if (this.state.hasError) {\r\n//       // Можно отрендерить запасной UI произвольного вида\r\n//       return <ErrorIndicator />;\r\n//     }\r\n\r\n//     return this.props.children; \r\n//   }\r\n// }\r\n","import React, { Suspense, lazy } from \"react\";\nimport \"./App.scss\";\nimport './styles/index.scss'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// common components\nimport ErrorBoundry from \"./components/shared/error-boundry\";\n\n// pages\nimport Calendar from \"./components/pages/calendar/calendar\";\nimport Spinner from \"./components/shared/spinner/spinner\";\nconst Authorization = lazy(() => import('./components/pages/auth'));\nconst Registration = lazy(() => import('./components/pages/registration'));\nconst RecoveryPassword = lazy(() => import('./components/pages/recovery-password'));\nconst ChangePassword = lazy(() => import('./components/pages/recovery-password/change-password'));\nconst Notification = lazy(() => import('./components/pages/notifications'));\nconst TodayTimetable = React.lazy(() => import('./components/pages/today-timetable'));\nconst EventInfo = React.lazy(() => import('./components/pages/single-event-info/single-event-info'));\nconst ChangePersonalData = React.lazy(() => import('./components/pages/change-personal-data'));\nconst AdminStat = React.lazy(() => import('./components/pages/admin/admin-statistics'));\nconst PersonalOffice = React.lazy(() => import('./components/pages/person-cabinet/person-cabinet'));\nconst EndEvents = React.lazy(() => import('./components/pages/admin/admin-end-events/admin-end-events'));\nconst EndEventInfo = React.lazy(() => import('./components/pages/admin/admin-end-events/table/end-event-info'));\nconst CreateEventPage = React.lazy(() => import('./components/pages/admin/admin-create-event'));\nconst EditEventsPage = React.lazy(() => import('./components/pages/admin/admin-edit-events'));\nconst RoomsList = React.lazy(() => import('./components/pages/rooms/rooms-list'));\nconst RoomsEvent = React.lazy(() => import('./components/pages/rooms/rooms-event'));\n\nconst App: React.FC = () => {\n  return (\n    <ErrorBoundry>\n      <Router>\n        <Suspense fallback={<Spinner />} >\n          <div className=\"main__wrapper\">\n            <Switch>\n              <Route exact path=\"/\" component={Calendar} />\n              <Route exact path=\"/auth\" component={Authorization} />\n              <Route exact path=\"/registration\" component={Registration} />\n              <Route exact path=\"/recovery_password\" component={RecoveryPassword} />\n              <Route exact path=\"/change_password\" component={ChangePassword} />\n              <Route exact path=\"/notifications\" component={Notification} />\n              <Route exact path=\"/today\" component={TodayTimetable} />\n              <Route exact path=\"/today/:id\" component={EventInfo} />\n              <Route exact path=\"/change_personal_data\" component={ChangePersonalData} />\n              <Route exact path=\"/personal_office\" component={PersonalOffice} />\n              <Route exact path=\"/rooms\" component={RoomsList} />\n              <Route exact path=\"/rooms/:id\" component={RoomsEvent} />\n              <Route exact path=\"/lead_admin\" component={AdminStat} />\n              <Route exact path=\"/lead_admin/end_events\" component={EndEvents} />\n              <Route exact path=\"/lead_admin/end_event/:id\" component={EndEventInfo} />\n              <Route exact path=\"/lead_admin/create_event\" component={CreateEventPage} />\n              <Route exact path=\"/lead_admin/create_event/:id\" component={CreateEventPage} />\n              <Route exact path=\"/lead_admin/all_events\" component={EditEventsPage} />\n\n              {/* <Route path=\"*\" component={NotFound} /> */}\n            </Switch>\n          </div>\n        </Suspense>\n      </Router>\n    </ErrorBoundry>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\n\r\nexport type roomType = {\r\n  id: number;\r\n  name: string;\r\n};\r\nconst withDataContainer = (Component: any) => {\r\n  const departments = [\r\n    { value: \"8\", label: \"Android\" },\r\n    { value: \"6\", label: \"C#\" },\r\n    { value: \"7\", label: \"Design\" },\r\n    { value: \"5\", label: \"Frontend\" },\r\n    { value: \"9\", label: \"IOS\" },\r\n    { value: \"4\", label: \"Java/Kotlin\" },\r\n    { value: \"2\", label: \"NodeJS\" },\r\n    { value: \"3\", label: \"PM\" },\r\n    { value: \"1\", label: \"Python\" },\r\n    { value: \"10\", label: \"Courses Manager\" },\r\n  ];\r\n  const selectDepartments = [{ value: \"all\", label: \"All\" }, ...departments];\r\n  let days = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n  ];\r\n  let months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Cентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n  ];\r\n  const yearsMonth = [\r\n    { value: \"0\", label: \"Январь\" },\r\n    { value: \"1\", label: \"Февраль\" },\r\n    { value: \"2\", label: \"Март\" },\r\n    { value: \"3\", label: \"Апрель\" },\r\n    { value: \"4\", label: \"Май\" },\r\n    { value: \"5\", label: \"Июнь\" },\r\n    { value: \"6\", label: \"Июль\" },\r\n    { value: \"7\", label: \"Август\" },\r\n    { value: \"8\", label: \"Сентябрь\" },\r\n    { value: \"9\", label: \"Октябрь\" },\r\n    { value: \"10\", label: \"Ноябрь\" },\r\n    { value: \"11\", label: \"Декабрь\" },\r\n  ];\r\n\r\n  const roomsNames: roomType[] = [\r\n    { id: 1, name: \"Classroom\" },\r\n    { id: 2, name: \"Hall\" },\r\n    { id: 3, name: \"Whole Office\" },\r\n    { id: 4, name: \"Staff Room\" },\r\n  ];\r\n  const rooms: roomType[] = [\r\n    ...roomsNames,\r\n    { id: 5, name: \"Another location\" },\r\n  ];\r\n\r\n  const roomsForSelect: any = rooms.map((room) => {\r\n    return {\r\n      value: String(room.id),\r\n      label: String(room.name),\r\n    };\r\n  });\r\n\r\n  const withData = (props: any) => {\r\n    return (\r\n      <Component\r\n        days={days}\r\n        monthListRus={months}\r\n        departments={departments}\r\n        selectDepartments={selectDepartments}\r\n        yearsMonth={yearsMonth}\r\n        rooms={rooms}\r\n        roomsNames={roomsNames}\r\n        roomsForSelect={roomsForSelect}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n  return withData;\r\n};\r\n\r\nexport default withDataContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./spinner.css\";\r\nimport neobis from \"./Group 81.svg\";\r\n\r\nconst Spinner = (props: any) => {\r\n  const video = React.useRef(null);\r\n  // play video if it's paused\r\n  //   if (video.current && video.current.paused) video.current.play();\r\n\r\n  const data = [\r\n    { id: 0, title: \"Выпрями спину\" },\r\n    { id: 1, title: \"in code we trust\" },\r\n    { id: 2, title: \"you will never code alone\" },\r\n    { id: 3, title: \"Продуктивного дня! :)\" },\r\n    { id: 4, title: \"This website offers you cookies in the kitchen :))\" },\r\n  ];\r\n  const random = Math.round(Math.random() * 4);\r\n  let [text, setText] = useState<string>(\"\");\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setText(data[random].title);\r\n    let timeout = setTimeout(() => setShow(false), props.timeOut);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div className=\"spinner\">\r\n          <img src={neobis} className=\"spinner__image\" alt=\"neobis logo\" />\r\n          <p className=\"spinner__text\">{text}</p>\r\n          <video\r\n            autoPlay={true}\r\n            loop={true}\r\n            muted={true}\r\n            className=\"spinner__video\"\r\n            ref={video}\r\n            src=\"/video/spinner.mp4\"\r\n          ></video>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","module.exports = __webpack_public_path__ + \"static/media/user.7a21cbe9.svg\";","import React from \"react\";\r\nimport \"./confirm.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype ConfirmProps = {\r\n  onClose: () => void;\r\n};\r\n\r\nconst ConfirmExit = ({ onClose }: ConfirmProps) => {\r\n  const handleClose = () => {\r\n    document.cookie = \"XSRF-Token = ; role =\";\r\n    localStorage.removeItem('token');\r\n  };\r\n  return (\r\n    <div className=\"confirm-exit\">\r\n      <p className=\"confirm-exit__text\">\r\n        Вы уверены, что хотите выйти с аккаунта?\r\n      </p>\r\n      <div className=\"confirm-exit__buttons-wrapper\">\r\n        <span className=\"confirm-exit__button_red_left\" onClick={onClose}>\r\n          Отмена\r\n        </span>\r\n        <Link to=\"/auth\" className=\"link\">\r\n          <span\r\n            onClick={handleClose}\r\n            className=\"confirm-exit__button_black_right\"\r\n          >\r\n            Выйти\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmExit;\r\n","module.exports = __webpack_public_path__ + \"static/media/modal-peoples.aed03edc.svg\";","import React from \"react\";\r\nimport Spinner from \"../components/shared/spinner/spinner\";\r\nimport Navbar from \"../components/shared/navbar\";\r\nimport AdminNavbar from \"../components/pages/admin/admin-navbar\";\r\n\r\nconst withNavbarContainer = (Component: any, type?: string) => {\r\n  const withNavbar = (props: any) => {\r\n    return (\r\n      <>\r\n        {type === \"admin\" ? (\r\n          <div className=\"wrapper\">\r\n            <AdminNavbar />\r\n            <div className=\"content__wrapper\">\r\n              <Spinner timeOut={600} />\r\n              <Component />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"wrapper\">\r\n            <Navbar />\r\n            <div className=\"content__wrapper\">\r\n              <Spinner timeOut={600} />\r\n              <Component />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return withNavbar;\r\n};\r\n\r\nexport default withNavbarContainer;\r\n","import React from \"react\";\r\nimport successImage from \"../../../images/shared/alert_success.svg\";\r\nimport errorImage from \"../../../images/shared/alert_error.svg\";\r\n\r\nconst Alert = (props: any) => {\r\n  const { type = \"error\", text = \"\" } = props;\r\n  return (\r\n    <div className=\"modal__alert\">\r\n      <div className=\"modal__alert_bottom_right\">\r\n        {type === \"success\" ? (\r\n          <section className=\"modal__alert-content\">\r\n            <img\r\n              src={successImage}\r\n              alt=\"success\"\r\n              className=\"modal__alert-image\"\r\n            />\r\n            <div className=\"modal__alert-content-wrapper\">\r\n              <p className=\"modal__alert-title\">Успешно</p>\r\n              <p className=\"modal__alert-text\">{text}</p>\r\n            </div>\r\n            <div className=\"modal__alert-close\">\r\n              <div\r\n                onClick={props.onClose}\r\n                className=\"modal__alert-close-content\"\r\n              >\r\n                &times;\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          <section className=\"modal__alert-content modal__alert-content_red\">\r\n            <img src={errorImage} alt=\"error\" className=\"modal__alert-image\" />\r\n            <div className=\"modal__alert-content-wrapper\">\r\n              <p className=\"modal__alert-title modal__alert-title_red\">\r\n                Ошибка\r\n              </p>\r\n              <p className=\"modal__alert-text modal__alert-text_red\">{text}</p>\r\n            </div>\r\n            <div className=\"modal__alert-close\">\r\n              <div\r\n                onClick={props.onClose}\r\n                className=\"modal__alert-close-content\"\r\n              >\r\n                &times;\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Alert from \"./alert\";\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport address from \"../../../../images/pages/address.svg\";\r\nimport moreInfoArrow from \"../../../../images/shared/modal-arrow-more-info.svg\";\r\nimport editPen from \"../../../../images/shared/modal-edit.svg\";\r\nimport { CloseModalButton } from \"../calendar\";\r\nimport API, { getCookie } from \"../../../../API\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EventInfoModal = (props: any) => {\r\n  const [willGo, setWillGo] = useState<boolean | undefined>(false);\r\n  const [willNotGo, setWillNotGo] = useState<boolean | undefined>(false);\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const [missedDeadline, setMissedDeadline] = useState(false);\r\n  const [correctPollId, setCorrectPollId] = useState<any>(0);\r\n  const { event } = props;\r\n  let deadline = new Date(event.deadline);\r\n  let startDate = new Date(event.start);\r\n  let today = new Date();\r\n\r\n  function submitPoll(finalAnswer: boolean) {\r\n    const data = {\r\n      event: event.id,\r\n      answer: finalAnswer,\r\n    };\r\n    if (correctPollId) {\r\n      API.patchPoll(data, correctPollId);\r\n    } else {\r\n      API.postPoll(data).then((data) => {\r\n        setCorrectPollId(data.data.id);\r\n      });\r\n    }\r\n  }\r\n  const handleWillGo = () => {\r\n    setWillGo(true);\r\n    setWillNotGo(false);\r\n    submitPoll(true);\r\n  };\r\n  const handleWillNotGo = () => {\r\n    setWillGo(false);\r\n    setWillNotGo(true);\r\n    submitPoll(false);\r\n  };\r\n\r\n  let months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Cентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n  ];\r\n  let days = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let role: any = getCookie(\"role\");\r\n    setRole(role);\r\n\r\n    // get data to poll if it exist\r\n    API.getMyPoll().then((data) => {\r\n      if (data.data) {\r\n        let correctPoll: any = [];\r\n        correctPoll = data.data.filter((poll: any) => {\r\n          return poll.event === event.title;\r\n        });\r\n        console.log(\"EventInfoModal -> correctPoll\", correctPoll);\r\n        // if exist fill correct data in inputs\r\n        if (correctPoll[0]) {\r\n          correctPoll[0].answer ? setWillGo(true) : setWillNotGo(true);\r\n          setCorrectPollId(correctPoll[0].id);\r\n        }\r\n      }\r\n    });\r\n\r\n    // disable input if deadline crossed\r\n    if (+today.getTime() > +deadline.getTime()) {\r\n      setMissedDeadline(true);\r\n    } else {\r\n      setMissedDeadline(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"modal__wrapper \">\r\n      <div className=\"event-info-modal\">\r\n        <CloseModalButton onClose={props.onClose} />\r\n        {role === \"admin\" ? (\r\n          <Link to={`/lead_admin/create_event/${event.id}`} className=\"link\">\r\n            <img\r\n              className=\"event-info-modal__edit-pen\"\r\n              src={editPen}\r\n              alt=\"edit\"\r\n            />\r\n          </Link>\r\n        ) : null}\r\n        <div className=\"event-info__content\" style={{ width: \"90%\" }}>\r\n          <p className=\"event-info__content-title\" style={{ fontSize: \"24px\" }}>\r\n            {event.title}\r\n          </p>\r\n          <p className=\"event-info__content-date\" style={{ fontSize: \"14px\" }}>\r\n            {(startDate.getHours() < 10 ? \"0\" : \"\") + startDate.getHours()}.\r\n            {(startDate.getMinutes() < 10 ? \"0\" : \"\") + startDate.getMinutes()}{\" \"}\r\n            {days[startDate.getDay()]}, {months[startDate.getMonth()]}{\" \"}\r\n            {startDate.getDate()}\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-description\"\r\n            style={{ fontSize: \"18px\" }}\r\n          >\r\n            {event.description}\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-address\"\r\n            style={{ fontSize: \"14px\" }}\r\n          >\r\n            <img\r\n              className=\"event-info__content-address-image\"\r\n              src={address}\r\n              alt=\"address\"\r\n            />\r\n            Адрес: {event.place.name} {event.address}\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-text_m_t\"\r\n            style={{ fontSize: \"14px\" }}\r\n          >\r\n            Посетители это событие?\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-text_deadline\"\r\n            style={{ fontSize: \"10px\" }}\r\n          >\r\n            deadline: {deadline.getDate()} {months[deadline.getMonth()]}{\" \"}\r\n            {deadline.getHours()}:\r\n            {(deadline.getMinutes() < 10 ? \"0\" : \"\") + deadline.getMinutes()}\r\n          </p>\r\n\r\n          {missedDeadline ? (\r\n            <p className=\"event-info__content-text\">Вы пропустили deadline</p>\r\n          ) : (\r\n            <div className=\"event-info-modal__form-wrapper\">\r\n              <form className=\"event-info-modal__form\">\r\n                <div className=\"d-flex\">\r\n                  <label className=\"event-info-modal__label\">\r\n                    Да\r\n                    <input\r\n                      className=\"event-info-modal__input\"\r\n                      type=\"checkbox\"\r\n                      checked={willGo}\r\n                      onChange={handleWillGo}\r\n                    />\r\n                    <span className=\"event-info-modal__checkmark\"></span>\r\n                  </label>\r\n                  <label className=\"event-info-modal__label\">\r\n                    Нет\r\n                    <input\r\n                      className=\"event-info-modal__input\"\r\n                      type=\"checkbox\"\r\n                      checked={willNotGo}\r\n                      onChange={handleWillNotGo}\r\n                    />\r\n                    <span className=\"event-info-modal__checkmark\"></span>\r\n                  </label>\r\n                </div>\r\n              </form>\r\n              <div className=\"event-info-modal__buttons\">\r\n                <Link to={`/today/${event.id}`}>\r\n                  <button className=\"event-info-modal__more-info button\">\r\n                    <div>Подробнее</div>\r\n                    <img\r\n                      src={moreInfoArrow}\r\n                      alt=\"arrow  more info\"\r\n                      className=\"event-info-modal__more-info-image\"\r\n                    />\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CloseModalButton } from \"../calendar\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport MomentLocaleUtils from \"react-day-picker/moment\";\r\nimport \"moment/locale/ru\";\r\n\r\nimport \"react-day-picker/lib/style.css\";\r\nimport Select from \"react-select\";\r\nimport API from \"../../../../API\";\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport withDataContainer from \"../../../../HOC/withData\";\r\n\r\n// icons\r\nimport time from \"../../../../images/shared/modal-clock.svg\";\r\nimport people from \"../../../../images/shared/modal-peoples.svg\";\r\nimport placeImage from \"../../../../images/shared/modal-address.svg\";\r\nimport descriptionImage from \"../../../../images/shared/modal-description.svg\";\r\nimport fileImage from \"../../../../images/shared/modal-file.svg\";\r\n\r\nconst AdminEventCreateModal = (props: any) => {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [image, setImage] = useState<any>([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const [startDate, setStartDate] = useState<Date>(props.date);\r\n  const [startDateHours, setStartDateHours] = useState<number>(0);\r\n  const [startDateMinutes, setStartDateMinutes] = useState<number>(0);\r\n\r\n  const [endDate, setEndDate] = useState<Date>(props.date);\r\n  const [endDateHours, setEndDateHours] = useState<number>(0);\r\n  const [endDateMinutes, setEndDateMinutes] = useState<number>(0);\r\n\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [addressDisable, setAddressDisable] = useState<boolean>(true);\r\n  const [place, setPlace] = useState<any>(null);\r\n\r\n  const [finalUsers, setFinalUsers] = useState([]);\r\n  const [usersForSend, setUsersForSend] = useState([]);\r\n\r\n  const [showAddress, setShowAddress] = useState<boolean>(false);\r\n\r\n  const FORMAT = \"dd/MM\";\r\n  function formatDate(date: any, format: any, locale: any) {\r\n    return dateFnsFormat(date, format, { locale });\r\n  }\r\n\r\n  const selectDepartments = [\r\n    { value: \"all\", label: \"All\" },\r\n    { value: \"8\", label: \"Android\" },\r\n    { value: \"6\", label: \"C#\" },\r\n    { value: \"7\", label: \"Design\" },\r\n    { value: \"5\", label: \"Frontend\" },\r\n    { value: \"9\", label: \"IOS\" },\r\n    { value: \"4\", label: \"Java/Kotlin\" },\r\n    { value: \"2\", label: \"NodeJS\" },\r\n    { value: \"3\", label: \"PM\" },\r\n    { value: \"1\", label: \"Python\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then((users) => {\r\n      let preFinalUsers: any = users.data.map((user: any) => {\r\n        return { value: user.email, label: user.name_surname };\r\n      });\r\n      setFinalUsers(preFinalUsers);\r\n    });\r\n  }, []);\r\n\r\n  const handleChangeAddress = (e: any) => {\r\n    setPlace(+e.value);\r\n    setAddressDisable(true);\r\n    setAddress(\"\");\r\n    if (+e.value === 5) {\r\n      setAddressDisable(false);\r\n      setShowAddress(true);\r\n    } else {\r\n      setShowAddress(false);\r\n    }\r\n  };\r\n\r\n  const updateStartTime = () => {\r\n    let startTime = new Date(startDate);\r\n    startTime.setHours(startDateHours, startDateMinutes, 0);\r\n    let finalTime = `${startTime.getFullYear()}-${\r\n      startTime.getMonth() + 1\r\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n  const updateEndTime = () => {\r\n    let endTime = new Date(endDate);\r\n    endTime.setHours(endDateHours, endDateMinutes, 0);\r\n    let finalTime = `${endTime.getFullYear()}-${\r\n      endTime.getMonth() + 1\r\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    let start_time = await updateStartTime();\r\n    let end_time = await updateEndTime();\r\n\r\n    // working with forming attendees\r\n    let departmentNumbers: any = [];\r\n    if (departments) {\r\n      let CheckForAll = departments.find((item: any) => item.value === \"all\");\r\n      if (CheckForAll) {\r\n        // * if selected all departments we return array with all\r\n        departmentNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n      } else {\r\n        // * else return selected deparments\r\n        departmentNumbers = departments.map((item: any) => {\r\n          return +item.value;\r\n        });\r\n      }\r\n    }\r\n    let usersForSendEmails: any = [];\r\n    if (usersForSend) {\r\n      usersForSendEmails = usersForSend.map((item: any) => {\r\n        return item.value;\r\n      });\r\n    }\r\n    //\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    if (image[0]) {\r\n      formData.append(\"image\", image[0]);\r\n    }\r\n    formData.append(\"start\", String(start_time));\r\n    formData.append(\"deadline\", String(start_time));\r\n    formData.append(\"end\", String(end_time));\r\n    formData.append(\"place\", place);\r\n    formData.append(\"address\", address);\r\n    formData.append(\"departments\", departmentNumbers);\r\n    formData.append(\"individual_users\", usersForSendEmails);\r\n    formData.append(\"my_event\", \"false\");\r\n    formData.append(\"public\", \"true\");\r\n\r\n    API.postEventCreateData(formData)\r\n      .then((response) => {\r\n        props.OpenAlert(response);\r\n      })\r\n      .catch((error) => {\r\n        props.OpenAlert(error.request);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal__wrapper\">\r\n      <div className=\"admin-create-event-modal\">\r\n        <CloseModalButton onClose={props.onClose} />\r\n\r\n        <div className=\"admin-create-event-modal-wrapper\">\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <input\r\n              className=\"admin-create-event-modal-input-title\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              value={title}\r\n              placeholder=\"Введите название\"\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={time}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"time\"\r\n            />\r\n            <div className=\"admin-create-event-modal__day-picker\">\r\n              <DayPickerInput\r\n                value={props.date}\r\n                placeholder=\"Дата\"\r\n                onDayChange={(day) => {\r\n                  setStartDate(day);\r\n                  setEndDate(day);\r\n                }}\r\n                format={FORMAT}\r\n                formatDate={formatDate}\r\n              />\r\n            </div>\r\n            <div className=\"admin-create-event-modal-time\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setStartDateHours(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              {/* // colon- двоеточие */}\r\n              <div className=\"admin-create-event-modal__time-picker-colon\">\r\n                .\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setStartDateMinutes(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              &nbsp;-&nbsp;\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setEndDateHours(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              {/* // colon- двоеточие */}\r\n              <div className=\"admin-create-event-modal__time-picker-colon\">\r\n                .\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setEndDateMinutes(parseInt(e.target.value));\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={people}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <Select\r\n              isMulti\r\n              isClearable={true}\r\n              isSearchable={true}\r\n              options={selectDepartments}\r\n              className=\"admin-create-event-modal-select\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"Добавить департамент\"\r\n              onChange={(e: any) => {\r\n                setDepartments(e);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={people}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <Select\r\n              isMulti\r\n              isClearable={true}\r\n              isSearchable={true}\r\n              options={finalUsers}\r\n              className=\"admin-create-event-modal-select\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"Добавить гостей\"\r\n              onChange={(e: any) => {\r\n                setUsersForSend(e);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row admin-create-event-modal-row_full\">\r\n            <div className=\"admin-create-event-modal-row_full-block\">\r\n              <img\r\n                src={placeImage}\r\n                className=\"admin-create-event-modal-icon\"\r\n                alt=\"people\"\r\n              />\r\n              <Select\r\n                options={props.roomsForSelect}\r\n                className=\"admin-create-event-modal-select_small admin-create-event-modal-row_full-block-select\"\r\n                classNamePrefix=\"select\"\r\n                placeholder=\"Добавить локацию\"\r\n                onChange={handleChangeAddress}\r\n              />\r\n            </div>\r\n            {showAddress ? (\r\n              <input\r\n                type=\"text\"\r\n                className=\"admin-create-event-modal-select-place\"\r\n                placeholder=\"Адрес\"\r\n                disabled={addressDisable ? true : false}\r\n                required={addressDisable ? false : true}\r\n                value={address}\r\n                onChange={(e) => {\r\n                  setAddress(e.target.value);\r\n                }}\r\n              />\r\n            ) : null}\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={descriptionImage}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <textarea\r\n              cols={30}\r\n              rows={1}\r\n              name=\"description\"\r\n              required\r\n              value={description}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n              }}\r\n              placeholder=\"Добавить описание\"\r\n              className=\"admin-create-event-modal-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={fileImage}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <label\r\n              className=\"custom-file-upload\"\r\n              style={{ fontSize: \"14px\", padding: \"8px\" }}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                className=\"custom-file-input\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.files);\r\n                }}\r\n              />\r\n              {image[0] ? image[0].name : \"Загрузите фото\"}\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <div className=\"event-info-modal__admin-buttons-wrapper\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"event-info-modal__admin-buttons-save button\"\r\n              >\r\n                Сохранить\r\n              </button>\r\n              <button\r\n                onClick={props.onClose}\r\n                className=\"event-info-modal__admin-buttons-cancel button\"\r\n              >\r\n                Отменить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(AdminEventCreateModal);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\r\n\r\n// fullcalendar\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\r\n\r\n// imports for view style(month, week, day, list)\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\r\n\r\n// modals\r\nimport EventInfoModal from \"./modals/event-info\";\r\nimport AdminChooseModal from \"./modals/admin-choose\";\r\nimport PersonalEventCreateModal from \"./modals/create-personal-event\";\r\nimport AdminEventCreateModal from \"./modals/admin-event\";\r\nimport API, { getCookie } from \"../../../API\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Alert from \"../../shared/alert\";\r\n\r\nexport const CloseModalButton = (props: any) => {\r\n  return (\r\n    <div className=\"event-info-modal__modal\">\r\n      <button\r\n        onClick={props.onClose}\r\n        className=\"event-info-modal__modal-btn button\"\r\n      >\r\n        &times;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Calendar = (props: any) => {\r\n  const [currentEvent, setCurrentEvent] = useState<any>({});\r\n  const [role, setRole] = useState<string | undefined>(\"\");\r\n  const [editable, setEditable] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  // ! date не обязателен если есть start\r\n  const [serverEvents, setServerEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.getEvents(1000, 0, \"\", \"\").then((res) => {\r\n      setServerEvents(res.data.results);\r\n    });\r\n    setRole(getCookie(\"role\"));\r\n    if (getCookie(\"role\") === \"admin\") {\r\n      setEditable(true);\r\n    } else {\r\n      setEditable(false);\r\n    }\r\n    let token = localStorage.getItem(\"neoTimeToken\");\r\n    if (!token) {\r\n      props.history.push(\"/auth\");\r\n    }\r\n    // chanching the localization of calendar buttons\r\n    document.getElementsByClassName(\"fc-today-button\")[0].innerHTML = \"Сегодня\";\r\n    document.getElementsByClassName(\"fc-dayGridMonth-button\")[0].innerHTML =\r\n      \"Месяц\";\r\n    document.getElementsByClassName(\"fc-timeGridWeek-button\")[0].innerHTML =\r\n      \"Неделя\";\r\n    document.getElementsByClassName(\"fc-timeGridDay-button\")[0].innerHTML =\r\n      \"День\";\r\n    document.getElementsByClassName(\"fc-listMonth-button\")[0].innerHTML =\r\n      \"Лист\";\r\n  }, []);\r\n\r\n  // google calendar api integration\r\n  const events = {\r\n    googleCalendarId: \"neobistime.kg@gmail.com\",\r\n    borderColor: \"transparent\",\r\n    classNames: [\"google-calendar\"],\r\n  };\r\n\r\n  let [isEventInfoOpen, setIsEventInfoOpen] = useState<boolean>(false);\r\n  const toggleEventInfoOpen = () => {\r\n    setIsEventInfoOpen(!isEventInfoOpen);\r\n  };\r\n  const handleEventClick = (eventClickInfo: any) => {\r\n    let eventId = Number(eventClickInfo.event._def.publicId);\r\n    let findCurrentEvent = serverEvents.filter(\r\n      (event: any) => event.id === eventId\r\n    );\r\n    setCurrentEvent(findCurrentEvent[0]);\r\n    toggleEventInfoOpen();\r\n  };\r\n\r\n  const [alertType, setAlertType] = useState(\"success\");\r\n  const [alertText, setAlertText] = useState(\"\");\r\n  let [isAlertOpen, setIsAlertOpen] = useState<boolean>(false);\r\n  const toggleAlertOpen = () => {\r\n    setIsAlertOpen(!isAlertOpen);\r\n  };\r\n  const openAlert = (response: any) => {\r\n    if (response.status >= 200 && response.status <= 299) {\r\n      setAlertType(\"success\");\r\n      setAlertText(\"Все прошло без ошибок\");\r\n    } else {\r\n      setAlertType(\"error\");\r\n      setAlertText(response.response || \"непредвиденная ошибка\");\r\n    }\r\n    setIsAlertOpen(true);\r\n    setTimeout(() => {\r\n      setIsAlertOpen(false);\r\n    }, 10000);\r\n  };\r\n\r\n  const updateStartTime = (startDate: any) => {\r\n    let startTime = new Date(startDate);\r\n    let finalTime = `${startTime.getFullYear()}-${\r\n      startTime.getMonth() + 1\r\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n  const updateEndTime = (endDate: any) => {\r\n    let endTime = new Date(endDate);\r\n    let finalTime = `${endTime.getFullYear()}-${\r\n      endTime.getMonth() + 1\r\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n\r\n  const handleEventDropAndResize = (eventDropInfo: any) => {\r\n    let oldEvent = serverEvents.find(\r\n      (item: any) => item.id === Number(eventDropInfo.oldEvent._def.publicId)\r\n    ) || {\r\n      id: \"\",\r\n      start: \"\",\r\n      end: \"\",\r\n      deadline: \"\",\r\n      my_event: false,\r\n      place: { id: 0 },\r\n    };\r\n    let finalStart = updateStartTime(eventDropInfo.event.startStr);\r\n    oldEvent.start = finalStart;\r\n    let finalEnd = updateEndTime(eventDropInfo.event.endStr);\r\n    oldEvent.end = finalEnd;\r\n    oldEvent.deadline = finalStart;\r\n    // TODO if my_event === false we should send attendees\r\n    const dataToPatch = {\r\n      start: oldEvent.start,\r\n      end: oldEvent.end,\r\n      deadline: oldEvent.start,\r\n      my_event: String(oldEvent.my_event),\r\n      public: String(true),\r\n      place: oldEvent.place.id,\r\n    };\r\n    console.log(\"handleEventDropAndResize -> dataToPatch\", dataToPatch)\r\n    API.patchEventChangeData(dataToPatch, oldEvent.id)\r\n      .then((response) => {\r\n        openAlert(response);\r\n      })\r\n      .catch((error) => {\r\n        openAlert(error.request);\r\n      });\r\n  };\r\n\r\n  let [isAdminEventCreate, setIsAdminEventCreate] = useState<boolean>(false);\r\n  const toggleAdminEventCreate = () => {\r\n    setIsAdminEventCreate(!isAdminEventCreate);\r\n    updateEvents();\r\n  };\r\n\r\n  const handleDateSelect = (selectInfo: any) => {\r\n    setDate(selectInfo.start);\r\n    if (getCookie(\"role\") === \"admin\") {\r\n      setIsAdminEventCreate(true)\r\n    }\r\n  };\r\n\r\n  const updateEvents = () => {\r\n    API.getEvents(1000, 0, \"\", \"\").then((res) => {\r\n      setServerEvents(res.data.results);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div style={{ boxSizing: \"border-box\", marginLeft: window.innerWidth > 400 ? '10px' : '0px' }}>\r\n        <FullCalendar\r\n          plugins={[\r\n            dayGridPlugin,\r\n            interactionPlugin,\r\n            timeGridPlugin,\r\n            listPlugin,\r\n            googleCalendarPlugin,\r\n            bootstrapPlugin,\r\n          ]}\r\n          height=\"98vh\"\r\n          headerToolbar={{\r\n            left: \"prev,next today\",\r\n            center: \"title\",\r\n            right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\r\n          }}\r\n          initialView={window.innerWidth > 600 ? \"dayGridMonth\" : \"listMonth\"}\r\n          dateClick={handleDateSelect} //TODO: edit\r\n          editable={editable}\r\n          firstDay={1}\r\n          googleCalendarApiKey=\"AIzaSyCqbA_GExr7SrXh3ZVwCvojL_AGSnXN3X8\"\r\n          eventSources={[events, serverEvents]}\r\n          dayMaxEventRows={true}\r\n          selectable={true}\r\n          selectMirror={true}\r\n          select={handleDateSelect}\r\n          eventDrop={handleEventDropAndResize}\r\n          eventResize={handleEventDropAndResize}\r\n          eventClick={handleEventClick}\r\n          slotDuration=\"00:15:00\" // интервал при изменении на календаре\r\n          locale=\"ru\"\r\n        />\r\n\r\n        {/* modals start */}\r\n        {isAlertOpen && (\r\n          <Alert type={alertType} text={alertText} onClose={toggleAlertOpen} />\r\n        )}\r\n        {isEventInfoOpen && (\r\n          <EventInfoModal onClose={toggleEventInfoOpen} event={currentEvent} />\r\n        )}\r\n        {isAdminEventCreate && (\r\n          <AdminEventCreateModal\r\n            OpenAlert={openAlert}\r\n            onClose={toggleAdminEventCreate}\r\n            date={date}\r\n          />\r\n        )}\r\n        {/* modals end */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withNavbarContainer(withRouter(Calendar));\r\n","module.exports = __webpack_public_path__ + \"static/media/address.e3d61208.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\r\nimport ConfirmExit from \"./confirm-exit\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarAlt,\r\n  faBell,\r\n  faKey,\r\n  faHistory,\r\n  faUserShield,\r\n  faUserCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// *icons\r\nimport avatar from \"../../../images/shared/user.svg\";\r\n// import calendar from \"../../../images/shared/calendar.svg\";\r\n// import notification from \"../../../images/shared/Notification.svg\";\r\n// import today from \"../../../images/shared/today.svg\";\r\n// import admin from \"../../../images/shared/admin.svg\";\r\n// import exit from \"../../../images/shared/exit.svg\";\r\n// import rooms from \"../../../images/shared/rooms.svg\";\r\nimport API, { getCookie } from \"../../../API\";\r\nimport withDataContainer from \"../../../HOC/withData\";\r\n\r\nconst links: any = [\r\n  { name: \"Уведомления\", link: \"/notifications\", icon: faBell },\r\n  { name: \"Календарь\", link: \"/\", icon: faCalendarAlt },\r\n  { name: \"Расписание дня\", link: \"/today\", icon: faHistory },\r\n  { name: \"Комнаты\", link: \"/rooms\", icon: faKey },\r\n];\r\n\r\nconst Navbar = (props: any) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<any>({});\r\n  const [role, setRole] = useState<string | undefined>(\"\");\r\n  const [department, setDepartment] = useState<any>({});\r\n  const [openBurger, setOpenBurger] = useState<boolean>(false);\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRole(getCookie(\"role\"));\r\n    API.getUserInfo().then((data) => {\r\n      setUserInfo(data.data);\r\n      let departmentNumber = props.departments.filter(\r\n        (department: any) => +department.value === +data.data.department_id\r\n      );\r\n      setDepartment(departmentNumber[0]);\r\n    });\r\n    let token = localStorage.getItem(\"neoTimeToken\");\r\n    if (!token) {\r\n      props.history.push(\"/auth\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar__burger-wrapper\">\r\n        <div\r\n          className={\r\n            openBurger ? \"navbar__burger open_burger\" : \"navbar__burger\"\r\n          }\r\n          onClick={() => {\r\n            setOpenBurger(!openBurger);\r\n          }}\r\n        >\r\n          <div className=\"navbar__burger-button\"></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"navbar\"\r\n        style={{\r\n          height:\r\n            window.innerWidth > 769 ? \"auto\" : openBurger ? \"340px\" : \"0px\",\r\n        }}\r\n      >\r\n        <Link to=\"/personal_office\" className=\"link\">\r\n          <div className=\"navbar__person-info\">\r\n            <div className=\"navbar__person-info-image-container\">\r\n              <img\r\n                className=\"navbar__person-info-image\"\r\n                src={userInfo.profile_img || avatar}\r\n                alt=\"default avatar\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"navbar__person-info-text_wrapper\">\r\n              <p className=\"navbar__person-info-name\">\r\n                {userInfo.name_surname}\r\n              </p>\r\n              <p className=\"navbar__person-info-text\">\r\n                {department.label || \"Neobis\"} department{\" \"}\r\n              </p>\r\n              <p className=\"navbar__person-info-text\">{userInfo.email}</p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n\r\n        <div\r\n          className=\"navbar__content\"\r\n          style={{\r\n            clipPath:\r\n              window.innerWidth > 769\r\n                ? \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\"\r\n                : openBurger\r\n                ? \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\"\r\n                : \"polygon(0 0, 100% 0, 100% 0, 0 0)\",\r\n          }}\r\n        >\r\n          <ul className=\"navbar__list\">\r\n            <NavLink\r\n              exact\r\n              to=\"/personal_office\"\r\n              activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n              className=\"navbar__list-link navbar__personal-office\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faUserCircle}\r\n                className=\"navbar__list-image \"\r\n              />\r\n              <li className=\"navbar__list-item\">Личный кабинет</li>\r\n            </NavLink>\r\n            {links.map((item: any) => (\r\n              <NavLink\r\n                exact\r\n                to={item.link}\r\n                activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n                className=\"navbar__list-link\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={item.icon}\r\n                  className=\"navbar__list-image \"\r\n                />\r\n                <li className=\"navbar__list-item\">{item.name}</li>\r\n              </NavLink>\r\n            ))}\r\n\r\n            {role === \"admin\" ? (\r\n              <NavLink\r\n                exact\r\n                to=\"/lead_admin\"\r\n                activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n                className=\"navbar__list-link\"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faUserShield}\r\n                  className=\"navbar__list-image \"\r\n                />\r\n                <li className=\"navbar__list-item\">Админ панель</li>\r\n              </NavLink>\r\n            ) : null}\r\n\r\n            <div className=\"navbar__list-link\" onClick={toggleModal}>\r\n              {/* <img src={exit} className=\"navbar__list-image\" alt=\"icon\" /> */}\r\n              <button\r\n                className=\"navbar__button navbar__list-item\"\r\n                style={{ padding: \"5px 0\" }}\r\n              >\r\n                Выйти\r\n              </button>\r\n            </div>\r\n          </ul>\r\n          {isModalOpen && <ConfirmExit onClose={toggleModal} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(withRouter(Navbar));\r\n","import Navbar from \"./navbar.tsx\";\r\n\r\nexport default Navbar;\r\n","module.exports = __webpack_public_path__ + \"static/media/modal-clock.54c4ba6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-description.3f90eec2.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\r\nimport ConfirmExit from \"../../../shared/navbar/confirm-exit\";\r\nimport API, { getCookie } from \"../../../../API\";\r\n\r\n// *icons\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarAlt,\r\n  faUserCheck,\r\n  faCalendarPlus,\r\n  faPoll,\r\n  faEdit,\r\n  faUserCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport avatar from \"../../../../images/shared/user.svg\";\r\n// import exit from \"../../../../images/shared/exit.svg\";\r\n// import events from \"../../../../images/shared/all_events.svg\";\r\n// import peoples from \"../../../../images/shared/admin_members.svg\";\r\n// import create_event from \"../../../../images/shared/edit.svg\";\r\n// import stat from \"../../../../images/shared/adminn_stat.svg\";\r\n// import calendar from \"../../../../images/shared/calendar.svg\";\r\nimport withDataContainer from \"../../../../HOC/withData\";\r\n\r\nconst AdminNavbar = (props: any) => {\r\n  let [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<any>({});\r\n  const [department, setDepartment] = useState<any>({});\r\n  const [openBurger, setOpenBurger] = useState<boolean>(false);\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n  useEffect(() => {\r\n    API.getUserInfo().then((data) => {\r\n      setUserInfo(data.data);\r\n      let departmentNumber = props.departments.filter(\r\n        (department: any) => +department.value === +data.data.department_id\r\n      );\r\n      setDepartment(departmentNumber[0]);\r\n    });\r\n    let token = localStorage.getItem(\"neoTimeToken\");\r\n    if (!token) {\r\n      props.history.push(\"/auth\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"navbar__burger-wrapper\"\r\n        style={{\r\n          backgroundColor: \"#6C63FF\",\r\n        }}\r\n      >\r\n        <div\r\n          className={\r\n            openBurger ? \"navbar__burger open_burger\" : \"navbar__burger\"\r\n          }\r\n          onClick={() => {\r\n            setOpenBurger(!openBurger);\r\n          }}\r\n        >\r\n          <div className=\"navbar__burger-button\"></div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"navbar\"\r\n        style={{\r\n          height:\r\n            window.innerWidth > 769 ? \"auto\" : openBurger ? \"340px\" : \"0px\",\r\n          backgroundColor: \"#6C63FF\",\r\n        }}\r\n      >\r\n        <Link to=\"/personal_office\" className=\"link\">\r\n          <div className=\"navbar__person-info\">\r\n            <div className=\"navbar__person-info-image-container\">\r\n              <img\r\n                className=\"navbar__person-info-image\"\r\n                src={userInfo.profile_img || avatar}\r\n                alt=\"default avatar\"\r\n              />\r\n            </div>\r\n            <div className=\"navbar__person-info-text_wrapper\">\r\n              <p className=\"navbar__person-info-name\">\r\n                {userInfo.name_surname}\r\n              </p>\r\n              <p className=\"navbar__person-info-text\">\r\n                {department.label || \"Neobis\"} department{\" \"}\r\n              </p>\r\n              <p className=\"navbar__person-info-text\">{userInfo.email}</p>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <div\r\n          className=\"navbar__content\"\r\n          style={{\r\n            clipPath:\r\n              window.innerWidth > 769\r\n                ? \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\"\r\n                : openBurger\r\n                ? \"polygon(0 0, 100% 0, 100% 100%, 0 100%)\"\r\n                : \"polygon(0 0, 100% 0, 100% 0, 0 0)\",\r\n            backgroundColor: \"#6C63FF\",\r\n          }}\r\n        >\r\n          <ul className=\"navbar__list\">\r\n            <NavLink\r\n              exact\r\n              to=\"/personal_office\"\r\n              activeStyle={{ backgroundColor: \"#5E57DB\" }}\r\n              className=\"navbar__list-link navbar__personal-office\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faUserCircle}\r\n                className=\"navbar__list-image \"\r\n              />\r\n              <li className=\"navbar__list-item\">Личный кабинет</li>\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              to=\"/\"\r\n              activeStyle={{ backgroundColor: \"#5E57DB\" }}\r\n              className=\"navbar__list-link\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faCalendarAlt}\r\n                className=\"navbar__list-image \"\r\n              />\r\n              <li className=\"navbar__list-item\">На главную</li>\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              to=\"/lead_admin/end_events\"\r\n              activeStyle={{ backgroundColor: \"#5E57DB\" }}\r\n              className=\"navbar__list-link\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faUserCheck}\r\n                className=\"navbar__list-image \"\r\n              />\r\n              <li className=\"navbar__list-item\">Мероприятия</li>\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              to=\"/lead_admin/create_event\"\r\n              activeStyle={{ backgroundColor: \"#5E57DB\" }}\r\n              className=\"navbar__list-link\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faCalendarPlus}\r\n                className=\"navbar__list-image \"\r\n              />\r\n              <li className=\"navbar__list-item\">Бронирование</li>\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              to=\"/lead_admin\"\r\n              activeStyle={{ backgroundColor: \"#5E57DB\" }}\r\n              className=\"navbar__list-link\"\r\n            >\r\n              <FontAwesomeIcon icon={faPoll} className=\"navbar__list-image \" />\r\n              <li className=\"navbar__list-item\">Статистика</li>\r\n            </NavLink>\r\n            <NavLink\r\n              exact\r\n              to=\"/lead_admin/all_events\"\r\n              activeStyle={{ backgroundColor: \"#5E57DB\" }}\r\n              className=\"navbar__list-link\"\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} className=\"navbar__list-image \" />\r\n              <li className=\"navbar__list-item\">Все события</li>\r\n            </NavLink>\r\n            <div className=\"navbar__list-link \" onClick={toggleModal}>\r\n              {/* <img src={exit} className=\"navbar__list-image\" alt=\"icon\" /> */}\r\n              <button\r\n                className=\"navbar__button navbar__list-item\"\r\n                style={{ padding: \"5px 0\" }}\r\n              >\r\n                Выйти\r\n              </button>\r\n            </div>\r\n          </ul>\r\n          {isModalOpen && <ConfirmExit onClose={toggleModal} />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(withRouter(AdminNavbar));\r\n","import AdminNavbar from \"./admin-navbar.tsx\";\r\n\r\nexport default AdminNavbar;\r\n","module.exports = __webpack_public_path__ + \"static/media/Group 81.d740202d.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-arrow-more-info.3f37dd36.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-edit.9ff6b61a.svg\";","import Axios from \"axios\";\r\n\r\nconst http = Axios.create({\r\n  // baseURL: \"https://cors-anywhere.herokuapp.com/http://46.101.110.53/api/\",\r\n  baseURL: \"https://calendar.neobis.kg/api/\",\r\n  // baseURL: \"http://46.101.110.53/api/\",\r\n  // baseURL: \"http://www.220-accentuation.co/api/\",\r\n});\r\n\r\nexport function getCookie(name: string) {\r\n  let matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" +\r\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\r\n        \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n// let token = getCookie(\"XSRF-Token\") || localStorage.getItem(\"token\");\r\nlet token = localStorage.getItem(\"neoTimeToken\");\r\n\r\nconst getData = (url: string) => {\r\n  return http.get(url, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\n\r\nconst postData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postGetRoleData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then(\r\n      (response) => {\r\n        console.log(\"%c \" + response, \"color: lightgreen\");\r\n        return response;\r\n      },\r\n      (error) => {\r\n        console.log(\"%c \" + error.response.statusText, \"color: red\");\r\n        return error;\r\n      }\r\n    );\r\n};\r\n\r\nconst patchData = (url: string, data: any) => {\r\n  return http\r\n    .patch(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postTokenData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postDataWithReturnJSON = (url: string, data: any) => {\r\n  return http.post(url, data, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\n\r\nconst deleteEvent = (url: string) => {\r\n  return http.delete(url, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\n\r\nconst patchDataWithReturnJSON = (url: string, data: any) => {\r\n  return http\r\n    .patch(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postFormData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\nconst patchFormData = (url: string, data: any) => {\r\n  return http\r\n    .patch(url, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nasync function postAuthData(url: string, data: object) {\r\n  let answer = await http.post(url, data).then((response) => {\r\n    document.cookie = `XSRF-Token=${response.data.key}`;\r\n    localStorage.setItem(\"neoTimeToken\", response.data.key);\r\n    return response;\r\n  });\r\n  return answer;\r\n}\r\n\r\nexport default {\r\n  getEvents: (\r\n    limit: number = 10,\r\n    offset: number = 0,\r\n    search: string = \"\",\r\n    period: string = \"\"\r\n  ) =>\r\n    getData(\r\n      `events/?limit=${limit}&offset=${offset}&search=${search}&period=${period}`\r\n    ),\r\n  getNotifications: (\r\n    limit: number = 10,\r\n    offset: number = 0,\r\n    search: string = \"\",\r\n    period: string = \"\"\r\n  ) =>\r\n    getData(\r\n      `notification/?limit=${limit}&offset=${offset}&search=${search}&period=${period}`\r\n    ),\r\n  getEventInfo: (id: string | number) => getData(`events/${id}/`),\r\n  getRoomEvents: (\r\n    id: number | string,\r\n    limit: number,\r\n    offset: number,\r\n    period: string\r\n  ) => getData(`place/${id}/?limit=${limit}&offset=${offset}&period=${period}`),\r\n  getTodaySchedule: () => getData(\"today_events/\"),\r\n  getUsers: () => getData(\"users/\"),\r\n  getGeneralStat: () => getData(\"general_stats/\"),\r\n  getStatForAllDepartments: () => getData(\"stats_for_all_departments/\"),\r\n  getEndEvents: () => getData(\"my_events/\"),\r\n  getUserInfo: () => getData(\"users/rest-auth/user/\"),\r\n  getMyPoll: () => getData(\"my_poll/\"),\r\n  getEventPoll: (id: number | string, limit: number, offset: number) =>\r\n    getData(`my_events/${id}/?limit=${limit}&offset=${offset}`),\r\n  getNotes: () => getData(\"notes/\"),\r\n  getPersonalStats: (period: string) =>\r\n    getData(`self-statistic/?period=${period}`),\r\n  getStatByDepartment: (department: number, month: number, year: boolean) =>\r\n    getData(\r\n      `stats_by_department/?department_id=${department}&month=${month}&year=${year}`\r\n    ),\r\n  getRooms: () => getData(\"place/\"),\r\n\r\n  getRole: (token: string) => postGetRoleData(\"users/is_user_staff/\", token),\r\n  postRegistrationData: (data: object) =>\r\n    postData(\"users/rest-auth/registration/\", data),\r\n  postAuthData: (data: object) => postAuthData(\"users/rest-auth/login/\", data),\r\n  postResetPasswordConfirm: (data: object) =>\r\n    postData(\"users/rest-auth/password/reset/confirm/\", data),\r\n  postEventCreateData: (data: object) => postFormData(\"events/\", data),\r\n  postNoteCreateData: (data: object) => postTokenData(\"notes/\", data),\r\n  patchEventChangeData: (data: object, id: number | string) =>\r\n    patchData(`events/${id}/`, data),\r\n  patchNoteChangeData: (data: object, id: number | string) =>\r\n    patchData(`notes/${id}/`, data),\r\n  patchPoll: (data: object, id: number | string) =>\r\n    patchDataWithReturnJSON(`poll/${id}/`, data),\r\n  postPoll: (data: object) => postDataWithReturnJSON(`poll/`, data),\r\n  postRecoveryPasswordData: (data: object) =>\r\n    postData(`users/rest-auth/password/reset/`, data),\r\n  patchMyEventPoll: (eventId: any, pollId: any, data: object) =>\r\n    patchDataWithReturnJSON(`my_events/${eventId}/poll/${pollId}/`, data),\r\n  patchUserInfo: (data: object) => patchFormData(`users/rest-auth/user/`, data),\r\n\r\n  deleteEvent: (id: number | string) => deleteEvent(`events/${id}/`),\r\n  deleteNote: (id: number | string) => deleteEvent(`notes/${id}/`),\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/modal-address.f2fd0a00.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-file.83e2cf3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert_success.4190ac11.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert_error.4707e09c.svg\";"],"sourceRoot":""}
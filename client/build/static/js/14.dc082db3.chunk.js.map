{"version":3,"sources":["components/pages/rooms/rooms-empty.tsx","images/pages/empty-room.png","components/pages/today-timetable/today-timetable.tsx","components/pages/today-timetable/index.js"],"names":["EmptyRoom","className","to","src","emptyRoom","alt","module","exports","TodayList","events","map","event","startDate","Date","start","endDate","end","id","key","today","getTime","title","getHours","getMinutes","finalDate","getMonth","getDate","getFullYear","withNavbarContainer","props","useState","todayEvents","setTodayEvents","useEffect","API","getTodaySchedule","then","requestData","data","TodayTimetable"],"mappings":"6GAAA,6CAmBeA,IAfG,WAChB,OACE,yBAAKC,UAAU,cACb,uBAAGA,UAAU,oBAAb,8LACA,uBAAGA,UAAU,oBAAb,2HACA,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAMC,GAAG,sBAAsBD,UAAU,QACvC,4BAAQA,UAAU,6BAAlB,mFAEF,yBAAKE,IAAKC,IAAWH,UAAU,oBAAoBI,IAAI,oB,oBCb/DC,EAAOC,QAAU,IAA0B,wC,6HCY9BC,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAC1B,OACE,yBAAKR,UAAU,eACZQ,EACCA,EAAOC,KAAI,SAACC,GACV,IAAMC,EAAY,IAAIC,KAAKF,EAAMG,OAC3BC,EAAU,IAAIF,KAAKF,EAAMK,KAC/B,OACE,kBAAC,IAAD,CAAMd,GAAE,iBAAYS,EAAMM,IAAMC,IAAKP,EAAMM,GAAIhB,UAAU,QACvD,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,2BACb,yBACEA,WACGkB,EAAMC,WAAaR,EAAUQ,UAC1B,qCACA,oCAIV,yBAAKnB,UAAU,4BACb,uBAAGA,UAAU,yBAAyBU,EAAMU,OAC5C,uBAAGpB,UAAU,yBACVW,EAAUU,WADb,KAEIV,EAAUW,aAAe,GAAK,IAAM,IACpCX,EAAUW,aAAc,IAH5B,KAIKR,EAAQO,WAJb,KAKIP,EAAQQ,aAAe,GAAK,IAAM,IAClCR,EAAQQ,aAAc,WAQpC,kBAAC,IAAD,QAoBJJ,EAAQ,IAAIN,KACLW,EAAS,UAfP,CACX,uCACA,6CACA,2BACA,uCACA,qBACA,2BACA,2BACA,uCACA,8CACA,6CACA,uCACA,8CAIOL,EAAMM,YACZ,KAFiB,OAEXN,EAAMO,UAFK,aAESP,EAAMQ,eAiBpBC,iBAfQ,SAACC,GAAgB,IAAD,EACCC,mBAAS,IADV,mBAC9BC,EAD8B,KACjBC,EADiB,KAOrC,OALAC,qBAAU,WACRC,IAAIC,mBAAmBC,MAAK,SAACC,GAC3BL,EAAeK,EAAYC,WAE5B,IAED,oCACE,uBAAGrC,UAAU,gBAAgBuB,GAC7B,kBAAChB,EAAD,CAAWC,OAAQsB,S,iCClFzB,oBAEeQ,YAAf","file":"static/js/14.dc082db3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport emptyRoom from \"../../../images/pages/empty-room.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EmptyRoom = () => {\r\n  return (\r\n    <div className=\"empty-room\">\r\n      <p className=\"empty-room__text\">Еще никто не бронировал эту комнату.</p>\r\n      <p className=\"empty-room__text\"> Вы можете быть первыми!</p>\r\n      <div className=\"empty-room__block\">\r\n        <Link to=\"/admin/create_event\" className=\"link\">\r\n          <button className=\"empty-room__button button\">Забронировать</button>\r\n        </Link>\r\n        <img src={emptyRoom} className=\"empty-room__image\" alt=\"empty rooom\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyRoom;\r\n","module.exports = __webpack_public_path__ + \"static/media/empty-room.9c157e05.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\r\nimport API from \"../../../API\";\r\nimport EmptyRoom from \"../rooms/rooms-empty\";\r\n\r\n// TODO: todayList нужно сделать переиспользуемым компонентом, он используется на  этой странице и на admin-end-events\r\n\r\ntype TodayListProps = {\r\n  events: object[];\r\n};\r\n\r\nexport const TodayList = ({ events }: TodayListProps) => {\r\n  return (\r\n    <div className=\"today__list\">\r\n      {events ? (\r\n        events.map((event: any) => {\r\n          const startDate = new Date(event.start);\r\n          const endDate = new Date(event.end);\r\n          return (\r\n            <Link to={`/today/${event.id}`} key={event.id} className=\"link\">\r\n              <div className=\"today__list-item\">\r\n                <div className=\"today__list-item-answer\">\r\n                  <div\r\n                    className={\r\n                      +today.getTime() > +startDate.getTime()\r\n                        ? \"today__list-item-answer_circle_red\"\r\n                        : \"today__list-item-answer_circle\"\r\n                    }\r\n                  ></div>\r\n                </div>\r\n                <div className=\"today__list-item-content\">\r\n                  <p className=\"today__list-item-text\">{event.title}</p>\r\n                  <p className=\"today__list-item-time\">\r\n                    {startDate.getHours()}:\r\n                    {(startDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n                      startDate.getMinutes()}{\" \"}\r\n                    - {endDate.getHours()}:\r\n                    {(endDate.getMinutes() < 10 ? \"0\" : \"\") +\r\n                      endDate.getMinutes()}{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })\r\n      ) : (\r\n        <EmptyRoom />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nlet months = [\r\n  \"Январь\",\r\n  \"Февраль\",\r\n  \"Март\",\r\n  \"Апрель\",\r\n  \"Май\",\r\n  \"Июнь\",\r\n  \"Июль\",\r\n  \"Август\",\r\n  \"Cентябрь\",\r\n  \"Октябрь\",\r\n  \"Ноябрь\",\r\n  \"Декабрь\",\r\n];\r\nlet today = new Date();\r\nexport let finalDate = `${\r\n  months[today.getMonth()]\r\n}${\" \"}${today.getDate()}  ${today.getFullYear()}`;\r\n\r\nconst TodayTimetable = (props: any) => {\r\n  const [todayEvents, setTodayEvents] = useState([]);\r\n  useEffect(() => {\r\n    API.getTodaySchedule().then((requestData) => {\r\n      setTodayEvents(requestData.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <p className=\"today__title\">{finalDate}</p>\r\n      <TodayList events={todayEvents} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withNavbarContainer(TodayTimetable);\r\n","import TodayTimetable from \"./today-timetable.tsx\";\r\n\r\nexport default TodayTimetable;\r\n"],"sourceRoot":""}
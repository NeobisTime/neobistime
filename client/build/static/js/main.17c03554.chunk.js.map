{"version":3,"sources":["API.ts","components/shared/spinner/spinner.tsx","HOC/withData.tsx","images/shared/user.svg","components/shared/navbar/confirm-exit.tsx","images/shared/calendar.svg","images/shared/exit.svg","images/shared/modal-peoples.svg","HOC/withNavbar.tsx","images/pages/address.svg","components/pages/calendar/modals/event-info.tsx","components/pages/calendar/modals/admin-event.tsx","components/pages/calendar/calendar.tsx","components/shared/navbar/navbar.tsx","components/shared/navbar/index.js","images/shared/all_events.svg","images/shared/modal-clock.svg","images/shared/modal-description.svg","components/pages/admin/admin-navbar/admin-navbar.tsx","components/pages/admin/admin-navbar/index.js","components/shared/spinner/Group 81.svg","images/shared/Notification.svg","images/shared/today.svg","images/shared/admin.svg","images/shared/rooms.svg","images/shared/admin_members.svg","images/shared/edit.svg","images/shared/adminn_stat.svg","images/shared/modal-arrow-more-info.svg","images/shared/modal-edit.svg","images/shared/modal-address.svg","images/shared/modal-file.svg","components/shared/error-indicator/index.js","components/shared/error-indicator/error-indicator.jsx","components/shared/error-boundry/index.js","components/shared/error-boundry/error-boundry.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["http","Axios","create","baseURL","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","token","getData","url","get","headers","Accept","Authorization","patchData","data","patch","postDataWithReturnJSON","post","patchDataWithReturnJSON","a","then","response","key","error","textError","alert","answer","getEvents","limit","offset","search","period","getEventInfo","id","getRoomEvents","getTodaySchedule","getUsers","getGeneralStat","getStatForAllDepartments","getEndEvents","getUserInfo","getMyPoll","getEventPoll","getNotes","getPersonalStats","getRole","console","log","statusText","postStatByDepartment","postRegistrationData","textResponse","postData","postAuthData","postEventCreateData","postFormData","postNoteCreateData","postTokenData","patchEventChangeData","patchNoteChangeData","patchPoll","postPoll","patchMyEventPoll","eventId","pollId","patchUserInfo","patchFormData","Spinner","video","React","useRef","title","random","Math","round","useState","text","setText","show","setShow","useEffect","timeout","setTimeout","clearTimeout","className","src","neobis","alt","autoPlay","loop","muted","ref","withDataContainer","Component","departments","value","label","selectDepartments","days","months","yearsMonth","props","monthListRus","module","exports","ConfirmExit","onClose","onClick","to","withNavbarContainer","type","EventInfoModal","willGo","setWillGo","willNotGo","setWillNotGo","role","setRole","missedDeadline","setMissedDeadline","correctPollId","setCorrectPollId","event","deadline","Date","startDate","start","today","submitPoll","finalAnswer","API","correctPoll","filter","poll","getTime","editPen","style","width","fontSize","getHours","getMinutes","getDay","getMonth","getDate","description","address","place","checked","onChange","moreInfoArrow","AdminEventCreateModal","setTitle","setDescription","image","setImage","setDepartments","date","setStartDate","startDateHours","setStartDateHours","startDateMinutes","setStartDateMinutes","endDate","setEndDate","endDateHours","setEndDateHours","endDateMinutes","setEndDateMinutes","setAddress","addressDisable","setAddressDisable","setPlace","finalUsers","setFinalUsers","usersForSend","setUsersForSend","users","preFinalUsers","map","user","email","name_surname","updateStartTime","startTime","setHours","getFullYear","updateEndTime","endTime","preventDefault","start_time","end_time","CheckForAll","find","item","departmentNumbers","usersForSendEmails","formData","FormData","append","String","required","placeholder","e","target","time","onDayChange","day","parseInt","people","isMulti","isClearable","isSearchable","options","classNamePrefix","placeImage","disabled","descriptionImage","cols","rows","fileImage","files","CloseModalButton","currentEvent","setCurrentEvent","editable","setEditable","setDate","serverEvents","setServerEvents","res","results","isEventInfoOpen","setIsEventInfoOpen","toggleEventInfoOpen","handleEventDropAndResize","eventDropInfo","oldEvent","Number","_def","publicId","end","my_event","startStr","endStr","dataToPatch","public","isAdminEventCreate","setIsAdminEventCreate","toggleAdminEventCreate","updateEvents","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","listPlugin","googleCalendarPlugin","bootstrapPlugin","height","headerToolbar","left","center","right","initialView","firstDay","googleCalendarApiKey","eventSources","googleCalendarId","borderColor","classNames","dayMaxEventRows","selectable","selectMirror","select","selectInfo","eventDrop","eventResize","eventClick","eventClickInfo","findCurrentEvent","slotDuration","locale","isModalOpen","setIsModalOpen","userInfo","setUserInfo","department","setDepartment","toggleModal","departmentNumber","department_id","profile_img","avatar","exact","activeStyle","backgroundColor","notification","calendar","rooms","admin","exit","Navbar","peoples","create_event","stat","events","AdminNavbar","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","children","lazy","Registration","RecoveryPassword","Notification","TodayTimetable","EventInfo","ChangePassword","AdminStat","PersonalOffice","EndEvents","EndEventInfo","CreateEventPage","EditEventsPage","RoomsList","RoomsEvent","App","fallback","path","component","Calendar","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.17c03554.chunk.js","sourcesContent":["import Axios from \"axios\";\n\nconst http = Axios.create({\n  // baseURL: \"https://cors-anywhere.herokuapp.com/http://46.101.110.53/api/\",\n  baseURL: \"http://46.101.110.53/api/\",\n  // baseURL: \"http://www.220-accentuation.co/api/\",\n});\n\nexport function getCookie(name: string) {\n  let matches = document.cookie.match(\n    new RegExp(\n      \"(?:^|; )\" +\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\n        \"=([^;]*)\"\n    )\n  );\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n}\nlet token = getCookie(\"XSRF-Token\");\n\nconst getData = (url: string) => {\n  return http.get(url, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Token \" + token,\n    },\n  });\n};\n\nconst postData = (url: string, data: any) => {\n  http\n    .post(url, data, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then(\n      (response) => {\n        for (let textResponse in response.data) {\n          alert(\n            \"Успешно:  \" + textResponse + \"  \" + response.data[textResponse]\n          );\n        }\n      },\n      (error) => {\n        for (let textError in error.response.data) {\n          alert(\"Ошибка: \" + textError + \"  \" + error.response.data[textError]);\n        }\n      }\n    );\n};\n\nconst postGetRoleData = (url: string, data: any) => {\n  return http\n    .post(url, data, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then(\n      (response) => {\n        console.log(\"%c \" + response, \"color: lightgreen\");\n        return response;\n      },\n      (error) => {\n        console.log(\"%c \" + error.response.statusText, \"color: red\");\n        return error;\n      }\n    );\n};\n\nconst patchData = (url: string, data: any) => {\n  http.patch(url, data, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Token \" + token,\n    },\n  });\n};\n\nconst postTokenData = (url: string, data: any) => {\n  http\n    .post(url, data, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \" + token,\n      },\n    })\n    .then(\n      (response) => {\n        console.log(\"%c \" + response, \"color: lightgreen\");\n        return response;\n      },\n      (error) => {\n        console.log(\"%c \" + error.response.statusText, \"color: red\");\n        return error;\n      }\n    );\n};\n\nconst postDataWithReturnJSON = (url: string, data: any) => {\n  return http.post(url, data, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Token \" + token,\n    },\n  });\n};\n\nconst patchDataWithReturnJSON = (url: string, data: any) => {\n  return http.patch(url, data, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Token \" + token,\n    },\n  });\n};\n\nconst postFormData = (url: string, data: any) => {\n  return http\n    .post(url, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Token \" + token,\n      },\n    })\n    .then(\n      (response) => {\n        alert(response);\n      },\n      (error) => {\n        alert(error);\n        console.log(error.response.data);\n      }\n    );\n};\nconst patchFormData = (url: string, data: any) => {\n  return http\n    .patch(url, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Token \" + token,\n      },\n    })\n    .then(\n      (response) => {\n        alert(response);\n      },\n      (error) => {\n        console.log(\"patchFormData -> error\", error);\n      }\n    );\n};\n\nasync function postAuthData(url: string, data: object) {\n  let answer = await http.post(url, data).then(\n    (response) => {\n      document.cookie = `XSRF-Token = ${response.data.key}`;\n      return response;\n    },\n    (error) => {\n      for (let textError in error.response.data) {\n        alert(\"Ошибка: \" + textError + \"  \" + error.response.data[textError]);\n      }\n      return error;\n    }\n  );\n  return answer;\n}\n\nexport default {\n  getEvents: (\n    limit: number = 10,\n    offset: number = 0,\n    search: string = \"\",\n    period: string = \"\"\n  ) =>\n    getData(\n      `events/?limit=${limit}&offset=${offset}&search=${search}&period=${period}`\n    ),\n  getEventInfo: (id: string | number) => getData(`events/${id}/`),\n  getRoomEvents: (id: number | string, limit: number, offset: number) =>\n    getData(`place/${id}/?limit=${limit}&offset=${offset}`),\n  getTodaySchedule: () => getData(\"today_events/\"),\n  getUsers: () => getData(\"users/\"),\n  getGeneralStat: () => getData(\"general_stats/\"),\n  getStatForAllDepartments: () => getData(\"stats_for_all_departments/\"),\n  getEndEvents: () => getData(\"my_events/\"),\n  getUserInfo: () => getData(\"users/rest-auth/user/\"),\n  getMyPoll: () => getData(\"my_poll/\"),\n  getEventPoll: (id: number | string, limit: number, offset: number) =>\n    getData(`my_events/${id}/?limit=${limit}&offset=${offset}`),\n  getNotes: () => getData(\"notes/\"),\n  getPersonalStats: (period: string) =>\n    getData(`self-statistic/?period=${period}`),\n\n  getRole: (token: string) => postGetRoleData(\"users/is_user_staff/\", token),\n  postStatByDepartment: (data: any) =>\n    postDataWithReturnJSON(\"stats_by_department/\", data),\n  postRegistrationData: (data: object) =>\n    postData(\"users/rest-auth/registration/\", data),\n  postAuthData: (data: object) => postAuthData(\"users/rest-auth/login/\", data),\n  postEventCreateData: (data: object) => postFormData(\"events/\", data),\n  postNoteCreateData: (data: object) => postTokenData(\"notes/\", data),\n  patchEventChangeData: (data: object, id: number | string) =>\n    patchData(`events/${id}/`, data),\n  patchNoteChangeData: (data: object, id: number | string) =>\n    patchData(`notes/${id}/`, data),\n  patchPoll: (data: object, id: number | string) =>\n    patchDataWithReturnJSON(`poll/${id}/`, data),\n  postPoll: (data: object) => postDataWithReturnJSON(`poll/`, data),\n  patchMyEventPoll: (eventId: any, pollId: any, data: object) =>\n    patchDataWithReturnJSON(`my_events/${eventId}/poll/${pollId}/`, data),\n  patchUserInfo: (data: object) => patchFormData(`users/rest-auth/user/`, data),\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./spinner.css\";\nimport neobis from \"./Group 81.svg\";\n\nconst Spinner = () => {\n  const video = React.useRef(null);\n  // play video if it's paused\n  //   if (video.current && video.current.paused) video.current.play();\n\n  const data = [\n    { id: 0, title: \"Выпрями спину\" },\n    { id: 1, title: \"in code we trust\" },\n    { id: 2, title: \"you will never code alone\" },\n    { id: 3, title: \"Продуктивного дня! :)\" },\n    { id: 4, title: \"This website offers you cookies in the kitchen :))\" },\n  ];\n  const random = Math.round(Math.random() * 4);\n  let [text, setText] = useState<string>(\"\");\n\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    setText(data[random].title);\n    let timeout = setTimeout(() => setShow(false), 600);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return (\n    <>\n      {show && (\n        <div className=\"spinner\">\n          <img src={neobis} className=\"spinner__image\" alt=\"neobis logo\" />\n          <p className=\"spinner__text\">{text}</p>\n          <video\n            autoPlay={true}\n            loop={true}\n            muted={true}\n            className=\"spinner__video\"\n            ref={video}\n            src=\"/video/spinner.mp4\"\n          ></video>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nconst withDataContainer = (Component: any) => {\n  const departments = [\n    { value: \"8\", label: \"Android\" },\n    { value: \"6\", label: \"C#\" },\n    { value: \"7\", label: \"Design\" },\n    { value: \"5\", label: \"Frontend\" },\n    { value: \"9\", label: \"IOS\" },\n    { value: \"4\", label: \"Java/Kotlin\" },\n    { value: \"2\", label: \"NodeJS\" },\n    { value: \"3\", label: \"PM\" },\n    { value: \"1\", label: \"Python\" },\n  ];\n  const selectDepartments = [{ value: \"all\", label: \"All\" }, ...departments];\n  let days = [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\",\n  ];\n  let months = [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Cентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\",\n  ];\n  const yearsMonth = [\n    { value: \"0\", label: \"Январь\" },\n    { value: \"1\", label: \"Февраль\" },\n    { value: \"2\", label: \"Март\" },\n    { value: \"3\", label: \"Апрель\" },\n    { value: \"4\", label: \"Май\" },\n    { value: \"5\", label: \"Июнь\" },\n    { value: \"6\", label: \"Июль\" },\n    { value: \"7\", label: \"Август\" },\n    { value: \"8\", label: \"Сентябрь\" },\n    { value: \"9\", label: \"Октябрь\" },\n    { value: \"10\", label: \"Ноябрь\" },\n    { value: \"11\", label: \"Декабрь\" },\n  ];\n  const withData = (props: any) => {\n    return (\n      <Component\n        days={days}\n        monthListRus={months}\n        departments={departments}\n        selectDepartments={selectDepartments}\n        yearsMonth={yearsMonth}\n      />\n    );\n  };\n  return withData;\n};\n\nexport default withDataContainer;\n","module.exports = __webpack_public_path__ + \"static/media/user.9a3a77b0.svg\";","import React from \"react\";\nimport \"./confirm.scss\";\nimport { Link } from \"react-router-dom\";\n\ntype ConfirmProps = {\n  onClose: () => void;\n};\n\nconst ConfirmExit = ({ onClose }: ConfirmProps) => {\n  const handleClose = () => {\n    document.cookie = \"XSRF-Token = ; role =\";\n  };\n  return (\n    <div className=\"confirm-exit\">\n      <p className=\"confirm-exit__text\">\n        Вы уверены, что хотите выйти с аккаунта?\n      </p>\n      <div className=\"confirm-exit__buttons-wrapper\">\n        <span className=\"confirm-exit__button_red_left\" onClick={onClose}>\n          Отмена\n        </span>\n        <Link to=\"/auth\" className=\"link\">\n          <span\n            onClick={handleClose}\n            className=\"confirm-exit__button_black_right\"\n          >\n            Выйти\n          </span>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmExit;\n","module.exports = __webpack_public_path__ + \"static/media/calendar.256c0a90.svg\";","module.exports = __webpack_public_path__ + \"static/media/exit.22f46921.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-peoples.aed03edc.svg\";","import React from \"react\";\nimport Spinner from \"../components/shared/spinner/spinner\";\nimport Navbar from \"../components/shared/navbar\";\nimport AdminNavbar from \"../components/pages/admin/admin-navbar\";\n\nconst withNavbarContainer = (Component: any, type?: string) => {\n  const withNavbar = (props: any) => {\n    return (\n      <>\n        {type === \"admin\" ? (\n          <div className=\"wrapper\">\n            <AdminNavbar />\n            <div className=\"content__wrapper\">\n              <Spinner />\n              <Component />\n            </div>\n          </div>\n        ) : (\n          <div className=\"wrapper\">\n            <Navbar />\n            <div className=\"content__wrapper\">\n              <Spinner />\n              <Component />\n            </div>\n          </div>\n        )}\n      </>\n    );\n  };\n  return withNavbar;\n};\n\nexport default withNavbarContainer;\n","module.exports = __webpack_public_path__ + \"static/media/address.e3d61208.svg\";","import React, { useState, useEffect } from \"react\";\nimport address from \"../../../../images/pages/address.svg\";\nimport moreInfoArrow from \"../../../../images/shared/modal-arrow-more-info.svg\";\nimport editPen from \"../../../../images/shared/modal-edit.svg\";\nimport { CloseModalButton } from \"../calendar\";\nimport API, { getCookie } from \"../../../../API\";\nimport { Link } from \"react-router-dom\";\n\nconst EventInfoModal = (props: any) => {\n  const [willGo, setWillGo] = useState<boolean | undefined>(false);\n  const [willNotGo, setWillNotGo] = useState<boolean | undefined>(false);\n  const [role, setRole] = useState(\"\");\n\n  const [missedDeadline, setMissedDeadline] = useState(false);\n  const [correctPollId, setCorrectPollId] = useState<any>(0);\n  const { event } = props;\n  let deadline = new Date(event.deadline);\n  let startDate = new Date(event.start);\n  let today = new Date();\n\n  function submitPoll(finalAnswer: boolean) {\n    const data = {\n      event: event.id,\n      answer: finalAnswer,\n    };\n    if (correctPollId) {\n      API.patchPoll(data, correctPollId);\n    } else {\n      API.postPoll(data).then((data) => {\n        setCorrectPollId(data.data.id);\n      });\n    }\n  }\n  const handleWillGo = () => {\n    setWillGo(true);\n    setWillNotGo(false);\n    submitPoll(true);\n  };\n  const handleWillNotGo = () => {\n    setWillGo(false);\n    setWillNotGo(true);\n    submitPoll(false);\n  };\n\n  let months = [\n    \"Январь\",\n    \"Февраль\",\n    \"Март\",\n    \"Апрель\",\n    \"Май\",\n    \"Июнь\",\n    \"Июль\",\n    \"Август\",\n    \"Cентябрь\",\n    \"Октябрь\",\n    \"Ноябрь\",\n    \"Декабрь\",\n  ];\n  let days = [\n    \"Воскресенье\",\n    \"Понедельник\",\n    \"Вторник\",\n    \"Среда\",\n    \"Четверг\",\n    \"Пятница\",\n    \"Суббота\",\n  ];\n\n  useEffect(() => {\n    let role: any = getCookie(\"role\");\n    setRole(role);\n\n    // get data to poll if it exist\n    API.getMyPoll().then((data) => {\n      if (data.data) {\n        let correctPoll: any = [];\n        correctPoll = data.data.filter((poll: any) => {\n          return poll.event === event.title;\n        });\n        console.log(\"EventInfoModal -> correctPoll\", correctPoll);\n        // if exist fill correct data in inputs\n        if (correctPoll[0]) {\n          correctPoll[0].answer ? setWillGo(true) : setWillNotGo(true);\n          setCorrectPollId(correctPoll[0].id);\n        }\n      }\n    });\n\n    // disable input if deadline crossed\n    if (+today.getTime() > +deadline.getTime()) {\n      setMissedDeadline(true);\n    } else {\n      setMissedDeadline(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal__wrapper \">\n      <div className=\"event-info-modal\">\n        <CloseModalButton onClose={props.onClose} />\n        {role === \"admin\" ? (\n          <Link to={`/admin/create_event/${event.id}`} className=\"link\">\n            <img\n              className=\"event-info-modal__edit-pen\"\n              src={editPen}\n              alt=\"edit\"\n            />\n          </Link>\n        ) : null}\n        <div className=\"event-info__content\" style={{ width: \"90%\" }}>\n          <p className=\"event-info__content-title\" style={{ fontSize: \"24px\" }}>\n            {event.title}\n          </p>\n          <p className=\"event-info__content-date\" style={{ fontSize: \"14px\" }}>\n            {(startDate.getHours() < 10 ? \"0\" : \"\") + startDate.getHours()}.\n            {(startDate.getMinutes() < 10 ? \"0\" : \"\") + startDate.getMinutes()}{\" \"}\n            {days[startDate.getDay()]}, {months[startDate.getMonth()]}{\" \"}\n            {startDate.getDate()}\n          </p>\n          <p\n            className=\"event-info__content-description\"\n            style={{ fontSize: \"18px\" }}\n          >\n            {event.description}\n          </p>\n          <p\n            className=\"event-info__content-address\"\n            style={{ fontSize: \"14px\" }}\n          >\n            <img\n              className=\"event-info__content-address-image\"\n              src={address}\n              alt=\"address\"\n            />\n            Адрес: {event.place.name} {event.address}\n          </p>\n          <p\n            className=\"event-info__content-text_m_t\"\n            style={{ fontSize: \"14px\" }}\n          >\n            Посетители это событие?\n          </p>\n          <p\n            className=\"event-info__content-text_deadline\"\n            style={{ fontSize: \"10px\" }}\n          >\n            deadline: {deadline.getDate()} {months[deadline.getMonth()]}{\" \"}\n            {deadline.getHours()}:\n            {(deadline.getMinutes() < 10 ? \"0\" : \"\") + deadline.getMinutes()}\n          </p>\n\n          {missedDeadline ? (\n            <p className=\"event-info__content-text\">Вы пропустили deadline</p>\n          ) : (\n            <div className=\"event-info-modal__form-wrapper\">\n              <form className=\"event-info-modal__form\">\n                <div className=\"d-flex\">\n                  <label className=\"event-info-modal__label\">\n                    Да\n                    <input\n                      className=\"event-info-modal__input\"\n                      type=\"checkbox\"\n                      checked={willGo}\n                      onChange={handleWillGo}\n                    />\n                    <span className=\"event-info-modal__checkmark\"></span>\n                  </label>\n                  <label className=\"event-info-modal__label\">\n                    Нет\n                    <input\n                      className=\"event-info-modal__input\"\n                      type=\"checkbox\"\n                      checked={willNotGo}\n                      onChange={handleWillNotGo}\n                    />\n                    <span className=\"event-info-modal__checkmark\"></span>\n                  </label>\n                </div>\n              </form>\n              <div className=\"event-info-modal__buttons\">\n                <Link to={`/today/${event.id}`}>\n                  <button className=\"event-info-modal__more-info button\">\n                    <div>Подробнее</div>\n                    <img\n                      src={moreInfoArrow}\n                      alt=\"arrow  more info\"\n                      className=\"event-info-modal__more-info-image\"\n                    />\n                  </button>\n                </Link>\n              </div>\n              {/* {role === \"user\" ? (\n              <div className=\"event-info-modal__buttons\">\n                <button className=\"event-info-modal__more-info button\">\n                  <div>Подробнее</div>\n                  <img\n                    src={moreInfoArrow}\n                    alt=\"arrow  more info\"\n                    className=\"event-info-modal__more-info-image\"\n                  />\n                </button>\n              </div>\n            ) : null} */}\n            </div>\n          )}\n\n          {/* {role === \"admin\" ? (\n            <div className=\"event-info-modal__admin-buttons\">\n              <div className=\"event-info-modal__admin-buttons-wrapper\">\n                <button className=\"event-info-modal__admin-buttons-save button\">\n                  Сохранить\n                </button>\n                <button className=\"event-info-modal__admin-buttons-cancel button\">\n                  Отменить\n                </button>\n              </div>\n\n              <div>\n                <button className=\"event-info-modal__more-info button\">\n                  <div>Подробнее</div>\n                  <img\n                    src={moreInfoArrow}\n                    alt=\"arrow  more info\"\n                    className=\"event-info-modal__more-info-image\"\n                  />\n                </button>\n              </div>\n            </div>\n          ) : null} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventInfoModal;\n","import React, { useState, useEffect } from \"react\";\nimport { CloseModalButton } from \"../calendar\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport Select from \"react-select\";\nimport API from \"../../../../API\";\n\n// icons\nimport time from \"../../../../images/shared/modal-clock.svg\";\nimport people from \"../../../../images/shared/modal-peoples.svg\";\nimport placeImage from \"../../../../images/shared/modal-address.svg\";\nimport descriptionImage from \"../../../../images/shared/modal-description.svg\";\nimport fileImage from \"../../../../images/shared/modal-file.svg\";\n\nconst AdminEventCreateModal = (props: any) => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [image, setImage] = useState<any>([]);\n  const [departments, setDepartments] = useState([]);\n\n  const [startDate, setStartDate] = useState<Date>(props.date);\n  const [startDateHours, setStartDateHours] = useState<number>(0);\n  const [startDateMinutes, setStartDateMinutes] = useState<number>(0);\n\n  const [endDate, setEndDate] = useState<Date>(props.date);\n  const [endDateHours, setEndDateHours] = useState<number>(0);\n  const [endDateMinutes, setEndDateMinutes] = useState<number>(0);\n\n  const [address, setAddress] = useState<string>(\"\");\n  const [addressDisable, setAddressDisable] = useState<boolean>(true);\n  const [place, setPlace] = useState<any>(null);\n\n  const [finalUsers, setFinalUsers] = useState([]);\n  const [usersForSend, setUsersForSend] = useState([]);\n\n  const places = [\n    { value: \"1\", label: \"Маленькая комната\" },\n    { value: \"2\", label: \"Большая комната\" },\n    { value: \"3\", label: \"Весь Офис\" },\n    { value: \"4\", label: \"Другое\" },\n  ];\n  const selectDepartments = [\n    { value: \"all\", label: \"All\" },\n    { value: \"8\", label: \"Android\" },\n    { value: \"6\", label: \"C#\" },\n    { value: \"7\", label: \"Design\" },\n    { value: \"5\", label: \"Frontend\" },\n    { value: \"9\", label: \"IOS\" },\n    { value: \"4\", label: \"Java/Kotlin\" },\n    { value: \"2\", label: \"NodeJS\" },\n    { value: \"3\", label: \"PM\" },\n    { value: \"1\", label: \"Python\" },\n  ];\n\n  useEffect(() => {\n    API.getUsers().then((users) => {\n      let preFinalUsers: any = users.data.map((user: any) => {\n        return { value: user.email, label: user.name_surname };\n      });\n      setFinalUsers(preFinalUsers);\n    });\n  }, []);\n\n  const handleChangeAddress = (e: any) => {\n    setPlace(+e.value);\n    setAddressDisable(true);\n    setAddress(\"\");\n    if (+e.value === 4) {\n      setAddressDisable(false);\n    }\n  };\n\n  const updateStartTime = () => {\n    let startTime = new Date(startDate);\n    startTime.setHours(startDateHours, startDateMinutes, 0);\n    let finalTime = `${startTime.getFullYear()}-${\n      startTime.getMonth() + 1\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}`;\n    return finalTime;\n  };\n  const updateEndTime = () => {\n    let endTime = new Date(endDate);\n    endTime.setHours(endDateHours, endDateMinutes, 0);\n    let finalTime = `${endTime.getFullYear()}-${\n      endTime.getMonth() + 1\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}`;\n    return finalTime;\n  };\n\n  async function handleSubmit(event: any) {\n    event.preventDefault();\n\n    let start_time = await updateStartTime();\n    let end_time = await updateEndTime();\n\n    // working with forming attendees\n    let CheckForAll = departments.find((item: any) => item.value === \"all\");\n    let departmentNumbers: any = [];\n    if (CheckForAll) {\n      // * if selected all departments we return array with all\n      departmentNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    } else {\n      // * else return selected deparments\n      departmentNumbers = departments.map((item: any) => {\n        return +item.value;\n      });\n    }\n    let usersForSendEmails: any = usersForSend.map((item: any) => {\n      return item.value;\n    });\n    //\n\n    let formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"description\", description);\n    if (image[0]) {\n      formData.append(\"image\", image[0]);\n    }\n    formData.append(\"start\", String(start_time));\n    formData.append(\"deadline\", String(start_time));\n    formData.append(\"end\", String(end_time));\n    formData.append(\"place\", place);\n    formData.append(\"address\", address);\n    formData.append(\"departments\", departmentNumbers);\n    formData.append(\"individual_users\", usersForSendEmails);\n    formData.append(\"my_event\", \"false\");\n\n    API.postEventCreateData(formData);\n  }\n\n  return (\n    <div className=\"modal__wrapper\">\n      <div className=\"admin-create-event-modal\">\n        <CloseModalButton onClose={props.onClose} />\n\n        <div className=\"admin-create-event-modal-wrapper\">\n          <div className=\"admin-create-event-modal-row\">\n            <input\n              className=\"admin-create-event-modal-input-title\"\n              type=\"text\"\n              name=\"name\"\n              required\n              value={title}\n              placeholder=\"Введите название\"\n              onChange={(e) => {\n                setTitle(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={time}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"time\"\n            />\n            <div className=\"admin-create-event-modal__day-picker\">\n              <DayPickerInput\n                value={props.date}\n                onDayChange={(day) => {\n                  setStartDate(day);\n                  setEndDate(day);\n                }}\n              />\n            </div>\n            <div className=\"admin-create-event-modal-time\">\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setStartDateHours(parseInt(e.target.value));\n                }}\n              />\n              {/* // colon- двоеточие */}\n              <div className=\"admin-create-event-modal__time-picker-colon\">\n                .\n              </div>\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setStartDateMinutes(parseInt(e.target.value));\n                }}\n              />\n              &nbsp;-&nbsp;\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setEndDateHours(parseInt(e.target.value));\n                }}\n              />\n              {/* // colon- двоеточие */}\n              <div className=\"admin-create-event-modal__time-picker-colon\">\n                .\n              </div>\n              <input\n                type=\"text\"\n                name=\"\"\n                placeholder=\"00\"\n                className=\"admin-create-event-modal__time-picker\"\n                onChange={(e) => {\n                  setEndDateMinutes(parseInt(e.target.value));\n                }}\n              />\n            </div>\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={people}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"people\"\n            />\n            <Select\n              isMulti\n              isClearable={true}\n              isSearchable={true}\n              options={selectDepartments}\n              className=\"admin-create-event-modal-select\"\n              classNamePrefix=\"select\"\n              placeholder=\"Добавить департамент\"\n              onChange={(e: any) => {\n                setDepartments(e);\n              }}\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={people}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"people\"\n            />\n            <Select\n              isMulti\n              isClearable={true}\n              isSearchable={true}\n              options={finalUsers}\n              className=\"admin-create-event-modal-select\"\n              classNamePrefix=\"select\"\n              placeholder=\"Добавить гостей\"\n              onChange={(e: any) => {\n                setUsersForSend(e);\n              }}\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={placeImage}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"people\"\n            />\n            <Select\n              options={places}\n              className=\"admin-create-event-modal-select_small\"\n              classNamePrefix=\"select\"\n              placeholder=\"Добавить локацию\"\n              onChange={handleChangeAddress}\n            />\n            <input\n              type=\"text\"\n              className=\"admin-create-event-modal-select-place\"\n              placeholder=\"Адрес\"\n              disabled={addressDisable ? true : false}\n              required={addressDisable ? false : true}\n              value={address}\n              onChange={(e) => {\n                setAddress(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={descriptionImage}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"people\"\n            />\n            <textarea\n              cols={30}\n              rows={1}\n              name=\"description\"\n              required\n              value={description}\n              onChange={(e) => {\n                setDescription(e.target.value);\n              }}\n              placeholder=\"Добавить описание\"\n              className=\"admin-create-event-modal-input\"\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <img\n              src={fileImage}\n              className=\"admin-create-event-modal-icon\"\n              alt=\"people\"\n            />\n            <input\n              className=\"admin-create-event-modal-input\"\n              type=\"file\"\n              name=\"file\"\n              id=\"file\"\n              onChange={(e) => {\n                setImage(e.target.files);\n              }}\n            />\n          </div>\n\n          <div className=\"admin-create-event-modal-row\">\n            <div className=\"event-info-modal__admin-buttons-wrapper\">\n              <button\n                onClick={handleSubmit}\n                className=\"event-info-modal__admin-buttons-save button\"\n              >\n                Сохранить\n              </button>\n              <button\n                onClick={props.onClose}\n                className=\"event-info-modal__admin-buttons-cancel button\"\n              >\n                Отменить\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminEventCreateModal;\n","import React, { useState, useEffect } from \"react\";\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\n\n// fullcalendar\nimport FullCalendar from \"@fullcalendar/react\";\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\n\n// imports for view style(month, week, day, list)\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport listPlugin from \"@fullcalendar/list\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\n// modals\nimport EventInfoModal from \"./modals/event-info\";\nimport AdminChooseModal from \"./modals/admin-choose\";\nimport PersonalEventCreateModal from \"./modals/create-personal-event\";\nimport AdminEventCreateModal from \"./modals/admin-event\";\nimport API, { getCookie } from \"../../../API\";\n\nexport const CloseModalButton = (props: any) => {\n  return (\n    <div className=\"event-info-modal__modal\">\n      <button\n        onClick={props.onClose}\n        className=\"event-info-modal__modal-btn button\"\n      >\n        &times;\n      </button>\n    </div>\n  );\n};\n\nconst Calendar = () => {\n  const [currentEvent, setCurrentEvent] = useState<any>({});\n  const [role, setRole] = useState<string | undefined>(\"\");\n  const [editable, setEditable] = useState(false);\n  const [date, setDate] = useState(new Date());\n\n  // ! date не обязателен если есть start\n  const [serverEvents, setServerEvents] = useState([]);\n\n  useEffect(() => {\n    API.getEvents(1000, 0, \"\", \"\").then((res) => {\n      setServerEvents(res.data.results);\n    });\n    setRole(getCookie(\"role\"));\n    if (getCookie(\"role\") === \"admin\") {\n      setEditable(true);\n    } else {\n      setEditable(false);\n    }\n  }, []);\n\n  // google calendar api integration\n  const events = {\n    googleCalendarId: \"neobistime.kg@gmail.com\",\n    borderColor: \"transparent\",\n    classNames: [\"google-calendar\"],\n  };\n\n  let [isEventInfoOpen, setIsEventInfoOpen] = useState<boolean>(false);\n  const toggleEventInfoOpen = () => {\n    setIsEventInfoOpen(!isEventInfoOpen);\n  };\n  const handleEventClick = (eventClickInfo: any) => {\n    let eventId = Number(eventClickInfo.event._def.publicId);\n    let findCurrentEvent = serverEvents.filter(\n      (event: any) => event.id === eventId\n    );\n    setCurrentEvent(findCurrentEvent[0]);\n    toggleEventInfoOpen();\n  };\n\n  const handleEventDropAndResize = (eventDropInfo: any) => {\n    let oldEvent = serverEvents.find(\n      (item: any) => item.id === Number(eventDropInfo.oldEvent._def.publicId)\n    ) || {\n      id: \"\",\n      start: \"\",\n      end: \"\",\n      deadline: \"\",\n      my_event: false,\n    };\n    oldEvent.start = eventDropInfo.event.startStr;\n    oldEvent.end = eventDropInfo.event.endStr;\n    oldEvent.deadline = eventDropInfo.event.startStr;\n    // TODO if my_event === false we should send attendees\n    const dataToPatch = {\n      start: oldEvent.start,\n      end: oldEvent.end,\n      deadline: oldEvent.start,\n      my_event: String(oldEvent.my_event),\n      public: true,\n    };\n    API.patchEventChangeData(dataToPatch, oldEvent.id);\n    // API.getEventInfo(oldEvent.id).then((data) => {\n    //   let attendees = data.data.attendees;\n    //   const dataToPatch = {\n    //     start: oldEvent.start,\n    //     end: oldEvent.end,\n    //     deadline: oldEvent.start,\n    //     my_event: oldEvent.my_event,\n    //     departments: attendees.departments,\n    //     individual_users: attendees.individual_users,\n    //   };\n    //   API.patchEventChangeData(dataToPatch, oldEvent.id);\n    // });\n  };\n\n  // create event\n  // let [isEventCreateChooseOpen, setIsEventCreateChooseOpen] = useState<boolean>(\n  //   false\n  // );\n  // const toggleEventCreateChoose = () => {\n  //   setIsEventCreateChooseOpen(!isEventCreateChooseOpen);\n  // };\n\n  // let [isPersonalEventCreate, setIsPersonalEventCreate] = useState<boolean>(\n  //   false\n  // );\n  // const togglePersonalEventCreate = () => {\n  //   setIsPersonalEventCreate(!isPersonalEventCreate);\n  //   setIsEventCreateChooseOpen(false);\n  // };\n\n  let [isAdminEventCreate, setIsAdminEventCreate] = useState<boolean>(false);\n  const toggleAdminEventCreate = () => {\n    setIsAdminEventCreate(!isAdminEventCreate);\n    updateEvents();\n    // setIsEventCreateChooseOpen(false);\n  };\n  const handleDateSelect = (selectInfo: any) => {\n    setDate(selectInfo.start);\n    toggleAdminEventCreate();\n    // toggleEventCreateChoose();\n  };\n\n  const updateEvents = () => {\n    API.getEvents(1000, 0, \"\", \"\").then((res) => {\n      setServerEvents(res.data.results);\n    });\n  };\n\n  return (\n    <>\n      <FullCalendar\n        plugins={[\n          dayGridPlugin,\n          interactionPlugin,\n          timeGridPlugin,\n          listPlugin,\n          googleCalendarPlugin,\n          bootstrapPlugin,\n        ]}\n        height=\"610px\"\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\n        }}\n        initialView=\"dayGridMonth\"\n        // dateClick={handleDateClick} //TODO: edit\n        editable={editable}\n        firstDay={1}\n        googleCalendarApiKey=\"AIzaSyCqbA_GExr7SrXh3ZVwCvojL_AGSnXN3X8\"\n        eventSources={[events, serverEvents]}\n        dayMaxEventRows={true}\n        selectable={true}\n        selectMirror={true}\n        select={handleDateSelect}\n        eventDrop={handleEventDropAndResize}\n        eventResize={handleEventDropAndResize}\n        eventClick={handleEventClick}\n        slotDuration=\"00:15:00\" // интервал при изменении на календаре\n        locale=\"ru\"\n      />\n\n      {/* modals start */}\n      {isEventInfoOpen && (\n        <EventInfoModal onClose={toggleEventInfoOpen} event={currentEvent} />\n      )}\n      {/* {isEventCreateChooseOpen && (\n        <AdminChooseModal\n          onClose={toggleEventCreateChoose}\n          openPersonalEventCreateWindow={togglePersonalEventCreate}\n          openAdminEventCreateWindow={toggleAdminEventCreate}\n        />\n      )}\n      {isPersonalEventCreate && (\n        <PersonalEventCreateModal onClose={togglePersonalEventCreate} />\n      )} */}\n      {isAdminEventCreate && (\n        <AdminEventCreateModal onClose={toggleAdminEventCreate} date={date} />\n      )}\n      {/* modals end */}\n    </>\n  );\n};\n\nexport default withNavbarContainer(Calendar);\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport ConfirmExit from \"./confirm-exit\";\n\n// *icons\nimport avatar from \"../../../images/shared/user.svg\";\nimport calendar from \"../../../images/shared/calendar.svg\";\nimport notification from \"../../../images/shared/Notification.svg\";\nimport today from \"../../../images/shared/today.svg\";\nimport admin from \"../../../images/shared/admin.svg\";\nimport exit from \"../../../images/shared/exit.svg\";\nimport rooms from \"../../../images/shared/rooms.svg\";\nimport API, { getCookie } from \"../../../API\";\nimport withDataContainer from \"../../../HOC/withData\";\n\nconst Navbar = (props: any) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [userInfo, setUserInfo] = useState<any>({});\n  const [role, setRole] = useState<string | undefined>(\"\");\n  const [department, setDepartment] = useState<any>({});\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  useEffect(() => {\n    setRole(getCookie(\"role\"));\n    API.getUserInfo().then((data) => {\n      setUserInfo(data.data);\n      let departmentNumber = props.departments.filter(\n        (department: any) => +department.value === +data.data.department_id\n      );\n      setDepartment(departmentNumber[0]);\n    });\n  }, []);\n\n  return (\n    <div className=\"navbar\">\n      <Link to=\"/personal_office\" className=\"link\">\n        <div className=\"navbar__person-info\">\n          <div className=\"navbar__person-info-image-container\">\n            <img\n              className=\"navbar__person-info-image\"\n              src={userInfo.profile_img || avatar}\n              alt=\"default avatar\"\n            />\n          </div>\n\n          <div className=\"navbar__person-info-text_wrapper\">\n            <p className=\"navbar__person-info-name\">{userInfo.name_surname}</p>\n            <p className=\"navbar__person-info-text\">\n              {department.label || \"Neobis\"} department{\" \"}\n            </p>\n            <p className=\"navbar__person-info-text\">{userInfo.email}</p>\n          </div>\n        </div>\n      </Link>\n\n      <div className=\"navbar__content\">\n        <ul className=\"navbar__list\">\n          <NavLink\n            exact\n            to=\"/notifications\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={notification}\n              className=\"navbar__list-image navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Уведомления</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={calendar}\n              className=\"navbar__list-image navbar__list-image_events navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Календарь</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/today\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={today}\n              className=\"navbar__list-image navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Расписание дня</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/rooms\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={rooms}\n              className=\"navbar__list-image navbar__list-image_rooms navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Комнаты</li>\n          </NavLink>\n\n          {role === \"admin\" ? (\n            <NavLink\n              exact\n              to=\"/admin\"\n              activeStyle={{ backgroundColor: \"#1DA48B\" }}\n              className=\"navbar__list-link\"\n            >\n              <img\n                src={admin}\n                className=\"navbar__list-image navbar__list-image_filter\"\n                alt=\"icon\"\n              />\n              <li className=\"navbar__list-item\">Админ панель</li>\n            </NavLink>\n          ) : null}\n\n          <div className=\"navbar__list-link\" onClick={toggleModal}>\n            <img src={exit} className=\"navbar__list-image\" alt=\"icon\" />\n            <button className=\"navbar__button navbar__list-item\">Выйти</button>\n          </div>\n        </ul>\n        {isModalOpen && <ConfirmExit onClose={toggleModal} />}\n      </div>\n    </div>\n  );\n};\n\nexport default withDataContainer(Navbar);\n","import Navbar from \"./navbar.tsx\";\n\nexport default Navbar;\n","module.exports = __webpack_public_path__ + \"static/media/all_events.4121eeec.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-clock.54c4ba6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-description.3f90eec2.svg\";","import React, { useState, useEffect } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport ConfirmExit from \"../../../shared/navbar/confirm-exit\";\nimport API from \"../../../../API\";\n\n// *icons\nimport avatar from \"../../../../images/shared/user.svg\";\nimport exit from \"../../../../images/shared/exit.svg\";\nimport events from \"../../../../images/shared/all_events.svg\";\nimport peoples from \"../../../../images/shared/admin_members.svg\";\nimport create_event from \"../../../../images/shared/edit.svg\";\nimport stat from \"../../../../images/shared/adminn_stat.svg\";\nimport calendar from \"../../../../images/shared/calendar.svg\";\nimport withDataContainer from \"../../../../HOC/withData\";\n\nconst AdminNavbar = (props: any) => {\n  let [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [userInfo, setUserInfo] = useState<any>({});\n  const [department, setDepartment] = useState<any>({});\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  useEffect(() => {\n    API.getUserInfo().then((data) => {\n      setUserInfo(data.data);\n      let departmentNumber = props.departments.filter(\n        (department: any) => +department.value === +data.data.department_id\n      );\n      setDepartment(departmentNumber[0]);\n    });\n  }, []);\n\n  return (\n    <div className=\"navbar\">\n      <Link to=\"/personal_office\" className=\"link\">\n        <div className=\"navbar__person-info\">\n          <div className=\"navbar__person-info-image-container\">\n            <img\n              className=\"navbar__person-info-image\"\n              src={userInfo.profile_img || avatar}\n              alt=\"default avatar\"\n            />\n          </div>\n          <div className=\"navbar__person-info-text_wrapper\">\n            <p className=\"navbar__person-info-name\">{userInfo.name_surname}</p>\n            <p className=\"navbar__person-info-text\">\n              {department.label || \"Neobis\"} department{\" \"}\n            </p>\n            <p className=\"navbar__person-info-text\">{userInfo.email}</p>\n          </div>\n        </div>\n      </Link>\n      <div className=\"navbar__content\">\n        <ul className=\"navbar__list\">\n          <NavLink\n            exact\n            to=\"/\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={calendar}\n              className=\"navbar__list-image navbar__list-image_events navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">На главную</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/admin/end_events\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={peoples}\n              className=\"navbar__list-image navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Мероприятия</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/admin/create_event\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={create_event}\n              className=\"navbar__list-image navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Бронирование</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/admin\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={stat}\n              className=\"navbar__list-image navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Статистика</li>\n          </NavLink>\n          <NavLink\n            exact\n            to=\"/admin/all_events\"\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\n            className=\"navbar__list-link\"\n          >\n            <img\n              src={events}\n              className=\"navbar__list-image navbar__list-image_events navbar__list-image_filter\"\n              alt=\"icon\"\n            />\n            <li className=\"navbar__list-item\">Все события</li>\n          </NavLink>\n          <div className=\"navbar__list-link\" onClick={toggleModal}>\n            <img src={exit} className=\"navbar__list-image\" alt=\"icon\" />\n            <button className=\"navbar__button navbar__list-item\">Выйти</button>\n          </div>\n        </ul>\n        {isModalOpen && <ConfirmExit onClose={toggleModal} />}\n      </div>\n    </div>\n  );\n};\n\nexport default withDataContainer(AdminNavbar);\n","import AdminNavbar from \"./admin-navbar.tsx\";\n\nexport default AdminNavbar;\n","module.exports = __webpack_public_path__ + \"static/media/Group 81.d740202d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Notification.7a7bf248.svg\";","module.exports = __webpack_public_path__ + \"static/media/today.c5ff23fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin.a6e6e580.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooms.ac3ed39c.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin_members.377b5698.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.e1112c40.svg\";","module.exports = __webpack_public_path__ + \"static/media/adminn_stat.4749ff85.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-arrow-more-info.3f37dd36.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-edit.9ff6b61a.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-address.f2fd0a00.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-file.83e2cf3f.svg\";","import ErrorIndicator from \"./error-indicator.jsx\";\n\nexport default ErrorIndicator;\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst ErrorIndicator = () => {\n  return (\n    <div>\n      <p>Oops!</p>\n      <p>Something went wrong!</p>\n      <Link to='/'>\n        Go Back\n      </Link>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","import ErrorBoundry from \"./error-boundry.tsx\";\n\nexport default ErrorBoundry;\n","import React from \"react\";\nimport ErrorIndicator from \"../error-indicator\";\n\nexport default class ErrorBoundry extends React.Component {\n\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n\n// export default class ErrorBoundry extends React.Component {\n//   constructor(props: any) {\n//     super(props);\n//     this.state = { hasError: false };\n//   }\n\n//   static getDerivedStateFromError(error) {\n//     // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\n//     return { hasError: true };\n//   }\n\n//   componentDidCatch(error, errorInfo) {\n//     this.setState({ hasError: true });\n//   }\n\n//   render() {\n//     if (this.state.hasError) {\n//       // Можно отрендерить запасной UI произвольного вида\n//       return <ErrorIndicator />;\n//     }\n\n//     return this.props.children; \n//   }\n// }\n","import React, { Suspense, lazy } from \"react\";\nimport \"./App.scss\";\nimport './styles/index.scss'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// common components\nimport ErrorBoundry from \"./components/shared/error-boundry\";\n\n// pages\nimport Calendar from \"./components/pages/calendar/calendar\";\nimport Spinner from \"./components/shared/spinner/spinner\";\nconst Authorization = lazy(() => import('./components/pages/auth'));\nconst Registration = lazy(() => import('./components/pages/registration'));\nconst RecoveryPassword = lazy(() => import('./components/pages/recovery-password'));\nconst Notification = lazy(() => import('./components/pages/notifications'));\nconst TodayTimetable = React.lazy(() => import('./components/pages/today-timetable'));\nconst EventInfo = React.lazy(() => import('./components/pages/single-event-info/single-event-info'));\nconst ChangePassword = React.lazy(() => import('./components/pages/change-password'));\nconst AdminStat = React.lazy(() => import('./components/pages/admin/admin-statistics'));\nconst PersonalOffice = React.lazy(() => import('./components/pages/person-cabinet/person-cabinet'));\nconst EndEvents = React.lazy(() => import('./components/pages/admin/admin-end-events/admin-end-events'));\nconst EndEventInfo = React.lazy(() => import('./components/pages/admin/admin-end-events/table/end-event-info'));\nconst CreateEventPage = React.lazy(() => import('./components/pages/admin/admin-create-event'));\nconst EditEventsPage = React.lazy(() => import('./components/pages/admin/admin-edit-events'));\nconst RoomsList = React.lazy(() => import('./components/pages/rooms/rooms-list'));\nconst RoomsEvent = React.lazy(() => import('./components/pages/rooms/rooms-event'));\n\nconst App: React.FC = () => {\n  return (\n    <ErrorBoundry>\n      <Router>\n        <Suspense fallback={<Spinner />} >\n          <div className=\"main__wrapper\">\n            <Switch>\n              <Route exact path=\"/\" component={Calendar} />\n              <Route exact path=\"/auth\" component={Authorization} />\n              <Route exact path=\"/registration\" component={Registration} />\n              <Route exact path=\"/recovery_password\" component={RecoveryPassword} />\n              <Route exact path=\"/notifications\" component={Notification} />\n              <Route exact path=\"/today\" component={TodayTimetable} />\n              <Route exact path=\"/today/:id\" component={EventInfo} />\n              <Route exact path=\"/change_password\" component={ChangePassword} />\n              <Route exact path=\"/personal_office\" component={PersonalOffice} />\n              <Route exact path=\"/rooms\" component={RoomsList} />\n              <Route exact path=\"/rooms/:id\" component={RoomsEvent} />\n              <Route exact path=\"/admin\" component={AdminStat} />\n              <Route exact path=\"/admin/end_events\" component={EndEvents} />\n              <Route exact path=\"/admin/end_event/:id\" component={EndEventInfo} />\n              <Route exact path=\"/admin/create_event\" component={CreateEventPage} />\n              <Route exact path=\"/admin/create_event/:id\" component={CreateEventPage} />\n              <Route exact path=\"/admin/all_events\" component={EditEventsPage} />\n\n              {/* <Route path=\"*\" component={NotFound} /> */}\n            </Switch>\n          </div>\n        </Suspense>\n      </Router>\n    </ErrorBoundry>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
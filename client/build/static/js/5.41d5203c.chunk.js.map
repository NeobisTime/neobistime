{"version":3,"sources":["components/pages/rooms/rooms-empty.tsx","images/pages/empty-room.png","components/pages/today-timetable/today-timetable.tsx","images/pages/procent_coming.svg","images/pages/events_created.svg","images/pages/peoples_average.svg","images/pages/admin-stat-total-events.svg","images/pages/admin-stat-percent-coming.svg","images/pages/admin-stat-leute.svg","components/pages/admin/admin-statistics/admin-stat.tsx","components/pages/admin/admin-statistics/index.js"],"names":["EmptyRoom","className","to","src","emptyRoom","alt","module","exports","TodayList","events","map","event","startDate","Date","start","endDate","end","id","key","style","backgroundColor","title","getHours","getMinutes","today","finalDate","getMonth","getDate","getFullYear","withNavbarContainer","props","useState","todayEvents","setTodayEvents","useEffect","API","getTodaySchedule","then","requestData","console","log","data","withDataContainer","department","setDepartment","month","setMonth","year","setYear","departmentData","setDepartmentData","generalStat","setGeneralStat","departmentsChartData","setDepartmentsChartData","departmentsChartLabels","setDepartmentsChartLabels","doughnutData","datasets","average_attendance","labels","departmentChartData","updateDepartmentData","department_id","postStatByDepartment","getGeneralStat","getStatForAllDepartments","allDepartmentsData","keys","values","push","percentage_of_attendance_at_events","procent","quantity_of_all_events","average_number_of_people_per_event","people","quantity_of_people","options","departments","required","onChange","e","value","yearsMonth","onClick","width","height","responsive","maintainAspectRatio","legend","display","all","boxSizing","padding","color","quantity_of_events_by_departments","marginBottom","percentComing","averagePeople","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","AdminStat"],"mappings":"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","file":"static/js/5.41d5203c.chunk.js","sourcesContent":["import React from \"react\";\nimport emptyRoom from \"../../../images/pages/empty-room.png\";\nimport { Link } from \"react-router-dom\";\n\nconst EmptyRoom = () => {\n  return (\n    <div className=\"empty-room\">\n      <p className=\"empty-room__text\">Еще никто не бронировал эту комнату.</p>\n      <p className=\"empty-room__text\"> Вы можете быть первыми!</p>\n      <div className=\"empty-room__block\">\n        <Link to=\"/admin/create_event\" className=\"link\">\n          <button className=\"empty-room__button button\">Забронировать</button>\n        </Link>\n        <img src={emptyRoom} className=\"empty-room__image\" alt=\"empty rooom\" />\n      </div>\n    </div>\n  );\n};\n\nexport default EmptyRoom;\n","module.exports = __webpack_public_path__ + \"static/media/empty-room.9c157e05.png\";","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\nimport API from \"../../../API\";\nimport EmptyRoom from \"../rooms/rooms-empty\";\n\n// TODO: todayList нужно сделать переиспользуемым компонентом, он используется на  этой странице и на admin-end-events\n\ntype TodayListProps = {\n  events: object[];\n};\n\nexport const TodayList = ({ events }: TodayListProps) => {\n  return (\n    <div className=\"today__list\">\n      {events ? (\n        events.map((event: any) => {\n          const startDate = new Date(event.start);\n          const endDate = new Date(event.end);\n          return (\n            <Link to={`/today/${event.id}`} key={event.id} className=\"link\">\n              <div className=\"today__list-item\">\n                <div className=\"today__list-item-answer\">\n                  <div\n                    className=\"today__list-item-answer_circle\"\n                    style={{ backgroundColor: \"var(--neobisColor)\" }}\n                  ></div>\n                </div>\n                <div className=\"today__list-item-content\">\n                  <p className=\"today__list-item-text\">{event.title}</p>\n                  <p className=\"today__list-item-time\">\n                    {startDate.getHours()}:\n                    {(startDate.getMinutes() < 10 ? \"0\" : \"\") +\n                      startDate.getMinutes()}{\" \"}\n                    - {endDate.getHours()}:\n                    {(endDate.getMinutes() < 10 ? \"0\" : \"\") +\n                      endDate.getMinutes()}{\" \"}\n                  </p>\n                </div>\n              </div>\n            </Link>\n          );\n        })\n      ) : (\n        <EmptyRoom />\n      )}\n    </div>\n  );\n};\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\nlet today = new Date();\nexport let finalDate = `${\n  monthNames[today.getMonth()]\n}${\" \"}${today.getDate()}  ${today.getFullYear()}`;\n\nconst TodayTimetable = (props: any) => {\n  const [todayEvents, setTodayEvents] = useState([]);\n  useEffect(() => {\n    API.getTodaySchedule().then((requestData) => {\n      console.log(\"TodayTimetable -> requestData\", requestData);\n      setTodayEvents(requestData.data);\n    });\n  }, []);\n  return (\n    <>\n      <p className=\"today__title\">{finalDate}</p>\n      <TodayList events={todayEvents} />\n    </>\n  );\n};\n\nexport default withNavbarContainer(TodayTimetable);\n","module.exports = __webpack_public_path__ + \"static/media/procent_coming.29d4caf0.svg\";","module.exports = __webpack_public_path__ + \"static/media/events_created.8b3d6b5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/peoples_average.2ae4c297.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin-stat-total-events.4f0b3f66.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin-stat-percent-coming.7c9e1509.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin-stat-leute.920858cd.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport Select from \"react-select\";\n\n// today date\nimport { finalDate } from \"../../../pages/today-timetable/today-timetable\";\n\n// info block icons\nimport procent from \"../../../../images/pages/procent_coming.svg\";\nimport events from \"../../../../images/pages/events_created.svg\";\nimport people from \"../../../../images/pages/peoples_average.svg\";\nimport time from \"../../../../images/pages/time_average.svg\";\nimport withNavbarContainer from \"../../../../HOC/withNavbar\";\nimport withDataContainer from \"../../../../HOC/withData\";\nimport all from \"../../../../images/pages/admin-stat-total-events.svg\";\nimport percentComing from \"../../../../images/pages/admin-stat-percent-coming.svg\";\nimport averagePeople from \"../../../../images/pages/admin-stat-leute.svg\";\nimport API from \"../../../../API\";\n\ntype GeneralStatsType = {\n  quantity_of_people: number;\n  quantity_of_all_events: number;\n  average_number_of_people_per_event: number;\n  percentage_of_attendance_at_events: number;\n};\n\ntype DepartmentStatsType = {\n  average_attendance: number;\n  average_number_of_people_per_event: number;\n  quantity_of_events_by_departments: number;\n  quantity_of_students_by_departments: number;\n};\n\nconst AdminStat = (props: any) => {\n  // filltration data\n  const [department, setDepartment] = useState<number>(1);\n  const [month, setMonth] = useState<number>(1);\n  const [year, setYear] = useState<boolean>(true);\n\n  const [departmentData, setDepartmentData] = useState<\n    DepartmentStatsType | any\n  >({});\n  const [generalStat, setGeneralStat] = useState<GeneralStatsType | any>({});\n  const [departmentsChartData, setDepartmentsChartData] = useState([]);\n  const [departmentsChartLabels, setDepartmentsChartLabels] = useState([]);\n\n  const doughnutData = {\n    datasets: [\n      {\n        data: [\n          departmentData.average_attendance,\n          100 - departmentData.average_attendance,\n        ],\n        backgroundColor: [\"#F7D154\", \"lightgrey\"],\n      },\n    ],\n    labels: [\"% посещений\", \"% пропусков\"],\n  };\n  const departmentChartData = {\n    datasets: [\n      {\n        data: departmentsChartData,\n        backgroundColor: [\n          \"#6C63FF\",\n          \"#1FEAC5\",\n          \"#FBBEBE\",\n          \"#87DBEC\",\n          \"purple\",\n          \"#F7D154\",\n          \"orange\",\n          \"green\",\n          \"red\",\n        ],\n      },\n    ],\n    labels: departmentsChartLabels,\n  };\n\n  function updateDepartmentData() {\n    const data = {\n      month: month,\n      department_id: +department,\n      year,\n    };\n    API.postStatByDepartment(data).then((data: any) => {\n    console.log(\"updateDepartmentData -> data\", data.data)\n      setDepartmentData(data.data);\n    });\n  }\n\n  useEffect(() => {\n    updateDepartmentData();\n  }, [month, year, department]);\n\n  const handleDepartmentChange = (e: any) => {\n    setDepartment(e.value);\n    updateDepartmentData();\n  };\n\n  const handleMonthChange = (e: any) => {\n    setMonth(+e.value + 1);\n    setYear(false);\n    updateDepartmentData();\n  };\n\n  useEffect(() => {\n    API.getGeneralStat().then((requestData) => {\n      setGeneralStat(requestData.data);\n    });\n    API.getStatForAllDepartments().then((allDepartmentsData) => {\n      let data = allDepartmentsData.data;\n      // get data to departments chart\n      let keys: any = [];\n      let values: any = [];\n      for (let key in data) {\n        keys.push(key);\n        values.push(data[key]);\n      }\n      setDepartmentsChartData(values);\n      setDepartmentsChartLabels(keys);\n    });\n\n    updateDepartmentData();\n  }, []);\n\n  return (\n    <div className=\"admin-stat\">\n      <div className=\"admin-stat__row\">\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_1\">\n          <div className=\"d-flex p-1\">\n            <div>\n              <p className=\"admin-stat__row-info-block-value\">\n                {generalStat.percentage_of_attendance_at_events}\n              </p>\n              <p className=\"admin-stat__row-info-block-text\">\n                % посещений мероприятий\n              </p>\n            </div>\n            <div>\n              <img\n                className=\"admin-stat__row-info-block-img\"\n                src={procent}\n                alt=\"beautiful content\"\n              />\n            </div>\n          </div>\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\n        </div>\n\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_2\">\n          <div className=\"d-flex p-1\">\n            <div>\n              <p className=\"admin-stat__row-info-block-value\">\n                {generalStat.quantity_of_all_events}\n              </p>\n              <p className=\"admin-stat__row-info-block-text\">\n                мероприятий организовано\n              </p>\n            </div>\n            <div>\n              <img\n                className=\"admin-stat__row-info-block-img\"\n                src={events}\n                alt=\"beautiful content\"\n              />\n            </div>\n          </div>\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\n        </div>\n\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_3\">\n          <div className=\"d-flex p-1\">\n            <div>\n              <p className=\"admin-stat__row-info-block-value\">\n                {generalStat.average_number_of_people_per_event}\n              </p>\n              <p className=\"admin-stat__row-info-block-text\">людей в среднем</p>\n            </div>\n            <div>\n              <img\n                className=\"admin-stat__row-info-block-img\"\n                src={people}\n                alt=\"beautiful content\"\n              />\n            </div>\n          </div>\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\n        </div>\n\n        <div className=\"admin-stat__row-info-block admin-stat__row-info-block_4\">\n          <div className=\"d-flex p-1\">\n            <div>\n              <p className=\"admin-stat__row-info-block-value\">\n                {generalStat.quantity_of_people}\n              </p>\n              <p className=\"admin-stat__row-info-block-text\">\n                численность Необиса\n              </p>\n            </div>\n            <div>\n              <img\n                className=\"admin-stat__row-info-block-img\"\n                src={people}\n                alt=\"beautiful content\"\n              />\n            </div>\n          </div>\n          <div className=\"admin-stat__row-info-block-date\">{finalDate}</div>\n        </div>\n      </div>\n\n      <div className=\"admin-stat__charts\">\n        <div className=\"admin-stat__charts-doughnut\">\n          <div className=\"admin-stat__charts-doughnut-filters\">\n            <Select\n              options={props.departments}\n              className=\"admin-stat__charts-doughnut-select\"\n              required\n              onChange={handleDepartmentChange}\n            />\n            <Select\n              options={props.yearsMonth}\n              className=\"admin-stat__charts-doughnut-select\"\n              required\n              onChange={handleMonthChange}\n            />\n            <button\n              onClick={() => {\n                setYear(true);\n              }}\n              className=\"button admin-stat__charts-doughnut-button_year \"\n            >\n              Год\n            </button>\n          </div>\n          <div className=\"admin-stat__charts-doughnut-chart\">\n            <Doughnut\n              data={doughnutData}\n              width={250}\n              height={250}\n              options={{\n                responsive: true,\n                maintainAspectRatio: true,\n                legend: {\n                  display: false,\n                },\n              }}\n            />\n          </div>\n          <div className=\"personal-office__stat-info\">\n            <div className=\"personal-office__stat-info-content\">\n              <div className=\"personal-office__stat-info-block\">\n                <img\n                  className=\"personal-office__stat-info-block-img\"\n                  src={all}\n                  style={{ boxSizing: \"border-box\", padding: \"10px\" }}\n                  alt=\"personal stat logo\"\n                />\n                <p className=\"personal-office__stat-info-block-text\">\n                  Всего мероприятий\n                </p>\n                <p\n                  style={{ color: \"#1070CA\" }}\n                  className=\"personal-office__stat-info-block-number\"\n                >\n                  {departmentData.quantity_of_events_by_departments}\n                </p>\n              </div>\n              <div className=\"personal-office__stat-info-block\">\n                <img\n                  className=\"personal-office__stat-info-block-img\"\n                  style={{\n                    boxSizing: \"border-box\",\n                    padding: \"10px\",\n                    marginBottom: \"2px\",\n                  }}\n                  src={percentComing}\n                  alt=\"personal stat logo\"\n                />\n                <p className=\"personal-office__stat-info-block-text\">\n                  Процент посещений\n                </p>\n                <p\n                  style={{ color: \"#F7D154\" }}\n                  className=\"personal-office__stat-info-block-number\"\n                >\n                  {departmentData.average_attendance}\n                </p>\n              </div>\n              <div className=\"personal-office__stat-info-block\">\n                <img\n                  className=\"personal-office__stat-info-block-img personal-office__stat-info-block-img_small\"\n                  src={averagePeople}\n                  alt=\"personal stat logo\"\n                />\n                <p className=\"personal-office__stat-info-block-text\">\n                  людей в среднем\n                </p>\n                <p\n                  style={{ color: \"#1070CA\" }}\n                  className=\"personal-office__stat-info-block-number\"\n                >\n                  {departmentData.average_number_of_people_per_event}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"admin-stat__charts-bar\">\n          <p className=\"admin-stat__charts-bar-text\">\n            Организовано мероприятий департаментами за все время:\n          </p>\n          <Bar\n            data={departmentChartData}\n            width={100}\n            height={75}\n            options={{\n              responsive: true,\n              maintainAspectRatio: true,\n              legend: {\n                display: false,\n              },\n              scales: {\n                xAxes: [\n                  {\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n                yAxes: [\n                  {\n                    ticks: {\n                      beginAtZero: true,\n                    },\n                    gridLines: {\n                      display: false,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withNavbarContainer(withDataContainer(AdminStat), \"admin\");\n","import AdminStat from \"./admin-stat.tsx\";\n\nexport default AdminStat;\n"],"sourceRoot":""}
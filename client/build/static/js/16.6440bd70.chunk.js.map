{"version":3,"sources":["images/pages/event-info-default.png","components/pages/single-event-info/single-event-info.tsx"],"names":["module","exports","months","withNavbarContainer","withDataContainer","withRouter","props","eventId","match","params","id","useState","eventData","setEventData","correctPollId","setCorrectPollId","address","setAddress","willGo","setwillGo","willNotGo","setwillNotGo","finalAnswer","setFinalAnswer","rejectionReason","setRejectionReason","missedDeadline","setMissedDeadline","startDate","Date","start","deadline","today","useEffect","API","getEventInfo","then","data","place","getMyPoll","correctPoll","filter","poll","event","title","answer","rejection_reason","getTime","className","getHours","getMinutes","days","getDay","monthListRus","getMonth","getDate","description","src","addressImage","alt","name","onSubmit","e","preventDefault","patchPoll","postPoll","type","checked","onChange","cols","rows","placeholder","disabled","value","target","image","preview"],"mappings":"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","file":"static/js/16.6440bd70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/event-info-default.8b7e2246.png\";","import React, { useState, useEffect } from \"react\";\nimport preview from \"../../../images/pages/event-info-default.png\";\nimport addressImage from \"../../../images/pages/address.svg\";\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\nimport { withRouter } from \"react-router-dom\";\nimport API from \"../../../API\";\nimport withDataContainer from \"../../../HOC/withData\";\n\nlet days = [\n  \"Воскресенье\",\n  \"Понедельник\",\n  \"Вторник\",\n  \"Среда\",\n  \"Четверг\",\n  \"Пятница\",\n  \"Суббота\",\n];\nlet months = [\n  \"Январь\",\n  \"Февраль\",\n  \"Март\",\n  \"Апрель\",\n  \"Май\",\n  \"Июнь\",\n  \"Июль\",\n  \"Август\",\n  \"Cентябрь\",\n  \"Октябрь\",\n  \"Ноябрь\",\n  \"Декабрь\",\n];\n\nconst EventInfo = (props: any) => {\n  const eventId = props.match.params.id;\n  const [eventData, setEventData] = useState<any>({});\n  const [correctPollId, setCorrectPollId] = useState<any>(0);\n  const [address, setAddress] = useState<any>({});\n\n  const [willGo, setwillGo] = useState<boolean | undefined>(false);\n  const [willNotGo, setwillNotGo] = useState<boolean | undefined>(false);\n  const [finalAnswer, setFinalAnswer] = useState<boolean>(false);\n  const [rejectionReason, setRejectionReason] = useState(\"\");\n  const [missedDeadline, setMissedDeadline] = useState(false);\n\n  let startDate = new Date(eventData.start);\n  let deadline = new Date(eventData.deadline);\n  let today = new Date();\n\n  const handlewillGo = () => {\n    setwillGo(true);\n    setwillNotGo(false);\n    setFinalAnswer(true);\n  };\n  const handlewillNotGo = () => {\n    setwillGo(false);\n    setwillNotGo(true);\n    setFinalAnswer(false);\n  };\n\n  useEffect(() => {\n    API.getEventInfo(eventId).then((eventData) => {\n      setEventData(eventData.data);\n      setAddress(eventData.data.place);\n\n      // get data to poll if it exist\n      API.getMyPoll().then((data) => {\n        if (data.data) {\n          let correctPoll: any = [];\n          correctPoll = data.data.filter((poll: any) => {\n            return poll.event === eventData.data.title;\n          });\n          // if exist fill correct data in inputs\n          if (correctPoll[0]) {\n            correctPoll[0].answer ? setwillGo(true) : setwillNotGo(true);\n            setRejectionReason(correctPoll[0].rejection_reason);\n            setCorrectPollId(correctPoll[0].id);\n          }\n        }\n      });\n\n      // disable input if deadline crossed\n      let deadline = new Date(eventData.data.deadline);\n      if (+today.getTime() > +deadline.getTime()) {\n        setMissedDeadline(true);\n      } else {\n        setMissedDeadline(false);\n      }\n    });\n  }, []);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const data = {\n      event: eventId,\n      answer: finalAnswer,\n      rejection_reason: rejectionReason,\n    };\n    if (correctPollId) {\n      API.patchPoll(data, correctPollId);\n      // .then((data) => {\n      //   console.log(\"handleSubmit -> data\", data.data);\n      // });\n    } else {\n      API.postPoll(data).then((data) => {\n        setCorrectPollId(data.data.id);\n        // window.location.reload(true);\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"event-info\">\n        <div className=\"event-info__content\">\n          <p className=\"event-info__content-title\">{eventData.title}</p>\n          <p className=\"event-info__content-date\">\n            {startDate.getHours()}.\n            {(startDate.getMinutes() < 10 ? \"0\" : \"\") + startDate.getMinutes()}{\" \"}\n            {props.days[startDate.getDay()]},{\" \"}\n            {props.monthListRus[startDate.getMonth()]} {startDate.getDate()}\n          </p>\n          <p className=\"event-info__content-description\">\n            {eventData.description}\n          </p>\n          <p className=\"event-info__content-address\">\n            <img\n              className=\"event-info__content-address-image\"\n              src={addressImage}\n              alt=\"address\"\n            />\n            Адрес: {address.name} {eventData.address}\n          </p>\n          <p className=\"event-info__content-text_m_t\">\n            Примите ли вы участие в данном событии?\n          </p>\n          <p className=\"event-info__content-text_deadline\">\n            deadline: {deadline.getDate()} {months[deadline.getMonth()]}{\" \"}\n            {deadline.getHours()}:\n            {(deadline.getMinutes() < 10 ? \"0\" : \"\") + deadline.getMinutes()}\n          </p>\n          {missedDeadline ? (\n            <p className=\"event-info__content-text\">Вы пропустили deadline</p>\n          ) : (\n            <form className=\"event-info__content-form\" onSubmit={handleSubmit}>\n              <label className=\"event-info-modal__label\">\n                Да\n                <input\n                  className=\"event-info-modal__input\"\n                  type=\"checkbox\"\n                  checked={willGo}\n                  onChange={handlewillGo}\n                />\n                <span className=\"event-info-modal__checkmark\"></span>\n              </label>\n              <label className=\"event-info-modal__label\">\n                Нет\n                <input\n                  className=\"event-info-modal__input\"\n                  type=\"checkbox\"\n                  checked={willNotGo}\n                  onChange={handlewillNotGo}\n                />\n                <span className=\"event-info-modal__checkmark\"></span>\n              </label>\n              <p className=\"event-info__content-text\">\n                Если нет, то укажите причину:\n              </p>\n              <textarea\n                cols={60}\n                rows={4}\n                placeholder=\"Ваш ответ...\"\n                disabled={willGo ? true : false}\n                id=\"event-info__textarea-disabled\"\n                className=\"event-info__content-form-textarea\"\n                value={rejectionReason}\n                onChange={(e) => {\n                  setRejectionReason(e.target.value);\n                }}\n              />\n              <button type=\"submit\" className=\"event-info__content-form-submit\">\n                Отправить\n              </button>\n            </form>\n          )}\n        </div>\n        <div className=\"event-info__content\">\n          <img src={eventData.image || preview} alt=\"event\" className=\"event-info__content-right-image\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withNavbarContainer(withDataContainer(withRouter(EventInfo)));\n"],"sourceRoot":""}
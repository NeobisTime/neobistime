{"version":3,"sources":["API.ts","components/shared/spinner/spinner.tsx","HOC/withData.tsx","images/shared/user.svg","components/shared/navbar/confirm-exit.tsx","images/shared/calendar.svg","images/shared/exit.svg","images/shared/modal-peoples.svg","HOC/withNavbar.tsx","components/shared/alert/alert.tsx","components/shared/alert/index.js","components/pages/calendar/modals/event-info.tsx","components/pages/calendar/modals/admin-event.tsx","components/pages/calendar/calendar.tsx","images/pages/address.svg","components/shared/navbar/navbar.tsx","components/shared/navbar/index.js","images/shared/all_events.svg","images/shared/modal-clock.svg","images/shared/modal-description.svg","components/pages/admin/admin-navbar/admin-navbar.tsx","components/pages/admin/admin-navbar/index.js","components/shared/spinner/Group 81.svg","images/shared/Notification.svg","images/shared/today.svg","images/shared/admin.svg","images/shared/rooms.svg","images/shared/admin_members.svg","images/shared/edit.svg","images/shared/adminn_stat.svg","images/shared/modal-arrow-more-info.svg","images/shared/modal-edit.svg","images/shared/modal-address.svg","images/shared/modal-file.svg","images/shared/alert_success.svg","images/shared/alert_error.svg","components/shared/error-indicator/index.js","components/shared/error-indicator/error-indicator.jsx","components/shared/error-boundry/index.js","components/shared/error-boundry/error-boundry.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["http","Axios","create","baseURL","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","token","localStorage","getItem","getData","url","get","headers","Accept","Authorization","postData","data","post","then","response","patchData","patch","deleteEvent","delete","patchDataWithReturnJSON","a","key","setItem","answer","getEvents","limit","offset","search","period","getEventInfo","id","getRoomEvents","getTodaySchedule","getUsers","getGeneralStat","getStatForAllDepartments","getEndEvents","getUserInfo","getMyPoll","getEventPoll","getNotes","getPersonalStats","getStatByDepartment","department","month","year","getRole","console","log","error","statusText","postRegistrationData","postAuthData","postResetPasswordConfirm","postEventCreateData","postFormData","postNoteCreateData","postTokenData","patchEventChangeData","patchNoteChangeData","patchPoll","postPoll","postDataWithReturnJSON","postRecoveryPasswordData","patchMyEventPoll","eventId","pollId","patchUserInfo","patchFormData","deleteNote","Spinner","props","video","React","useRef","title","random","Math","round","useState","text","setText","show","setShow","useEffect","timeout","setTimeout","timeOut","clearTimeout","className","src","neobis","alt","autoPlay","loop","muted","ref","withDataContainer","Component","departments","value","label","selectDepartments","days","months","yearsMonth","monthListRus","module","exports","ConfirmExit","onClose","onClick","to","removeItem","withNavbarContainer","type","Alert","successImage","errorImage","EventInfoModal","willGo","setWillGo","willNotGo","setWillNotGo","role","setRole","missedDeadline","setMissedDeadline","correctPollId","setCorrectPollId","event","deadline","Date","startDate","start","today","submitPoll","finalAnswer","API","correctPoll","filter","poll","getTime","editPen","style","width","fontSize","getHours","getMinutes","getDay","getMonth","getDate","description","address","place","checked","onChange","moreInfoArrow","AdminEventCreateModal","setTitle","setDescription","image","setImage","setDepartments","date","setStartDate","startDateHours","setStartDateHours","startDateMinutes","setStartDateMinutes","endDate","setEndDate","endDateHours","setEndDateHours","endDateMinutes","setEndDateMinutes","setAddress","addressDisable","setAddressDisable","setPlace","finalUsers","setFinalUsers","usersForSend","setUsersForSend","users","preFinalUsers","map","user","email","name_surname","updateStartTime","startTime","setHours","getFullYear","updateEndTime","endTime","preventDefault","start_time","end_time","departmentNumbers","CheckForAll","find","item","usersForSendEmails","formData","FormData","append","String","OpenAlert","catch","request","required","placeholder","e","target","time","onDayChange","day","parseInt","people","isMulti","isClearable","isSearchable","options","classNamePrefix","placeImage","disabled","descriptionImage","cols","rows","fileImage","padding","files","CloseModalButton","withRouter","currentEvent","setCurrentEvent","editable","setEditable","setDate","serverEvents","setServerEvents","res","results","history","push","getElementsByClassName","innerHTML","isEventInfoOpen","setIsEventInfoOpen","toggleEventInfoOpen","alertType","setAlertType","alertText","setAlertText","isAlertOpen","setIsAlertOpen","openAlert","status","handleEventDropAndResize","eventDropInfo","oldEvent","Number","_def","publicId","end","my_event","finalStart","startStr","finalEnd","endStr","dataToPatch","public","isAdminEventCreate","setIsAdminEventCreate","toggleAdminEventCreate","updateEvents","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","listPlugin","googleCalendarPlugin","bootstrapPlugin","height","headerToolbar","left","center","right","initialView","firstDay","googleCalendarApiKey","eventSources","googleCalendarId","borderColor","classNames","dayMaxEventRows","selectable","selectMirror","select","selectInfo","eventDrop","eventResize","eventClick","eventClickInfo","findCurrentEvent","slotDuration","locale","isModalOpen","setIsModalOpen","userInfo","setUserInfo","setDepartment","toggleModal","departmentNumber","department_id","profile_img","avatar","exact","activeStyle","backgroundColor","notification","calendar","rooms","admin","exit","Navbar","peoples","create_event","stat","events","AdminNavbar","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","children","lazy","Registration","RecoveryPassword","ChangePassword","Notification","TodayTimetable","EventInfo","ChangePersonalData","AdminStat","PersonalOffice","EndEvents","EndEventInfo","CreateEventPage","EditEventsPage","RoomsList","RoomsEvent","App","fallback","path","component","Calendar","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ec2f181d.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\nconst http = Axios.create({\r\n  // baseURL: \"https://cors-anywhere.herokuapp.com/http://46.101.110.53/api/\",\r\n  // baseURL: \"https://calendar.neobis.kg/api/\",\r\n  baseURL: \"http://46.101.110.53/api/\",\r\n  // baseURL: \"http://www.220-accentuation.co/api/\",\r\n});\r\n\r\nexport function getCookie(name: string) {\r\n  let matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" +\r\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\r\n        \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\nlet token = getCookie(\"XSRF-Token\") || localStorage.getItem(\"token\");\r\n\r\nconst getData = (url: string) => {\r\n  return http.get(url, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\n\r\nconst postData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postGetRoleData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n    .then(\r\n      (response) => {\r\n        console.log(\"%c \" + response, \"color: lightgreen\");\r\n        return response;\r\n      },\r\n      (error) => {\r\n        console.log(\"%c \" + error.response.statusText, \"color: red\");\r\n        return error;\r\n      }\r\n    );\r\n};\r\n\r\nconst patchData = (url: string, data: any) => {\r\n  return http\r\n    .patch(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postTokenData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postDataWithReturnJSON = (url: string, data: any) => {\r\n  return http.post(url, data, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\n\r\nconst deleteEvent = (url: string) => {\r\n  return http.delete(url, {\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Token \" + token,\r\n    },\r\n  });\r\n};\r\n\r\nconst patchDataWithReturnJSON = (url: string, data: any) => {\r\n  return http\r\n    .patch(url, data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nconst postFormData = (url: string, data: any) => {\r\n  return http\r\n    .post(url, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\nconst patchFormData = (url: string, data: any) => {\r\n  return http\r\n    .patch(url, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Token \" + token,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      return response;\r\n    });\r\n};\r\n\r\nasync function postAuthData(url: string, data: object) {\r\n  let answer = await http.post(url, data).then((response) => {\r\n    document.cookie = `XSRF-Token =${response.data.key}`;\r\n    localStorage.setItem(\"token\", response.data.key);\r\n    return response;\r\n  });\r\n  return answer;\r\n}\r\n\r\nexport default {\r\n  getEvents: (\r\n    limit: number = 10,\r\n    offset: number = 0,\r\n    search: string = \"\",\r\n    period: string = \"\"\r\n  ) =>\r\n    getData(\r\n      `events/?limit=${limit}&offset=${offset}&search=${search}&period=${period}`\r\n    ),\r\n  getEventInfo: (id: string | number) => getData(`events/${id}/`),\r\n  getRoomEvents: (\r\n    id: number | string,\r\n    limit: number,\r\n    offset: number,\r\n    period: string\r\n  ) => getData(`place/${id}/?limit=${limit}&offset=${offset}&period=${period}`),\r\n  getTodaySchedule: () => getData(\"today_events/\"),\r\n  getUsers: () => getData(\"users/\"),\r\n  getGeneralStat: () => getData(\"general_stats/\"),\r\n  getStatForAllDepartments: () => getData(\"stats_for_all_departments/\"),\r\n  getEndEvents: () => getData(\"my_events/\"),\r\n  getUserInfo: () => getData(\"users/rest-auth/user/\"),\r\n  getMyPoll: () => getData(\"my_poll/\"),\r\n  getEventPoll: (id: number | string, limit: number, offset: number) =>\r\n    getData(`my_events/${id}/?limit=${limit}&offset=${offset}`),\r\n  getNotes: () => getData(\"notes/\"),\r\n  getPersonalStats: (period: string) =>\r\n    getData(`self-statistic/?period=${period}`),\r\n  getStatByDepartment: (department: number, month: number, year: boolean) =>\r\n    getData(\r\n      `stats_by_department/?department_id=${department}&month=${month}&year=${year}`\r\n    ),\r\n\r\n  getRole: (token: string) => postGetRoleData(\"users/is_user_staff/\", token),\r\n  postRegistrationData: (data: object) =>\r\n    postData(\"users/rest-auth/registration/\", data),\r\n  postAuthData: (data: object) => postAuthData(\"users/rest-auth/login/\", data),\r\n  postResetPasswordConfirm: (data: object) =>\r\n    postData(\"users/rest-auth/password/reset/confirm/\", data),\r\n  postEventCreateData: (data: object) => postFormData(\"events/\", data),\r\n  postNoteCreateData: (data: object) => postTokenData(\"notes/\", data),\r\n  patchEventChangeData: (data: object, id: number | string) =>\r\n    patchData(`events/${id}/`, data),\r\n  patchNoteChangeData: (data: object, id: number | string) =>\r\n    patchData(`notes/${id}/`, data),\r\n  patchPoll: (data: object, id: number | string) =>\r\n    patchDataWithReturnJSON(`poll/${id}/`, data),\r\n  postPoll: (data: object) => postDataWithReturnJSON(`poll/`, data),\r\n  postRecoveryPasswordData: (data: object) =>\r\n    postData(`users/rest-auth/password/reset/`, data),\r\n  patchMyEventPoll: (eventId: any, pollId: any, data: object) =>\r\n    patchDataWithReturnJSON(`my_events/${eventId}/poll/${pollId}/`, data),\r\n  patchUserInfo: (data: object) => patchFormData(`users/rest-auth/user/`, data),\r\n\r\n  deleteEvent: (id: number | string) => deleteEvent(`events/${id}/`),\r\n  deleteNote: (id: number | string) => deleteEvent(`notes/${id}/`),\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./spinner.css\";\r\nimport neobis from \"./Group 81.svg\";\r\n\r\nconst Spinner = (props: any) => {\r\n  const video = React.useRef(null);\r\n  // play video if it's paused\r\n  //   if (video.current && video.current.paused) video.current.play();\r\n\r\n  const data = [\r\n    { id: 0, title: \"Выпрями спину\" },\r\n    { id: 1, title: \"in code we trust\" },\r\n    { id: 2, title: \"you will never code alone\" },\r\n    { id: 3, title: \"Продуктивного дня! :)\" },\r\n    { id: 4, title: \"This website offers you cookies in the kitchen :))\" },\r\n  ];\r\n  const random = Math.round(Math.random() * 4);\r\n  let [text, setText] = useState<string>(\"\");\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setText(data[random].title);\r\n    let timeout = setTimeout(() => setShow(false), props.timeOut);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <div className=\"spinner\">\r\n          <img src={neobis} className=\"spinner__image\" alt=\"neobis logo\" />\r\n          <p className=\"spinner__text\">{text}</p>\r\n          <video\r\n            autoPlay={true}\r\n            loop={true}\r\n            muted={true}\r\n            className=\"spinner__video\"\r\n            ref={video}\r\n            src=\"/video/spinner.mp4\"\r\n          ></video>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nconst withDataContainer = (Component: any) => {\r\n  const departments = [\r\n    { value: \"8\", label: \"Android\" },\r\n    { value: \"6\", label: \"C#\" },\r\n    { value: \"7\", label: \"Design\" },\r\n    { value: \"5\", label: \"Frontend\" },\r\n    { value: \"9\", label: \"IOS\" },\r\n    { value: \"4\", label: \"Java/Kotlin\" },\r\n    { value: \"2\", label: \"NodeJS\" },\r\n    { value: \"3\", label: \"PM\" },\r\n    { value: \"1\", label: \"Python\" },\r\n  ];\r\n  const selectDepartments = [{ value: \"all\", label: \"All\" }, ...departments];\r\n  let days = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n  ];\r\n  let months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Cентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n  ];\r\n  const yearsMonth = [\r\n    { value: \"0\", label: \"Январь\" },\r\n    { value: \"1\", label: \"Февраль\" },\r\n    { value: \"2\", label: \"Март\" },\r\n    { value: \"3\", label: \"Апрель\" },\r\n    { value: \"4\", label: \"Май\" },\r\n    { value: \"5\", label: \"Июнь\" },\r\n    { value: \"6\", label: \"Июль\" },\r\n    { value: \"7\", label: \"Август\" },\r\n    { value: \"8\", label: \"Сентябрь\" },\r\n    { value: \"9\", label: \"Октябрь\" },\r\n    { value: \"10\", label: \"Ноябрь\" },\r\n    { value: \"11\", label: \"Декабрь\" },\r\n  ];\r\n  const withData = (props: any) => {\r\n    return (\r\n      <Component\r\n        days={days}\r\n        monthListRus={months}\r\n        departments={departments}\r\n        selectDepartments={selectDepartments}\r\n        yearsMonth={yearsMonth}\r\n      />\r\n    );\r\n  };\r\n  return withData;\r\n};\r\n\r\nexport default withDataContainer;\r\n","module.exports = __webpack_public_path__ + \"static/media/user.7a21cbe9.svg\";","import React from \"react\";\r\nimport \"./confirm.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype ConfirmProps = {\r\n  onClose: () => void;\r\n};\r\n\r\nconst ConfirmExit = ({ onClose }: ConfirmProps) => {\r\n  const handleClose = () => {\r\n    document.cookie = \"XSRF-Token = ; role =\";\r\n    localStorage.removeItem('token');\r\n  };\r\n  return (\r\n    <div className=\"confirm-exit\">\r\n      <p className=\"confirm-exit__text\">\r\n        Вы уверены, что хотите выйти с аккаунта?\r\n      </p>\r\n      <div className=\"confirm-exit__buttons-wrapper\">\r\n        <span className=\"confirm-exit__button_red_left\" onClick={onClose}>\r\n          Отмена\r\n        </span>\r\n        <Link to=\"/auth\" className=\"link\">\r\n          <span\r\n            onClick={handleClose}\r\n            className=\"confirm-exit__button_black_right\"\r\n          >\r\n            Выйти\r\n          </span>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmExit;\r\n","module.exports = __webpack_public_path__ + \"static/media/calendar.256c0a90.svg\";","module.exports = __webpack_public_path__ + \"static/media/exit.22f46921.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-peoples.aed03edc.svg\";","import React from \"react\";\r\nimport Spinner from \"../components/shared/spinner/spinner\";\r\nimport Navbar from \"../components/shared/navbar\";\r\nimport AdminNavbar from \"../components/pages/admin/admin-navbar\";\r\n\r\nconst withNavbarContainer = (Component: any, type?: string) => {\r\n  const withNavbar = (props: any) => {\r\n    return (\r\n      <>\r\n        {type === \"admin\" ? (\r\n          <div className=\"wrapper\">\r\n            <AdminNavbar />\r\n            <div className=\"content__wrapper\">\r\n              <Spinner timeOut={600} />\r\n              <Component />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"wrapper\">\r\n            <Navbar />\r\n            <div className=\"content__wrapper\">\r\n              <Spinner timeOut={600} />\r\n              <Component />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return withNavbar;\r\n};\r\n\r\nexport default withNavbarContainer;\r\n","import React from \"react\";\r\nimport successImage from \"../../../images/shared/alert_success.svg\";\r\nimport errorImage from \"../../../images/shared/alert_error.svg\";\r\n\r\nconst Alert = (props: any) => {\r\n  const { type = \"error\", text = \"\" } = props;\r\n  return (\r\n    <div className=\"modal__alert\">\r\n      <div className=\"modal__alert_bottom_right\">\r\n        {type === \"success\" ? (\r\n          <section className=\"modal__alert-content\">\r\n            <img\r\n              src={successImage}\r\n              alt=\"success\"\r\n              className=\"modal__alert-image\"\r\n            />\r\n            <div className=\"modal__alert-content-wrapper\">\r\n              <p className=\"modal__alert-title\">Успешно</p>\r\n              <p className=\"modal__alert-text\">{text}</p>\r\n            </div>\r\n            <div className=\"modal__alert-close\">\r\n              <div\r\n                onClick={props.onClose}\r\n                className=\"modal__alert-close-content\"\r\n              >\r\n                &times;\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : (\r\n          <section className=\"modal__alert-content modal__alert-content_red\">\r\n            <img src={errorImage} alt=\"error\" className=\"modal__alert-image\" />\r\n            <div className=\"modal__alert-content-wrapper\">\r\n              <p className=\"modal__alert-title modal__alert-title_red\">\r\n                Ошибка\r\n              </p>\r\n              <p className=\"modal__alert-text modal__alert-text_red\">{text}</p>\r\n            </div>\r\n            <div className=\"modal__alert-close\">\r\n              <div\r\n                onClick={props.onClose}\r\n                className=\"modal__alert-close-content\"\r\n              >\r\n                &times;\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import Alert from \"./alert\";\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport address from \"../../../../images/pages/address.svg\";\r\nimport moreInfoArrow from \"../../../../images/shared/modal-arrow-more-info.svg\";\r\nimport editPen from \"../../../../images/shared/modal-edit.svg\";\r\nimport { CloseModalButton } from \"../calendar\";\r\nimport API, { getCookie } from \"../../../../API\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EventInfoModal = (props: any) => {\r\n  const [willGo, setWillGo] = useState<boolean | undefined>(false);\r\n  const [willNotGo, setWillNotGo] = useState<boolean | undefined>(false);\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const [missedDeadline, setMissedDeadline] = useState(false);\r\n  const [correctPollId, setCorrectPollId] = useState<any>(0);\r\n  const { event } = props;\r\n  let deadline = new Date(event.deadline);\r\n  let startDate = new Date(event.start);\r\n  let today = new Date();\r\n\r\n  function submitPoll(finalAnswer: boolean) {\r\n    const data = {\r\n      event: event.id,\r\n      answer: finalAnswer,\r\n    };\r\n    if (correctPollId) {\r\n      API.patchPoll(data, correctPollId);\r\n    } else {\r\n      API.postPoll(data).then((data) => {\r\n        setCorrectPollId(data.data.id);\r\n      });\r\n    }\r\n  }\r\n  const handleWillGo = () => {\r\n    setWillGo(true);\r\n    setWillNotGo(false);\r\n    submitPoll(true);\r\n  };\r\n  const handleWillNotGo = () => {\r\n    setWillGo(false);\r\n    setWillNotGo(true);\r\n    submitPoll(false);\r\n  };\r\n\r\n  let months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Cентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n  ];\r\n  let days = [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    let role: any = getCookie(\"role\");\r\n    setRole(role);\r\n\r\n    // get data to poll if it exist\r\n    API.getMyPoll().then((data) => {\r\n      if (data.data) {\r\n        let correctPoll: any = [];\r\n        correctPoll = data.data.filter((poll: any) => {\r\n          return poll.event === event.title;\r\n        });\r\n        console.log(\"EventInfoModal -> correctPoll\", correctPoll);\r\n        // if exist fill correct data in inputs\r\n        if (correctPoll[0]) {\r\n          correctPoll[0].answer ? setWillGo(true) : setWillNotGo(true);\r\n          setCorrectPollId(correctPoll[0].id);\r\n        }\r\n      }\r\n    });\r\n\r\n    // disable input if deadline crossed\r\n    if (+today.getTime() > +deadline.getTime()) {\r\n      setMissedDeadline(true);\r\n    } else {\r\n      setMissedDeadline(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"modal__wrapper \">\r\n      <div className=\"event-info-modal\">\r\n        <CloseModalButton onClose={props.onClose} />\r\n        {role === \"admin\" ? (\r\n          <Link to={`/lead_admin/create_event/${event.id}`} className=\"link\">\r\n            <img\r\n              className=\"event-info-modal__edit-pen\"\r\n              src={editPen}\r\n              alt=\"edit\"\r\n            />\r\n          </Link>\r\n        ) : null}\r\n        <div className=\"event-info__content\" style={{ width: \"90%\" }}>\r\n          <p className=\"event-info__content-title\" style={{ fontSize: \"24px\" }}>\r\n            {event.title}\r\n          </p>\r\n          <p className=\"event-info__content-date\" style={{ fontSize: \"14px\" }}>\r\n            {(startDate.getHours() < 10 ? \"0\" : \"\") + startDate.getHours()}.\r\n            {(startDate.getMinutes() < 10 ? \"0\" : \"\") + startDate.getMinutes()}{\" \"}\r\n            {days[startDate.getDay()]}, {months[startDate.getMonth()]}{\" \"}\r\n            {startDate.getDate()}\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-description\"\r\n            style={{ fontSize: \"18px\" }}\r\n          >\r\n            {event.description}\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-address\"\r\n            style={{ fontSize: \"14px\" }}\r\n          >\r\n            <img\r\n              className=\"event-info__content-address-image\"\r\n              src={address}\r\n              alt=\"address\"\r\n            />\r\n            Адрес: {event.place.name} {event.address}\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-text_m_t\"\r\n            style={{ fontSize: \"14px\" }}\r\n          >\r\n            Посетители это событие?\r\n          </p>\r\n          <p\r\n            className=\"event-info__content-text_deadline\"\r\n            style={{ fontSize: \"10px\" }}\r\n          >\r\n            deadline: {deadline.getDate()} {months[deadline.getMonth()]}{\" \"}\r\n            {deadline.getHours()}:\r\n            {(deadline.getMinutes() < 10 ? \"0\" : \"\") + deadline.getMinutes()}\r\n          </p>\r\n\r\n          {missedDeadline ? (\r\n            <p className=\"event-info__content-text\">Вы пропустили deadline</p>\r\n          ) : (\r\n            <div className=\"event-info-modal__form-wrapper\">\r\n              <form className=\"event-info-modal__form\">\r\n                <div className=\"d-flex\">\r\n                  <label className=\"event-info-modal__label\">\r\n                    Да\r\n                    <input\r\n                      className=\"event-info-modal__input\"\r\n                      type=\"checkbox\"\r\n                      checked={willGo}\r\n                      onChange={handleWillGo}\r\n                    />\r\n                    <span className=\"event-info-modal__checkmark\"></span>\r\n                  </label>\r\n                  <label className=\"event-info-modal__label\">\r\n                    Нет\r\n                    <input\r\n                      className=\"event-info-modal__input\"\r\n                      type=\"checkbox\"\r\n                      checked={willNotGo}\r\n                      onChange={handleWillNotGo}\r\n                    />\r\n                    <span className=\"event-info-modal__checkmark\"></span>\r\n                  </label>\r\n                </div>\r\n              </form>\r\n              <div className=\"event-info-modal__buttons\">\r\n                <Link to={`/today/${event.id}`}>\r\n                  <button className=\"event-info-modal__more-info button\">\r\n                    <div>Подробнее</div>\r\n                    <img\r\n                      src={moreInfoArrow}\r\n                      alt=\"arrow  more info\"\r\n                      className=\"event-info-modal__more-info-image\"\r\n                    />\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventInfoModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { CloseModalButton } from \"../calendar\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport Select from \"react-select\";\r\nimport API from \"../../../../API\";\r\n\r\n// icons\r\nimport time from \"../../../../images/shared/modal-clock.svg\";\r\nimport people from \"../../../../images/shared/modal-peoples.svg\";\r\nimport placeImage from \"../../../../images/shared/modal-address.svg\";\r\nimport descriptionImage from \"../../../../images/shared/modal-description.svg\";\r\nimport fileImage from \"../../../../images/shared/modal-file.svg\";\r\n\r\nconst AdminEventCreateModal = (props: any) => {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [image, setImage] = useState<any>([]);\r\n  const [departments, setDepartments] = useState([]);\r\n\r\n  const [startDate, setStartDate] = useState<Date>(props.date);\r\n  const [startDateHours, setStartDateHours] = useState<number>(0);\r\n  const [startDateMinutes, setStartDateMinutes] = useState<number>(0);\r\n\r\n  const [endDate, setEndDate] = useState<Date>(props.date);\r\n  const [endDateHours, setEndDateHours] = useState<number>(0);\r\n  const [endDateMinutes, setEndDateMinutes] = useState<number>(0);\r\n\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [addressDisable, setAddressDisable] = useState<boolean>(true);\r\n  const [place, setPlace] = useState<any>(null);\r\n\r\n  const [finalUsers, setFinalUsers] = useState([]);\r\n  const [usersForSend, setUsersForSend] = useState([]);\r\n\r\n  const places = [\r\n    { value: \"1\", label: \"Маленькая комната\" },\r\n    { value: \"2\", label: \"Большая комната\" },\r\n    { value: \"3\", label: \"Весь Офис\" },\r\n    { value: \"4\", label: \"Другое\" },\r\n  ];\r\n  const selectDepartments = [\r\n    { value: \"all\", label: \"All\" },\r\n    { value: \"8\", label: \"Android\" },\r\n    { value: \"6\", label: \"C#\" },\r\n    { value: \"7\", label: \"Design\" },\r\n    { value: \"5\", label: \"Frontend\" },\r\n    { value: \"9\", label: \"IOS\" },\r\n    { value: \"4\", label: \"Java/Kotlin\" },\r\n    { value: \"2\", label: \"NodeJS\" },\r\n    { value: \"3\", label: \"PM\" },\r\n    { value: \"1\", label: \"Python\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then((users) => {\r\n      let preFinalUsers: any = users.data.map((user: any) => {\r\n        return { value: user.email, label: user.name_surname };\r\n      });\r\n      setFinalUsers(preFinalUsers);\r\n    });\r\n  }, []);\r\n\r\n  const handleChangeAddress = (e: any) => {\r\n    setPlace(+e.value);\r\n    setAddressDisable(true);\r\n    setAddress(\"\");\r\n    if (+e.value === 4) {\r\n      setAddressDisable(false);\r\n    }\r\n  };\r\n\r\n  const updateStartTime = () => {\r\n    let startTime = new Date(startDate);\r\n    startTime.setHours(startDateHours, startDateMinutes, 0);\r\n    let finalTime = `${startTime.getFullYear()}-${\r\n      startTime.getMonth() + 1\r\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n  const updateEndTime = () => {\r\n    let endTime = new Date(endDate);\r\n    endTime.setHours(endDateHours, endDateMinutes, 0);\r\n    let finalTime = `${endTime.getFullYear()}-${\r\n      endTime.getMonth() + 1\r\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n\r\n  async function handleSubmit(event: any) {\r\n    event.preventDefault();\r\n\r\n    let start_time = await updateStartTime();\r\n    let end_time = await updateEndTime();\r\n\r\n    // working with forming attendees\r\n    let departmentNumbers: any = [];\r\n    if (departments) {\r\n      let CheckForAll = departments.find((item: any) => item.value === \"all\");\r\n      if (CheckForAll) {\r\n        // * if selected all departments we return array with all\r\n        departmentNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n      } else {\r\n        // * else return selected deparments\r\n        departmentNumbers = departments.map((item: any) => {\r\n          return +item.value;\r\n        });\r\n      }\r\n    }\r\n    let usersForSendEmails: any = [];\r\n    if (usersForSend) {\r\n      usersForSendEmails = usersForSend.map((item: any) => {\r\n        return item.value;\r\n      });\r\n    }\r\n    //\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"title\", title);\r\n    formData.append(\"description\", description);\r\n    if (image[0]) {\r\n      formData.append(\"image\", image[0]);\r\n    }\r\n    formData.append(\"start\", String(start_time));\r\n    formData.append(\"deadline\", String(start_time));\r\n    formData.append(\"end\", String(end_time));\r\n    formData.append(\"place\", place);\r\n    formData.append(\"address\", address);\r\n    formData.append(\"departments\", departmentNumbers);\r\n    formData.append(\"individual_users\", usersForSendEmails);\r\n    formData.append(\"my_event\", \"false\");\r\n    formData.append(\"public\", \"true\");\r\n\r\n    API.postEventCreateData(formData)\r\n      .then((response) => {\r\n        props.OpenAlert(response);\r\n      })\r\n      .catch((error) => {\r\n        props.OpenAlert(error.request);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal__wrapper\">\r\n      <div className=\"admin-create-event-modal\">\r\n        <CloseModalButton onClose={props.onClose} />\r\n\r\n        <div className=\"admin-create-event-modal-wrapper\">\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <input\r\n              className=\"admin-create-event-modal-input-title\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              required\r\n              value={title}\r\n              placeholder=\"Введите название\"\r\n              onChange={(e) => {\r\n                setTitle(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={time}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"time\"\r\n            />\r\n            <div className=\"admin-create-event-modal__day-picker\">\r\n              <DayPickerInput\r\n                value={props.date}\r\n                onDayChange={(day) => {\r\n                  setStartDate(day);\r\n                  setEndDate(day);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"admin-create-event-modal-time\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setStartDateHours(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              {/* // colon- двоеточие */}\r\n              <div className=\"admin-create-event-modal__time-picker-colon\">\r\n                .\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setStartDateMinutes(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              &nbsp;-&nbsp;\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setEndDateHours(parseInt(e.target.value));\r\n                }}\r\n              />\r\n              {/* // colon- двоеточие */}\r\n              <div className=\"admin-create-event-modal__time-picker-colon\">\r\n                .\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"\"\r\n                placeholder=\"00\"\r\n                className=\"admin-create-event-modal__time-picker\"\r\n                onChange={(e) => {\r\n                  setEndDateMinutes(parseInt(e.target.value));\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={people}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <Select\r\n              isMulti\r\n              isClearable={true}\r\n              isSearchable={true}\r\n              options={selectDepartments}\r\n              className=\"admin-create-event-modal-select\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"Добавить департамент\"\r\n              onChange={(e: any) => {\r\n                setDepartments(e);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={people}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <Select\r\n              isMulti\r\n              isClearable={true}\r\n              isSearchable={true}\r\n              options={finalUsers}\r\n              className=\"admin-create-event-modal-select\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"Добавить гостей\"\r\n              onChange={(e: any) => {\r\n                setUsersForSend(e);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={placeImage}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <Select\r\n              options={places}\r\n              className=\"admin-create-event-modal-select_small\"\r\n              classNamePrefix=\"select\"\r\n              placeholder=\"Добавить локацию\"\r\n              onChange={handleChangeAddress}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"admin-create-event-modal-select-place\"\r\n              placeholder=\"Адрес\"\r\n              disabled={addressDisable ? true : false}\r\n              required={addressDisable ? false : true}\r\n              value={address}\r\n              onChange={(e) => {\r\n                setAddress(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={descriptionImage}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <textarea\r\n              cols={30}\r\n              rows={1}\r\n              name=\"description\"\r\n              required\r\n              value={description}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n              }}\r\n              placeholder=\"Добавить описание\"\r\n              className=\"admin-create-event-modal-input\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <img\r\n              src={fileImage}\r\n              className=\"admin-create-event-modal-icon\"\r\n              alt=\"people\"\r\n            />\r\n            <label\r\n              className=\"custom-file-upload\"\r\n              style={{ fontSize: \"14px\", padding: \"8px\" }}\r\n            >\r\n              <input\r\n                type=\"file\"\r\n                name=\"image\"\r\n                className=\"custom-file-input\"\r\n                onChange={(e) => {\r\n                  setImage(e.target.files);\r\n                }}\r\n              />\r\n              {image[0] ? image[0].name : \"Загрузите фото\"}\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"admin-create-event-modal-row\">\r\n            <div className=\"event-info-modal__admin-buttons-wrapper\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"event-info-modal__admin-buttons-save button\"\r\n              >\r\n                Сохранить\r\n              </button>\r\n              <button\r\n                onClick={props.onClose}\r\n                className=\"event-info-modal__admin-buttons-cancel button\"\r\n              >\r\n                Отменить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminEventCreateModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport withNavbarContainer from \"../../../HOC/withNavbar\";\r\n\r\n// fullcalendar\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport googleCalendarPlugin from \"@fullcalendar/google-calendar\";\r\n\r\n// imports for view style(month, week, day, list)\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\r\n\r\n// modals\r\nimport EventInfoModal from \"./modals/event-info\";\r\nimport AdminChooseModal from \"./modals/admin-choose\";\r\nimport PersonalEventCreateModal from \"./modals/create-personal-event\";\r\nimport AdminEventCreateModal from \"./modals/admin-event\";\r\nimport API, { getCookie } from \"../../../API\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Alert from \"../../shared/alert\";\r\n\r\nexport const CloseModalButton = (props: any) => {\r\n  return (\r\n    <div className=\"event-info-modal__modal\">\r\n      <button\r\n        onClick={props.onClose}\r\n        className=\"event-info-modal__modal-btn button\"\r\n      >\r\n        &times;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Calendar = (props: any) => {\r\n  const [currentEvent, setCurrentEvent] = useState<any>({});\r\n  const [role, setRole] = useState<string | undefined>(\"\");\r\n  const [editable, setEditable] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  // ! date не обязателен если есть start\r\n  const [serverEvents, setServerEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    API.getEvents(1000, 0, \"\", \"\").then((res) => {\r\n      setServerEvents(res.data.results);\r\n    });\r\n    setRole(getCookie(\"role\"));\r\n    if (getCookie('role') === \"admin\") {\r\n      setEditable(true);\r\n    } else {\r\n      setEditable(false);\r\n    }\r\n    let token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      props.history.push(\"/auth\");\r\n    }\r\n    // chanching the localization of calendar buttons\r\n    document.getElementsByClassName(\"fc-today-button\")[0].innerHTML = \"Сегодня\";\r\n    document.getElementsByClassName(\"fc-dayGridMonth-button\")[0].innerHTML =\r\n      \"Месяц\";\r\n    document.getElementsByClassName(\"fc-timeGridWeek-button\")[0].innerHTML =\r\n      \"Неделя\";\r\n    document.getElementsByClassName(\"fc-timeGridDay-button\")[0].innerHTML =\r\n      \"День\";\r\n    document.getElementsByClassName(\"fc-listMonth-button\")[0].innerHTML =\r\n      \"Лист\";\r\n  }, []);\r\n\r\n  // google calendar api integration\r\n  const events = {\r\n    googleCalendarId: \"neobistime.kg@gmail.com\",\r\n    borderColor: \"transparent\",\r\n    classNames: [\"google-calendar\"],\r\n  };\r\n\r\n  let [isEventInfoOpen, setIsEventInfoOpen] = useState<boolean>(false);\r\n  const toggleEventInfoOpen = () => {\r\n    setIsEventInfoOpen(!isEventInfoOpen);\r\n  };\r\n  const handleEventClick = (eventClickInfo: any) => {\r\n    let eventId = Number(eventClickInfo.event._def.publicId);\r\n    let findCurrentEvent = serverEvents.filter(\r\n      (event: any) => event.id === eventId\r\n    );\r\n    setCurrentEvent(findCurrentEvent[0]);\r\n    toggleEventInfoOpen();\r\n  };\r\n\r\n  const [alertType, setAlertType] = useState(\"success\");\r\n  const [alertText, setAlertText] = useState(\"\");\r\n  let [isAlertOpen, setIsAlertOpen] = useState<boolean>(false);\r\n  const toggleAlertOpen = () => {\r\n    setIsAlertOpen(!isAlertOpen);\r\n  };\r\n  const openAlert = (response: any) => {\r\n    if (response.status >= 200 && response.status <= 299) {\r\n      setAlertType(\"success\");\r\n      setAlertText(\"Все прошло без ошибок\");\r\n    } else {\r\n      setAlertType(\"error\");\r\n      setAlertText(response.response || \"непредвиденная ошибка\");\r\n    }\r\n    setIsAlertOpen(true);\r\n    setTimeout(() => {\r\n      setIsAlertOpen(false);\r\n    }, 10000);\r\n  };\r\n\r\n  const updateStartTime = (startDate: any) => {\r\n    let startTime = new Date(startDate);\r\n    let finalTime = `${startTime.getFullYear()}-${\r\n      startTime.getMonth() + 1\r\n    }-${startTime.getDate()}T${startTime.getHours()}:${startTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n  const updateEndTime = (endDate: any) => {\r\n    let endTime = new Date(endDate);\r\n    let finalTime = `${endTime.getFullYear()}-${\r\n      endTime.getMonth() + 1\r\n    }-${endTime.getDate()}T${endTime.getHours()}:${endTime.getMinutes()}:00`;\r\n    return finalTime;\r\n  };\r\n\r\n  const handleEventDropAndResize = (eventDropInfo: any) => {\r\n    let oldEvent = serverEvents.find(\r\n      (item: any) => item.id === Number(eventDropInfo.oldEvent._def.publicId)\r\n    ) || {\r\n      id: \"\",\r\n      start: \"\",\r\n      end: \"\",\r\n      deadline: \"\",\r\n      my_event: false,\r\n      place: { id: 0 },\r\n    };\r\n    let finalStart = updateStartTime(eventDropInfo.event.startStr);\r\n    oldEvent.start = finalStart;\r\n    let finalEnd = updateEndTime(eventDropInfo.event.endStr);\r\n    oldEvent.end = finalEnd;\r\n    oldEvent.deadline = finalStart;\r\n    // TODO if my_event === false we should send attendees\r\n    const dataToPatch = {\r\n      start: oldEvent.start,\r\n      end: oldEvent.end,\r\n      deadline: oldEvent.start,\r\n      my_event: String(oldEvent.my_event),\r\n      public: String(true),\r\n      place: oldEvent.place.id,\r\n    };\r\n    API.patchEventChangeData(dataToPatch, oldEvent.id)\r\n      .then((response) => {\r\n        openAlert(response);\r\n      })\r\n      .catch((error) => {\r\n        openAlert(error.request);\r\n      });\r\n  };\r\n\r\n  let [isAdminEventCreate, setIsAdminEventCreate] = useState<boolean>(false);\r\n  const toggleAdminEventCreate = () => {\r\n    setIsAdminEventCreate(!isAdminEventCreate);\r\n    updateEvents();\r\n  };\r\n\r\n  const handleDateSelect = (selectInfo: any) => {\r\n    setDate(selectInfo.start);\r\n    if (getCookie('role') === \"admin\") {\r\n      toggleAdminEventCreate();\r\n    }\r\n  };\r\n\r\n  const updateEvents = () => {\r\n    API.getEvents(1000, 0, \"\", \"\").then((res) => {\r\n      setServerEvents(res.data.results);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FullCalendar\r\n        plugins={[\r\n          dayGridPlugin,\r\n          interactionPlugin,\r\n          timeGridPlugin,\r\n          listPlugin,\r\n          googleCalendarPlugin,\r\n          bootstrapPlugin,\r\n        ]}\r\n        height=\"610px\"\r\n        headerToolbar={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,timeGridWeek,timeGridDay,listMonth\",\r\n        }}\r\n        initialView=\"dayGridMonth\"\r\n        // dateClick={handleDateClick} //TODO: edit\r\n        editable={editable}\r\n        firstDay={1}\r\n        googleCalendarApiKey=\"AIzaSyCqbA_GExr7SrXh3ZVwCvojL_AGSnXN3X8\"\r\n        eventSources={[events, serverEvents]}\r\n        dayMaxEventRows={true}\r\n        selectable={true}\r\n        selectMirror={true}\r\n        select={handleDateSelect}\r\n        eventDrop={handleEventDropAndResize}\r\n        eventResize={handleEventDropAndResize}\r\n        eventClick={handleEventClick}\r\n        slotDuration=\"00:15:00\" // интервал при изменении на календаре\r\n        locale=\"ru\"\r\n      />\r\n\r\n      {/* modals start */}\r\n      {isAlertOpen && (\r\n        <Alert type={alertType} text={alertText} onClose={toggleAlertOpen} />\r\n      )}\r\n      {isEventInfoOpen && (\r\n        <EventInfoModal onClose={toggleEventInfoOpen} event={currentEvent} />\r\n      )}\r\n      {isAdminEventCreate && (\r\n        <AdminEventCreateModal\r\n          OpenAlert={openAlert}\r\n          onClose={toggleAdminEventCreate}\r\n          date={date}\r\n        />\r\n      )}\r\n      {/* modals end */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withNavbarContainer(withRouter(Calendar));\r\n","module.exports = __webpack_public_path__ + \"static/media/address.e3d61208.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\r\nimport ConfirmExit from \"./confirm-exit\";\r\n\r\n// *icons\r\nimport avatar from \"../../../images/shared/user.svg\";\r\nimport calendar from \"../../../images/shared/calendar.svg\";\r\nimport notification from \"../../../images/shared/Notification.svg\";\r\nimport today from \"../../../images/shared/today.svg\";\r\nimport admin from \"../../../images/shared/admin.svg\";\r\nimport exit from \"../../../images/shared/exit.svg\";\r\nimport rooms from \"../../../images/shared/rooms.svg\";\r\nimport API, { getCookie } from \"../../../API\";\r\nimport withDataContainer from \"../../../HOC/withData\";\r\n\r\nconst Navbar = (props: any) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<any>({});\r\n  const [role, setRole] = useState<string | undefined>(\"\");\r\n  const [department, setDepartment] = useState<any>({});\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setRole(getCookie(\"role\"));\r\n    API.getUserInfo().then((data) => {\r\n      setUserInfo(data.data);\r\n      let departmentNumber = props.departments.filter(\r\n        (department: any) => +department.value === +data.data.department_id\r\n      );\r\n      setDepartment(departmentNumber[0]);\r\n    });\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      props.history.push('/auth')\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/personal_office\" className=\"link\">\r\n        <div className=\"navbar__person-info\">\r\n          <div className=\"navbar__person-info-image-container\">\r\n            <img\r\n              className=\"navbar__person-info-image\"\r\n              src={userInfo.profile_img || avatar}\r\n              alt=\"default avatar\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"navbar__person-info-text_wrapper\">\r\n            <p className=\"navbar__person-info-name\">{userInfo.name_surname}</p>\r\n            <p className=\"navbar__person-info-text\">\r\n              {department.label || \"Neobis\"} department{\" \"}\r\n            </p>\r\n            <p className=\"navbar__person-info-text\">{userInfo.email}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className=\"navbar__content\">\r\n        <ul className=\"navbar__list\">\r\n          <NavLink\r\n            exact\r\n            to=\"/notifications\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={notification}\r\n              className=\"navbar__list-image navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Уведомления</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={calendar}\r\n              className=\"navbar__list-image navbar__list-image_events navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Календарь</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/today\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={today}\r\n              className=\"navbar__list-image navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Расписание дня</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/rooms\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={rooms}\r\n              className=\"navbar__list-image navbar__list-image_rooms navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Комнаты</li>\r\n          </NavLink>\r\n\r\n          {role === \"admin\" ? (\r\n            <NavLink\r\n              exact\r\n              to=\"/lead_admin\"\r\n              activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n              className=\"navbar__list-link\"\r\n            >\r\n              <img\r\n                src={admin}\r\n                className=\"navbar__list-image navbar__list-image_filter\"\r\n                alt=\"icon\"\r\n              />\r\n              <li className=\"navbar__list-item\">Админ панель</li>\r\n            </NavLink>\r\n          ) : null}\r\n\r\n          <div className=\"navbar__list-link\" onClick={toggleModal}>\r\n            <img src={exit} className=\"navbar__list-image\" alt=\"icon\" />\r\n            <button className=\"navbar__button navbar__list-item\">Выйти</button>\r\n          </div>\r\n        </ul>\r\n        {isModalOpen && <ConfirmExit onClose={toggleModal} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(withRouter(Navbar));\r\n","import Navbar from \"./navbar.tsx\";\r\n\r\nexport default Navbar;\r\n","module.exports = __webpack_public_path__ + \"static/media/all_events.4121eeec.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-clock.54c4ba6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-description.3f90eec2.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\r\nimport ConfirmExit from \"../../../shared/navbar/confirm-exit\";\r\nimport API, { getCookie } from \"../../../../API\";\r\n\r\n// *icons\r\nimport avatar from \"../../../../images/shared/user.svg\";\r\nimport exit from \"../../../../images/shared/exit.svg\";\r\nimport events from \"../../../../images/shared/all_events.svg\";\r\nimport peoples from \"../../../../images/shared/admin_members.svg\";\r\nimport create_event from \"../../../../images/shared/edit.svg\";\r\nimport stat from \"../../../../images/shared/adminn_stat.svg\";\r\nimport calendar from \"../../../../images/shared/calendar.svg\";\r\nimport withDataContainer from \"../../../../HOC/withData\";\r\n\r\nconst AdminNavbar = (props: any) => {\r\n  let [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<any>({});\r\n  const [department, setDepartment] = useState<any>({});\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n  useEffect(() => {\r\n    API.getUserInfo().then((data) => {\r\n      setUserInfo(data.data);\r\n      let departmentNumber = props.departments.filter(\r\n        (department: any) => +department.value === +data.data.department_id\r\n      );\r\n      setDepartment(departmentNumber[0]);\r\n    });\r\n    let token = localStorage.getItem('token')\r\n    if (!token) {\r\n      props.history.push(\"/auth\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/personal_office\" className=\"link\">\r\n        <div className=\"navbar__person-info\">\r\n          <div className=\"navbar__person-info-image-container\">\r\n            <img\r\n              className=\"navbar__person-info-image\"\r\n              src={userInfo.profile_img || avatar}\r\n              alt=\"default avatar\"\r\n            />\r\n          </div>\r\n          <div className=\"navbar__person-info-text_wrapper\">\r\n            <p className=\"navbar__person-info-name\">{userInfo.name_surname}</p>\r\n            <p className=\"navbar__person-info-text\">\r\n              {department.label || \"Neobis\"} department{\" \"}\r\n            </p>\r\n            <p className=\"navbar__person-info-text\">{userInfo.email}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className=\"navbar__content\">\r\n        <ul className=\"navbar__list\">\r\n          <NavLink\r\n            exact\r\n            to=\"/\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={calendar}\r\n              className=\"navbar__list-image navbar__list-image_events navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">На главную</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/lead_admin/end_events\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={peoples}\r\n              className=\"navbar__list-image navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Мероприятия</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/lead_admin/create_event\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={create_event}\r\n              className=\"navbar__list-image navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Бронирование</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/lead_admin\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={stat}\r\n              className=\"navbar__list-image navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Статистика</li>\r\n          </NavLink>\r\n          <NavLink\r\n            exact\r\n            to=\"/lead_admin/all_events\"\r\n            activeStyle={{ backgroundColor: \"#1DA48B\" }}\r\n            className=\"navbar__list-link\"\r\n          >\r\n            <img\r\n              src={events}\r\n              className=\"navbar__list-image navbar__list-image_events navbar__list-image_filter\"\r\n              alt=\"icon\"\r\n            />\r\n            <li className=\"navbar__list-item\">Все события</li>\r\n          </NavLink>\r\n          <div className=\"navbar__list-link\" onClick={toggleModal}>\r\n            <img src={exit} className=\"navbar__list-image\" alt=\"icon\" />\r\n            <button className=\"navbar__button navbar__list-item\">Выйти</button>\r\n          </div>\r\n        </ul>\r\n        {isModalOpen && <ConfirmExit onClose={toggleModal} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withDataContainer(withRouter(AdminNavbar));\r\n","import AdminNavbar from \"./admin-navbar.tsx\";\r\n\r\nexport default AdminNavbar;\r\n","module.exports = __webpack_public_path__ + \"static/media/Group 81.d740202d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Notification.7a7bf248.svg\";","module.exports = __webpack_public_path__ + \"static/media/today.c5ff23fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin.a6e6e580.svg\";","module.exports = __webpack_public_path__ + \"static/media/rooms.ac3ed39c.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin_members.377b5698.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.70454fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/adminn_stat.08d03dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-arrow-more-info.3f37dd36.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-edit.9ff6b61a.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-address.f2fd0a00.svg\";","module.exports = __webpack_public_path__ + \"static/media/modal-file.83e2cf3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert_success.4190ac11.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert_error.4707e09c.svg\";","import ErrorIndicator from \"./error-indicator.jsx\";\r\n\r\nexport default ErrorIndicator;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div>\r\n      <p>Oops!</p>\r\n      <p>Something went wrong!</p>\r\n      <Link to='/'>\r\n        Go Back\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry.tsx\";\r\n\r\nexport default ErrorBoundry;\r\n","import React from \"react\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends React.Component {\r\n\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// export default class ErrorBoundry extends React.Component {\r\n//   constructor(props: any) {\r\n//     super(props);\r\n//     this.state = { hasError: false };\r\n//   }\r\n\r\n//   static getDerivedStateFromError(error) {\r\n//     // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n//     return { hasError: true };\r\n//   }\r\n\r\n//   componentDidCatch(error, errorInfo) {\r\n//     this.setState({ hasError: true });\r\n//   }\r\n\r\n//   render() {\r\n//     if (this.state.hasError) {\r\n//       // Можно отрендерить запасной UI произвольного вида\r\n//       return <ErrorIndicator />;\r\n//     }\r\n\r\n//     return this.props.children; \r\n//   }\r\n// }\r\n","import React, { Suspense, lazy } from \"react\";\nimport \"./App.scss\";\nimport './styles/index.scss'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// common components\nimport ErrorBoundry from \"./components/shared/error-boundry\";\n\n// pages\nimport Calendar from \"./components/pages/calendar/calendar\";\nimport Spinner from \"./components/shared/spinner/spinner\";\nconst Authorization = lazy(() => import('./components/pages/auth'));\nconst Registration = lazy(() => import('./components/pages/registration'));\nconst RecoveryPassword = lazy(() => import('./components/pages/recovery-password'));\nconst ChangePassword = lazy(() => import('./components/pages/recovery-password/change-password'));\nconst Notification = lazy(() => import('./components/pages/notifications'));\nconst TodayTimetable = React.lazy(() => import('./components/pages/today-timetable'));\nconst EventInfo = React.lazy(() => import('./components/pages/single-event-info/single-event-info'));\nconst ChangePersonalData = React.lazy(() => import('./components/pages/change-personal-data'));\nconst AdminStat = React.lazy(() => import('./components/pages/admin/admin-statistics'));\nconst PersonalOffice = React.lazy(() => import('./components/pages/person-cabinet/person-cabinet'));\nconst EndEvents = React.lazy(() => import('./components/pages/admin/admin-end-events/admin-end-events'));\nconst EndEventInfo = React.lazy(() => import('./components/pages/admin/admin-end-events/table/end-event-info'));\nconst CreateEventPage = React.lazy(() => import('./components/pages/admin/admin-create-event'));\nconst EditEventsPage = React.lazy(() => import('./components/pages/admin/admin-edit-events'));\nconst RoomsList = React.lazy(() => import('./components/pages/rooms/rooms-list'));\nconst RoomsEvent = React.lazy(() => import('./components/pages/rooms/rooms-event'));\n\nconst App: React.FC = () => {\n  return (\n    <ErrorBoundry>\n      <Router>\n        <Suspense fallback={<Spinner />} >\n          <div className=\"main__wrapper\">\n            <Switch>\n              <Route exact path=\"/\" component={Calendar} />\n              <Route exact path=\"/auth\" component={Authorization} />\n              <Route exact path=\"/registration\" component={Registration} />\n              <Route exact path=\"/recovery_password\" component={RecoveryPassword} />\n              <Route exact path=\"/change_password\" component={ChangePassword} />\n              <Route exact path=\"/notifications\" component={Notification} />\n              <Route exact path=\"/today\" component={TodayTimetable} />\n              <Route exact path=\"/today/:id\" component={EventInfo} />\n              <Route exact path=\"/change_personal_data\" component={ChangePersonalData} />\n              <Route exact path=\"/personal_office\" component={PersonalOffice} />\n              <Route exact path=\"/rooms\" component={RoomsList} />\n              <Route exact path=\"/rooms/:id\" component={RoomsEvent} />\n              <Route exact path=\"/lead_admin\" component={AdminStat} />\n              <Route exact path=\"/lead_admin/end_events\" component={EndEvents} />\n              <Route exact path=\"/lead_admin/end_event/:id\" component={EndEventInfo} />\n              <Route exact path=\"/lead_admin/create_event\" component={CreateEventPage} />\n              <Route exact path=\"/lead_admin/create_event/:id\" component={CreateEventPage} />\n              <Route exact path=\"/lead_admin/all_events\" component={EditEventsPage} />\n\n              {/* <Route path=\"*\" component={NotFound} /> */}\n            </Switch>\n          </div>\n        </Suspense>\n      </Router>\n    </ErrorBoundry>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}